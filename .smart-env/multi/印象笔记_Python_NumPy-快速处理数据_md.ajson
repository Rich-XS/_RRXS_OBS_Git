
"smart_sources:印象笔记/Python/NumPy-快速处理数据.md": {"path":"印象笔记/Python/NumPy-快速处理数据.md","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"f915e0a8fe64305d32f3613c518cd5ecfc1764a334ddf4f7315028c4aa7aca51","at":1757413833898},"class_name":"SmartSource","last_import":{"mtime":1478794407000,"size":64401,"at":1757413833931,"hash":"f915e0a8fe64305d32f3613c518cd5ecfc1764a334ddf4f7315028c4aa7aca51"},"blocks":{"#---frontmatter---":[1,3],"#":[4,9],"##{1}":[4,5],"##{2}":[6,6],"##{3}":[7,7],"##{4}":[8,9],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]":[10,584],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#{1}":[12,17],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)":[18,247],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#{1}":[20,25],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.1　创建](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)":[26,100],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.1　创建](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)#{1}":[28,100],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.2　存取元素](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)":[101,128],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.2　存取元素](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)#{1}":[103,128],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)":[129,157],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{1}":[131,152],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{2}":[153,154],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{3}":[155,155],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{4}":[156,157],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)":[158,223],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{1}":[160,167],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{2}":[168,169],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{3}":[170,170],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{4}":[171,172],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{5}":[173,178],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{6}":[179,180],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{7}":[181,181],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{8}":[182,183],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{9}":[184,223],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.5　内存结构](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5)":[224,247],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.5　内存结构](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5)#{1}":[226,247],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)":[248,461],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#{1}":[250,344],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)":[345,413],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{1}":[347,348],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{2}":[349,350],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{3}":[351,351],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{4}":[352,352],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{5}":[353,354],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{6}":[355,413],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.2　ufunc的方法[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)":[414,461],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.2　ufunc的方法[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)#{1}":[416,461],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.3　矩阵运算](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)":[462,515],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.3　矩阵运算](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)#{1}":[464,515],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)":[516,584],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#{1}":[518,547],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)":[548,570],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#{1}":[550,562],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#上一篇文章":[563,566],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#上一篇文章#{1}":[565,566],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#下一篇文章":[567,570],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#下一篇文章#{1}":[569,570],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索":[571,584],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{1}":[575,576],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{2}":[577,578],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{3}":[579,579],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{4}":[580,580],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{5}":[581,582],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{6}":[583,584]},"outlinks":[{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":4},{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":6},{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":7},{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":8},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":10},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":18},{"title":"函数库的导入","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":20},{"title":"本书的示例程序假设用以下推荐的方式导入NumPy函数库:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":22},{"title":"**import** **numpy** **as** **np**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":24},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":26},{"title":"2.1.1　创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":26},{"title":"首先需要创建数组才能对其进行其它操作。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":28},{"title":"我们可以通过给array函数传递Python的序列对象创建数组，如果传递的是多层嵌套的序列，将创建多维数组(下例中的变量c):","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":30},{"title":"**>>>** a = np.array(1, 2, 3, 4)**>>>** b = np.array((5, 6, 7, 8))**>>>** c = np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10)**>>>** barray(5, 6, 7, 8)**>>>** carray(1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)**>>>** c.dtypedtype('int32')","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":32},{"title":"数组的大小可以通过其shape属性获得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":34},{"title":"**>>>** a.shape(4,)**>>>** c.shape(3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":36},{"title":"数组a的shape只有一个元素，因此它是一维数组。而数组c的shape有两个元素，因此它是二维数组，其中第0轴的长度为3，第1轴的长度为4。还可以通过修改数组的shape属性，在保持数组元素个数不变的情况下，改变数组每个轴的长度。下面的例子将数组c的shape改为(4,3)，注意从(3,4)改为(4,3)并不是对数组进行转置，而只是改变每个轴的大小，数组元素在内存中的位置并没有改变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":38},{"title":"**>>>** c.shape = 4,3**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":40},{"title":"当某个轴的元素为-1时，将根据数组元素的个数自动计算此轴的长度，因此下面的程序将数组c的shape改为了(2,6)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":42},{"title":"**>>>** c.shape = 2,-1**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":44},{"title":"使用数组的reshape方法，可以创建一个改变了尺寸的新数组，原数组的shape保持不变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":46},{"title":"**>>>** d = a.reshape((2,2))**>>>** darray(1, 2, 3, 4)**>>>** aarray(1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":48},{"title":"数组a和d其实共享数据存储内存区域，因此修改其中任意一个数组的元素都会同时修改另外一个数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":50},{"title":"**>>>** a1 = 100 _# 将数组a的第一个元素改为100_**>>>** d _# 注意数组d中的2也被改变了_array( 1, 100, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":52},{"title":"数组的元素类型可以通过dtype属性获得。上面例子中的参数序列的元素都是整数，因此所创建的数组的元素类型也是整数，并且是32bit的长整型。可以通过dtype参数在创建时指定元素类型:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":54},{"title":"**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.float)array( 1., 2., 3., 4., 4., 5., 6., 7., 7., 8., 9., 10.)**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.complex)array( 1.+0.j, 2.+0.j, 3.+0.j, 4.+0.j, 4.+0.j, 5.+0.j, 6.+0.j, 7.+0.j, 7.+0.j, 8.+0.j, 9.+0.j, 10.+0.j)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":56},{"title":"上面的例子都是先创建一个Python序列，然后通过array函数将其转换为数组，这样做显然效率不高。因此NumPy提供了很多专门用来创建数组的函数。下面的每个函数都有一些关键字参数，具体用法请查看函数说明。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":58},{"title":"arange函数类似于python的range函数，通过指定开始值、终值和步长来创建一维数组，注意数组不包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":60},{"title":"**>>>** np.arange(0,1,0.1)array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":62},{"title":"linspace函数通过指定开始值、终值和元素个数来创建一维数组，可以通过endpoint关键字指定是否包括终值，缺省设置是包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":64},{"title":"**>>>** np.linspace(0, 1, 12)array( 0. , 0.09090909, 0.18181818, 0.27272727, 0.36363636, 0.45454545, 0.54545455, 0.63636364, 0.72727273, 0.81818182, 0.90909091, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":66},{"title":"logspace函数和linspace类似，不过它创建等比数列，下面的例子产生1(10^0)到100(10^2)、有20个元素的等比数列:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":68},{"title":"**>>>** np.logspace(0, 2, 20)array( 1. , 1.27427499, 1.62377674, 2.06913808, 2.6366509 , 3.35981829, 4.2813324 , 5.45559478, 6.95192796, 8.8586679 , 11.28837892, 14.38449888, 18.32980711, 23.35721469, 29.76351442, 37.92690191, 48.32930239, 61.58482111, 78.47599704, 100. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":70},{"title":"此外，使用frombuffer, fromstring, fromfile等函数可以从字节序列创建数组，下面以fromstring为例:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":73},{"title":"**>>>** s = \"abcdefgh\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":75},{"title":"Python的字符串实际上是字节序列，每个字符占一个字节，因此如果从字符串s创建一个8bit的整数数组的话，所得到的数组正好就是字符串中每个字符的ASCII编码:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":77},{"title":"**>>>** np.fromstring(s, dtype=np.int8)array( 97, 98, 99, 100, 101, 102, 103, 104, dtype=int8)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":79},{"title":"如果从字符串s创建16bit的整数数组，那么两个相邻的字节就表示一个整数，把字节98和字节97当作一个16位的整数，它的值就是98*256+97 = 25185。可以看出内存中是以little endian(低位字节在前)方式保存数据的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":81},{"title":"**>>>** np.fromstring(s, dtype=np.int16)array(25185, 25699, 26213, 26727, dtype=int16)**>>>** 98*256+9725185","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":83},{"title":"如果把整个字符串转换为一个64位的双精度浮点数数组，那么它的值是:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":85},{"title":"**>>>** np.fromstring(s, dtype=np.float)array( 8.54088322e+194)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":87},{"title":"显然这个例子没有什么意义，但是可以想象如果我们用C语言的二进制方式写了一组double类型的数值到某个文件中，那们可以从此文件读取相应的数据，并通过fromstring函数将其转换为float64类型的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":89},{"title":"我们可以写一个Python的函数，它将数组下标转换为数组中对应的值，然后使用此函数创建数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":91},{"title":"**>>>** **def** func(i):**...** **return** i%4+1**...****>>>** np.fromfunction(func, (10,))array( 1., 2., 3., 4., 1., 2., 3., 4., 1., 2.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":93},{"title":"fromfunction函数的第一个参数为计算每个数组元素的函数，第二个参数为数组的大小(shape)，因为它支持多维数组，所以第二个参数必须是一个序列，本例中用(10,)创建一个10元素的一维数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":95},{"title":"下面的例子创建一个二维数组表示九九乘法表，输出的数组a中的每个元素ai, j都等于func2(i, j)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":97},{"title":"**>>>** **def** func2(i, j):**...** **return** (i+1) * (j+1)**...****>>>** a = np.fromfunction(func2, (9,9))**>>>** aarray( 1., 2., 3., 4., 5., 6., 7., 8., 9., 2., 4., 6., 8., 10., 12., 14., 16., 18., 3., 6., 9., 12., 15., 18., 21., 24., 27., 4., 8., 12., 16., 20., 24., 28., 32., 36., 5., 10., 15., 20., 25., 30., 35., 40., 45., 6., 12., 18., 24., 30., 36., 42., 48., 54., 7., 14., 21., 28., 35., 42., 49., 56., 63., 8., 16., 24., 32., 40., 48., 56., 64., 72., 9., 18., 27., 36., 45., 54., 63., 72., 81.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":99},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":101},{"title":"2.1.2　存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":101},{"title":"数组元素的存取方法和Python的标准方法相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":103},{"title":"**>>>** a = np.arange(10)**>>>** a5 _# 用整数作为下标可以获取数组中的某个元素_5**>>>** a3:5 _# 用范围作为下标获取数组的一个切片，包括a3不包括a5_array(3, 4)**>>>** a:5 _# 省略开始下标，表示从a0开始_array(0, 1, 2, 3, 4)**>>>** a:-1 _# 下标可以使用负数，表示从数组后往前数_array(0, 1, 2, 3, 4, 5, 6, 7, 8)**>>>** a2:4 = 100,101 _# 下标还可以用来修改元素的值_**>>>** aarray( 0, 1, 100, 101, 4, 5, 6, 7, 8, 9)**>>>** a1:-1:2 _# 范围中的第三个参数表示步长，2表示隔一个元素取一个元素_array( 1, 101, 5, 7)**>>>** a::-1 _# 省略范围的开始下标和结束下标，步长为-1，整个数组头尾颠倒_array( 9, 8, 7, 6, 5, 4, 101, 100, 1, 0)**>>>** a5:1:-2 _# 步长为负数时，开始下标必须大于结束下标_array( 5, 101)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":105},{"title":"和Python的列表序列不同，通过下标范围获取的新的数组是原始数组的一个视图。它与原始数组共享同一块数据空间：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":107},{"title":"**>>>** b = a3:7 _# 通过下标范围产生一个新的数组b，b和a共享同一块数据空间_**>>>** barray(101, 4, 5, 6)**>>>** b2 = -10 _# 将b的第2个元素修改为-10_**>>>** barray(101, 4, -10, 6)**>>>** a _# a的第5个元素也被修改为10_array( 0, 1, 100, 101, 4, -10, 6, 7, 8, 9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":109},{"title":"除了使用下标范围存取元素之外，NumPy还提供了两种存取元素的高级方法。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":111},{"title":"**使用整数序列**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":113},{"title":"当使用整数序列对数组元素进行存取时，将使用整数序列中的每个元素作为下标，整数序列可以是列表或者数组。使用整数序列作为下标获得的数组不和原始数组共享数据空间。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":115},{"title":"**>>>** x = np.arange(10,1,-1)**>>>** xarray(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3, 3, 1, 8 _# 获取x中的下标为3, 3, 1, 8的4个元素，组成一个新的数组_array(7, 7, 9, 2)**>>>** b = xnp.array(3,3,-3,8) _#下标可以是负数_**>>>** b2 = 100**>>>** barray(7, 7, 100, 2)**>>>** x _# 由于b和x不共享数据空间，因此x中的值并没有改变_array(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3,5,1 = -1, -2, -3 _# 整数序列下标也可以用来修改元素的值_**>>>** xarray(10, -3, 8, -1, 6, -2, 4, 3, 2)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":117},{"title":"**使用布尔数组**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":119},{"title":"当使用布尔数组b作为下标存取数组x中的元素时，将收集数组x中所有在数组b中对应下标为True的元素。使用布尔数组作为下标获得的数组不和原始数组共享数据空间，注意这种方式只对应于布尔数组，不能使用布尔列表。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":121},{"title":"**>>>** x = np.arange(5,0,-1)**>>>** xarray(5, 4, 3, 2, 1)**>>>** xnp.array(True, False, True, False, False)**>>>** _# 布尔数组中下标为0，2的元素为True，因此获取x中下标为0,2的元素_array(5, 3)**>>>** xTrue, False, True, False, False**>>>** _# 如果是布尔列表，则把True当作1, False当作0，按照整数序列方式获取x中的元素_array(4, 5, 4, 5, 5)**>>>** xnp.array(True, False, True, True)**>>>** _# 布尔数组的长度不够时，不够的部分都当作False_array(5, 3, 2)**>>>** xnp.array(True, False, True, True) = -1, -2, -3**>>>** _# 布尔数组下标也可以用来修改元素_**>>>** xarray(-1, 4, -2, -3, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":123},{"title":"布尔数组一般不是手工产生，而是使用布尔运算的ufunc函数产生，关于ufunc函数请参照 ufunc运算 一节。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":125},{"title":"**>>>** x = np.random.rand(10) _# 产生一个长度为10，元素值为0-1的随机数的数组_**>>>** xarray( 0.72223939, 0.921226 , 0.7770805 , 0.2055047 , 0.17567449, 0.95799412, 0.12015178, 0.7627083 , 0.43260184, 0.91379859)**>>>** x>0.5**>>>** _# 数组x中的每个元素和0.5进行大小比较，得到一个布尔数组，True表示x中对应的值大于0.5_array( True, True, True, False, False, True, False, True, False, True, dtype=bool)**>>>** xx>0.5**>>>** _# 使用x>0.5返回的布尔数组收集x中的元素，因此得到的结果是x中所有大于0.5的元素的数组_array( 0.72223939, 0.921226 , 0.7770805 , 0.95799412, 0.7627083 , 0.91379859)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":127},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":129},{"title":"2.1.3　多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":129},{"title":"图2.1","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro02","line":131},{"title":"多维数组的存取和一维数组类似，因为多维数组有多个轴，因此它的下标需要用多个值来表示，NumPy采用组元(tuple)作为数组的下标。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":131},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","line":137},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","line":149},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":158},{"title":"在C语言中我们可以通过struct关键字定义结构类型，结构中的字段占据连续的内存空间，每个结构体占用的内存大小都相同，因此可以很容易地定义结构数组。和C语言一样，在NumPy中也很容易对这种结构数组进行操作。只要NumPy中的结构定义和C语言中的定义相同，NumPy就可以很方便地读取C语言的结构数组的二进制数据，转换为NumPy的结构数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":160},{"title":"假设我们需要定义一个结构数组，它的每个元素都有name, age和weight字段。在NumPy中可以如下定义：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":162},{"title":"**import** **numpy** **as** **np**persontype = np.dtype({ 'names':'name', 'age', 'weight', 'formats':'S32','i', 'f'})a = np.array((\"Zhang\",32,75.5),(\"Wang\",24,65.2), dtype=persontype)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":164},{"title":"我们先创建一个dtype对象persontype，通过其字典参数描述结构类型的各个字段。字典有两个关键字：names，formats。每个关键字对应的值都是一个列表。names定义结构中的每个字段名，而formats则定义每个字段的类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":166},{"title":"**S32** : 32个字节的字符串类型，由于结构中的每个元素的大小必须固定，因此需要指定字符串的长度","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":168},{"title":"**i** : 32bit的整数类型，相当于np.int32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":170},{"title":"**f** : 32bit的单精度浮点数类型，相当于np.float32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":171},{"title":"然后我们调用array函数创建数组，通过关键字参数 dtype=persontype， 指定所创建的数组的元素类型为结构persontype。运行上面程序之后，我们可以在IPython中执行如下的语句查看数组a的元素类型","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":173},{"title":"**>>>** a.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":175},{"title":"这里我们看到了另外一种描述结构类型的方法： 一个包含多个组元的列表，其中形如 (字段名, 类型描述) 的组元描述了结构中的每个字段。类型描述前面为我们添加了 '|', '<' 等字符，这些字符用来描述字段值的字节顺序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":177},{"title":"**|** : 忽视字节顺序","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":179},{"title":"**<** : 低位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":181},{"title":"**>** : 高位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":182},{"title":"结构数组的存取方式和一般数组相同，通过下标能够取得其中的元素，注意元素的值看上去像是组元，实际上它是一个结构：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":184},{"title":"**>>>** a0('Zhang', 32, 75.5)**>>>** a0.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":186},{"title":"a0是一个结构元素，它和数组a共享内存数据，因此可以通过修改它的字段，改变原始数组中的对应字段：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":188},{"title":"**>>>** c = a1**>>>** c\"name\" = \"Li\"**>>>** a1\"name\"\"Li\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":190},{"title":"结构像字典一样可以通过字符串下标获取其对应的字段值：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":192},{"title":"**>>>** a0\"name\"'Zhang'","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":194},{"title":"我们不但可以获得结构元素的某个字段，还可以直接获得结构数组的字段，它返回的是原始数组的视图，因此可以通过修改b0改变a0\"age\"：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":196},{"title":"**>>>** b=a:\"age\" _# 或者a\"age\"_**>>>** barray(32, 24)**>>>** b0 = 40**>>>** a0\"age\"40","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":198},{"title":"通过调用a.tostring或者a.tofile方法，可以直接输出数组a的二进制形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":200},{"title":"**>>>** a.tofile(\"test.bin\")","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":202},{"title":"利用下面的C语言程序可以将test.bin文件中的数据读取出来。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":204},{"title":"内存对齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":206},{"title":"C语言的结构体为了内存寻址方便，会自动的添加一些填充用的字节，这叫做内存对齐。例如如果把下面的name32改为name30的话，由于内存对齐问题，在name和age中间会填补两个字节，最终的结构体大小不会改变。因此如果numpy中的所配置的内存大小不符合C语言的对齐规范的话，将会出现数据错位。为了解决这个问题，在创建dtype对象时，可以传递参数align=True，这样numpy的结构数组的内存对齐和C语言的结构体就一致了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":208},{"title":"#include <stdio.h> **struct** person{ char name32; int age; float weight;}; **struct** person p2; void main (){ FILE *fp; int i; fp=fopen(\"test.bin\",\"rb\"); fread(p, **sizeof**(**struct** person), 2, fp); fclose(fp); **for**(i=0;i<2;i++) printf(\"%s %d %f**n**\", pi.name, pi.age, pi.weight); getchar();}","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":210},{"title":"结构类型中可以包括其它的结构类型，下面的语句创建一个有一个字段f1的结构，f1的值是另外一个结构，它有字段f2，其类型为16bit整数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":212},{"title":"**>>>** np.dtype(('f1', ('f2', np.int16)))dtype(('f1', ('f2', '<i2')))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":214},{"title":"当某个字段类型为数组时，用组元的第三个参数表示，下面描述的f1字段是一个shape为(2,3)的双精度浮点数组:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":216},{"title":"**>>>** np.dtype(('f0', 'i4'), ('f1', 'f8', (2, 3)))dtype(('f0', '<i4'), ('f1', '<f8', (2, 3)))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":218},{"title":"用下面的字典参数也可以定义结构类型，字典的关键字为结构中字段名，值为字段的类型描述，但是由于字典的关键字是没有顺序的，因此字段的顺序需要在类型描述中给出，类型描述是一个组元，它的第二个值给出字段的字节为单位的偏移量，例如age字段的偏移量为25个字节：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":220},{"title":"**>>>** np.dtype({'surname':('S25',0),'age':(np.uint8,25)})dtype(('surname', '|S25'), ('age', '|u1'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":222},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":224},{"title":"2.1.5　内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":224},{"title":"图2.3","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpymemorystruct","line":226},{"title":"下面让我们来看看ndarray数组对象是如何在内存中储存的。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":226},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","line":228},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":248},{"title":"ufunc是universal function的缩写，它是一种能对数组的每个元素进行操作的函数。NumPy内置的许多ufunc函数都是在C语言级别实现的，因此它们的计算速度非常快。让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":250},{"title":"**>>>** x = np.linspace(0, 2*np.pi, 10)# 对数组x中的每个元素进行正弦计算，返回一个同样大小的新数组**>>>** y = np.sin(x)**>>>** yarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":252},{"title":"先用linspace产生一个从0到2*PI的等距离的10个数，然后将其传递给sin函数，由于np.sin是一个ufunc函数，因此它对x中的每个元素求正弦值，然后将结果返回，并且赋值给y。计算之后x中的值并没有改变，而是新创建了一个数组保存结果。如果我们希望将sin函数所计算的结果直接覆盖到数组x上去的话，可以将要被覆盖的数组作为第二个参数传递给ufunc函数。例如：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":254},{"title":"**>>>** t = np.sin(x,x)**>>>** xarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)**>>>** id(t) == id(x)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":256},{"title":"sin函数的第二个参数也是x，那么它所做的事情就是对x中的每给值求正弦值，并且把结果保存到x中的对应的位置中。此时函数的返回值仍然是整个计算的结果，只不过它就是x，因此两个变量的id是相同的(变量t和变量x指向同一块内存区域)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":258},{"title":"我用下面这个小程序，比较了一下numpy.math和Python标准库的math.sin的计算速度：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":260},{"title":"**import** **time****import** **math****import** **numpy** **as** **np** x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = math.sin(t)**print** \"math.sin:\", time.clock() - start x = i * 0.001 **for** i **in** xrange(1000000)x = np.array(x)start = time.clock()np.sin(x,x)**print** \"numpy.sin:\", time.clock() - start _# 输出__# math.sin: 1.15426932753__# numpy.sin: 0.0882399858083_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":262},{"title":"在我的电脑上计算100万次正弦值，numpy.sin比math.sin快10倍多。这得利于numpy.sin在C语言级别的循环计算。numpy.sin同样也支持对单个数值求正弦，例如：numpy.sin(0.5)。不过值得注意的是，对单个数的计算math.sin则比numpy.sin快得多了，让我们看下面这个测试程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":264},{"title":"x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = np.sin(t)**print** \"numpy.sin loop:\", time.clock() - start _# 输出__# numpy.sin loop: 5.72166965355_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":266},{"title":"请注意numpy.sin的计算速度只有math.sin的1/5。这是因为numpy.sin为了同时支持数组和单个值的计算，其C语言的内部实现要比math.sin复杂很多，如果我们同样在Python级别进行循环的话，就会看出其中的差别了。此外，numpy.sin返回的数的类型和math.sin返回的类型有所不同，math.sin返回的是Python的标准float类型，而numpy.sin则返回一个numpy.float64类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":268},{"title":"**>>>** type(math.sin(0.5))<type 'float'>**>>>** type(np.sin(0.5))<type 'numpy.float64'>","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":270},{"title":"通过上面的例子我们了解了如何最有效率地使用math库和numpy库中的数学函数。因为它们各有长短，因此在导入时不建议使用*号全部载入，而是应该使用import numpy as np的方式载入，这样我们可以根据需要选择合适的函数调用。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":272},{"title":"NumPy中有众多的ufunc函数为我们提供各式各样的计算。除了sin这种单输入函数之外，还有许多多个输入的函数，add函数就是一个最常用的例子。先来看一个例子:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":274},{"title":"**>>>** a = np.arange(0,4)**>>>** aarray(0, 1, 2, 3)**>>>** b = np.arange(1,5)**>>>** barray(1, 2, 3, 4)**>>>** np.add(a,b)array(1, 3, 5, 7)**>>>** np.add(a,b,a)array(1, 3, 5, 7)**>>>** aarray(1, 3, 5, 7)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":276},{"title":"add函数返回一个新的数组，此数组的每个元素都为两个参数数组的对应元素之和。它接受第3个参数指定计算结果所要写入的数组，如果指定的话，add函数就不再产生新的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":278},{"title":"由于Python的操作符重载功能，计算两个数组相加可以简单地写为a+b，而np.add(a,b,a)则可以用a+=b来表示。下面是数组的运算符和其对应的ufunc函数的一个列表，注意除号\"/\"的意义根据是否激活__future__.division有所不同。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":280},{"title":"数组对象支持这些操作符，极大地简化了算式的编写，不过要注意如果你的算式很复杂，并且要运算的数组很大的话，会因为产生大量的中间结果而降低程序的运算效率。例如：假设a b c三个数组采用算式x=a*b+c计算，那么它相当于:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":294},{"title":"t = a * bx = t + c**del** t","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":296},{"title":"也就是说需要产生一个数组t保存乘法的计算结果，然后再产生最后的结果数组x。我们可以通过手工将一个算式分解为x = a*b; x += c，以减少一次内存分配。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":298},{"title":"通过组合标准的ufunc函数的调用，可以实现各种算式的数组计算。不过有些时候这种算式不易编写，而针对每个元素的计算函数却很容易用Python实现，这时可以用frompyfunc函数将一个计算单个元素的函数转换成ufunc函数。这样就可以方便地用所产生的ufunc函数对数组进行计算了。让我们来看一个例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":300},{"title":"图2.4","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro01","line":302},{"title":"我们想用一个分段函数描述三角波，三角波的样子如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":302},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","line":304},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":345},{"title":"当我们使用ufunc函数对两个数组进行计算时，ufunc函数会对这两个数组的对应元素进行计算，因此它要求这两个数组有相同的大小(shape相同)。如果两个数组的shape不同的话，会进行如下的广播(broadcasting)处理：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":347},{"title":"让所有输入数组都向其中shape最长的数组看齐，shape中不足的部分都通过在前面加1补齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":349},{"title":"输出数组的shape是输入数组shape的各个轴上的最大值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":351},{"title":"如果输入数组的某个轴和输出数组的对应轴的长度相同或者其长度为1时，这个数组能够用来计算，否则出错","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":352},{"title":"当输入数组的某个轴的长度为1时，沿着此轴运算时都用此轴上的第一组值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":353},{"title":"上述4条规则理解起来可能比较费劲，让我们来看一个实际的例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":355},{"title":"先创建一个二维数组a，其shape为(6,1)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":357},{"title":"**>>>** a = np.arange(0, 60, 10).reshape(-1, 1)**>>>** aarray( 0, 10, 20, 30, 40, 50)**>>>** a.shape(6, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":359},{"title":"再创建一维数组b，其shape为(5,)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":361},{"title":"**>>>** b = np.arange(0, 5)**>>>** barray(0, 1, 2, 3, 4)**>>>** b.shape(5,)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":363},{"title":"计算a和b的和，得到一个加法表，它相当于计算a,b中所有元素组的和，得到一个shape为(6,5)的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":365},{"title":"**>>>** c = a + b**>>>** carray( 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54)**>>>** c.shape(6, 5)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":367},{"title":"由于a和b的shape长度(也就是ndim属性)不同，根据规则1，需要让b的shape向a对齐，于是将b的shape前面加1，补齐为(1,5)。相当于做了如下计算：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":369},{"title":"**>>>** b.shape=1,5**>>>** barray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":371},{"title":"这样加法运算的两个输入数组的shape分别为(6,1)和(1,5)，根据规则2，输出数组的各个轴的长度为输入数组各个轴上的长度的最大值，可知输出数组的shape为(6,5)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":373},{"title":"由于b的第0轴上的长度为1，而a的第0轴上的长度为6，因此为了让它们在第0轴上能够相加，需要将b在第0轴上的长度扩展为6，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":375},{"title":"**>>>** b = b.repeat(6,axis=0)**>>>** barray(0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":377},{"title":"由于a的第1轴的长度为1，而b的第一轴长度为5，因此为了让它们在第1轴上能够相加，需要将a在第1轴上的长度扩展为5，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":379},{"title":"**>>>** a = a.repeat(5, axis=1)**>>>** aarray( 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":381},{"title":"经过上述处理之后，a和b就可以按对应元素进行相加运算了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":383},{"title":"当然，numpy在执行a+b运算时，其内部并不会真正将长度为1的轴用repeat函数进行扩展，如果这样做的话就太浪费空间了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":385},{"title":"由于这种广播计算很常用，因此numpy提供了一个快速产生如上面a,b数组的方法： ogrid对象：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":387},{"title":"**>>>** x,y = np.ogrid0:5,0:5**>>>** xarray(0, 1, 2, 3, 4)**>>>** yarray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":389},{"title":"ogrid是一个很有趣的对象，它像一个多维数组一样，用切片组元作为下标进行存取，返回的是一组可以用来广播计算的数组。其切片下标有两种形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":391},{"title":"开始值:结束值:步长，和np.arange(开始值, 结束值, 步长)类似","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":393},{"title":"开始值:结束值:长度j，当第三个参数为虚数时，它表示返回的数组的长度，和np.linspace(开始值, 结束值, 长度)类似：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":395},{"title":"**>>>** x, y = np.ogrid0:1:4j, 0:1:3j**>>>** xarray( 0. , 0.33333333, 0.66666667, 1. )**>>>** yarray( 0. , 0.5, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":397},{"title":"ogrid为什么不是函数","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":400},{"title":"根据Python的语法，只有在中括号中才能使用用冒号隔开的切片语法，如果ogrid是函数的话，那么这些切片必须使用slice函数创建，这显然会增加代码的长度。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":402},{"title":"利用ogrid的返回值，我能很容易计算x, y网格面上各点的值，或者x, y, z网格体上各点的值。下面是绘制三维曲面 x * exp(x**2 - y**2) 的程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":404},{"title":"**import** **numpy** **as** **np****from** **enthought.mayavi** **import** mlab x, y = np.ogrid-2:2:20j, -2:2:20jz = x * np.exp( - x**2 - y**2) pl = mlab.surf(x, y, z, warp_scale=\"auto\")mlab.axes(xlabel='x', ylabel='y', zlabel='z')mlab.outline(pl)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":406},{"title":"图2.5","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro04","line":408},{"title":"此程序使用mayavi的mlab库快速绘制如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":408},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","line":410},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":414},{"title":"ufunc函数本身还有些方法，这些方法只对两个输入一个输出的ufunc函数有效，其它的ufunc对象调用这些方法时会抛出ValueError异常。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":416},{"title":"**reduce** 方法和Python的reduce函数类似，它沿着axis轴对array进行操作，相当于将<op>运算符插入到沿axis轴的所有子数组或者元素当中。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":418},{"title":"<op>.reduce (array=, axis=0, dtype=None)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":420},{"title":"例如：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":422},{"title":"**>>>** np.add.reduce(1,2,3) _# 1 + 2 + 3_6**>>>** np.add.reduce(1,2,3,4,5,6, axis=1) _# 1,4 + 2,5 + 3,6_array( 6, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":424},{"title":"**accumulate** 方法和reduce方法类似，只是它返回的数组和输入的数组的shape相同，保存所有的中间计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":426},{"title":"**>>>** np.add.accumulate(1,2,3)array(1, 3, 6)**>>>** np.add.accumulate(1,2,3,4,5,6, axis=1)array( 1, 3, 6, 4, 9, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":428},{"title":"**reduceat** 方法计算多组reduce的结果，通过indices参数指定一系列reduce的起始和终了位置。reduceat的计算有些特别，让我们通过一个例子来解释一下：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":430},{"title":"**>>>** a = np.array(1,2,3,4)**>>>** result = np.add.reduceat(a,indices=0,1,0,2,0,3,0)**>>>** resultarray( 1, 2, 3, 3, 6, 4, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":432},{"title":"对于indices中的每个元素都会调用reduce函数计算出一个值来，因此最终计算结果的长度和indices的长度相同。结果result数组中除最后一个元素之外，都按照如下计算得出：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":434},{"title":"if indicesi < indicesi+1: resulti = np.reduce(aindicesi:indicesi+1) else: resulti = aindicesi","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":436},{"title":"而最后一个元素如下计算:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":438},{"title":"np.reduce(aindices-1:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":440},{"title":"因此上面例子中，结果的每个元素如下计算而得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":442},{"title":"1 : a0 = 1 2 : a1 = 2 3 : a0 + a1 = 1 + 2 3 : a2 = 3 6 : a0 + a1 + a2 = 1 + 2 + 3 = 6 4 : a3 = 4 10: a0 + a1 + a2 + a4 = 1+2+3+4 = 10","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":444},{"title":"可以看出result::2和a相等，而result1::2和np.add.accumulate(a)相等。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":446},{"title":"**outer** 方法，<op>.outer(a,b)方法的计算等同于如下程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":448},{"title":"**>>>** a.shape += (1,)*b.ndim**>>>** <op>(a,b)**>>>** a = a.squeeze()","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":450},{"title":"其中squeeze的功能是剔除数组a中长度为1的轴。如果你看不太明白这个等同程序的话，让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":452},{"title":"**>>>** np.multiply.outer(1,2,3,4,5,2,3,4)array( 2, 3, 4, 4, 6, 8, 6, 9, 12, 8, 12, 16, 10, 15, 20)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":454},{"title":"可以看出通过outer方法计算的结果是如下的乘法表：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":456},{"title":"_# 2, 3, 4__# 1__# 2__# 3__# 4__# 5_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":458},{"title":"如果将这两个数组按照等同程序一步一步的计算的话，就会发现乘法表最终是通过广播的方式计算出来的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":460},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":462},{"title":"2.3　矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":462},{"title":"NumPy和Matlab不一样，对于多维数组的运算，缺省情况下并不使用矩阵运算，如果你希望对数组进行矩阵运算的话，可以调用相应的函数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":464},{"title":"matrix对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":466},{"title":"numpy库提供了matrix类，使用matrix类创建的是矩阵对象，它们的加减乘除运算缺省采用矩阵方式计算，因此用法和matlab十分类似。但是由于NumPy中同时存在ndarray和matrix对象，因此用户很容易将两者弄混。这有违Python的“显式优于隐式”的原则，因此并不推荐在较复杂的程序中使用matrix。下面是使用matrix的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":468},{"title":"**>>>** a = np.matrix(1,2,3,5,5,6,7,9,9)**>>>** a*a**-1matrix( 1.00000000e+00, 1.66533454e-16, -8.32667268e-17, -2.77555756e-16, 1.00000000e+00, -2.77555756e-17, 1.66533454e-16, 5.55111512e-17, 1.00000000e+00)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":470},{"title":"因为a是用matrix创建的矩阵对象，因此乘法和幂运算符都变成了矩阵运算，于是上面计算的是矩阵a和其逆矩阵的乘积，结果是一个单位矩阵。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":472},{"title":"矩阵的乘积可以使用dot函数进行计算。对于二维数组，它计算的是矩阵乘积，对于一维数组，它计算的是其点积。当需要将一维数组当作列矢量或者行矢量进行矩阵运算时，推荐先使用reshape函数将一维数组转换为二维数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":474},{"title":"**>>>** a = array(1, 2, 3)**>>>** a.reshape((-1,1))array(1, 2, 3)**>>>** a.reshape((1,-1))array(1, 2, 3)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":476},{"title":"除了dot计算乘积之外，NumPy还提供了inner和outer等多种计算乘积的函数。这些函数计算乘积的方式不同，尤其是当对于多维数组的时候，更容易搞混。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":478},{"title":"**dot** : 对于两个一维的数组，计算的是这两个数组对应下标元素的乘积和(数学上称之为内积)；对于二维数组，计算的是两个数组的矩阵乘积；对于多维数组，它的通用计算公式如下，即结果数组中的每个元素都是：数组a的最后一维上的所有元素与数组b的倒数第二位上的所有元素的乘积和：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":480},{"title":"dot(a, b)i,j,k,m = sum(ai,j,: * bk,:,m)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":482},{"title":"下面以两个3为数组的乘积演示一下dot乘积的计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":484},{"title":"首先创建两个3维数组，这两个数组的最后两维满足矩阵乘积的条件：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":486},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,2,3)**>>>** c = np.dot(a,b)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":488},{"title":"dot乘积的结果c可以看作是数组a,b的多个子矩阵的乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":490},{"title":"**>>>** np.alltrue( c0,:,0,: == np.dot(a0,b0) )True**>>>** np.alltrue( c1,:,0,: == np.dot(a1,b0) )True**>>>** np.alltrue( c0,:,1,: == np.dot(a0,b1) )True**>>>** np.alltrue( c1,:,1,: == np.dot(a1,b1) )True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":492},{"title":"**inner** : 和dot乘积一样，对于两个一维数组，计算的是这两个数组对应下标元素的乘积和；对于多维数组，它计算的结果数组中的每个元素都是：数组a和b的最后一维的内积，因此数组a和b的最后一维的长度必须相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":495},{"title":"inner(a, b)i,j,k,m = sum(ai,j,:*bk,m,:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":497},{"title":"下面是inner乘积的演示：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":499},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,3,2)**>>>** c = np.inner(a,b)**>>>** c.shape(2, 3, 2, 3)**>>>** c0,0,0,0 == np.inner(a0,0,b0,0)True**>>>** c0,1,1,0 == np.inner(a0,1,b1,0)True**>>>** c1,2,1,2 == np.inner(a1,2,b1,2)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":501},{"title":"**outer** : 只按照一维数组进行计算，如果传入参数是多维数组，则先将此数组展平为一维数组之后再进行运算。outer乘积计算的列向量和行向量的矩阵乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":503},{"title":"**>>>** np.outer(1,2,3,4,5,6,7)array( 4, 5, 6, 7, 8, 10, 12, 14, 12, 15, 18, 21)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":505},{"title":"矩阵中更高级的一些运算可以在NumPy的线性代数子库linalg中找到。例如inv函数计算逆矩阵，solve函数可以求解多元一次方程组。下面是solve函数的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":508},{"title":"**>>>** a = np.random.rand(10,10)**>>>** b = np.random.rand(10)**>>>** x = np.linalg.solve(a,b)**>>>** np.sum(np.abs(np.dot(a,x) - b))3.1433189384699745e-15","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":510},{"title":"solve函数有两个参数a和b。a是一个N*N的二维数组，而b是一个长度为N的一维数组，solve函数找到一个长度为N的一维数组x，使得a和x的矩阵乘积正好等于b，数组x就是多元一次方程组的解。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":512},{"title":"有关线性代数方面的内容将在今后的章节中详细介绍。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":514},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":516},{"title":"2.4　文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":516},{"title":"NumPy提供了多种文件操作函数方便我们存取数组内容。文件存取的格式分为两类：二进制和文本。而二进制格式的文件又分为NumPy专用的格式化二进制类型和无格式类型。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":518},{"title":"使用数组的方法函数tofile可以方便地将数组中数据以二进制的格式写进文件。tofile输出的数据没有格式，因此用numpy.fromfile读回来的时候需要自己格式化数据：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":520},{"title":"**>>>** a = np.arange(0,12)**>>>** a.shape = 3,4**>>>** aarray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** a.tofile(\"a.bin\")**>>>** b = np.fromfile(\"a.bin\", dtype=np.float) _# 按照float类型读入数据_**>>>** b _# 读入的数据是错误的_array( 2.12199579e-314, 6.36598737e-314, 1.06099790e-313, 1.48539705e-313, 1.90979621e-313, 2.33419537e-313)**>>>** a.dtype _# 查看a的dtype_dtype('int32')**>>>** b = np.fromfile(\"a.bin\", dtype=np.int32) _# 按照int32类型读入数据_**>>>** b _# 数据是一维的_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** b.shape = 3, 4 _# 按照a的shape修改b的shape_**>>>** b _# 这次终于正确了_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":522},{"title":"从上面的例子可以看出，需要在读入的时候设置正确的dtype和shape才能保证数据一致。并且tofile函数不管数组的排列顺序是C语言格式的还是Fortran语言格式的，统一使用C语言格式输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":524},{"title":"此外如果fromfile和tofile函数调用时指定了sep关键字参数的话，数组将以文本格式输入输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":526},{"title":"numpy.load和numpy.save函数以NumPy专用的二进制类型保存数据，这两个函数会自动处理元素类型和shape等信息，使用它们读写数组就方便多了，但是numpy.save输出的文件很难和其它语言编写的程序读入：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":528},{"title":"**>>>** np.save(\"a.npy\", a)**>>>** c = np.load( \"a.npy\" )**>>>** carray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":530},{"title":"如果你想将多个数组保存到一个文件中的话，可以使用numpy.savez函数。savez函数的第一个参数是文件名，其后的参数都是需要保存的数组，也可以使用关键字参数为数组起一个名字，非关键字参数传递的数组会自动起名为arr_0, arr_1, ...。savez函数输出的是一个压缩文件(扩展名为npz)，其中每个文件都是一个save函数保存的npy文件，文件名对应于数组名。load函数自动识别npz文件，并且返回一个类似于字典的对象，可以通过数组名作为关键字获取数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":532},{"title":"**>>>** a = np.array(1,2,3,4,5,6)**>>>** b = np.arange(0, 1.0, 0.1)**>>>** c = np.sin(b)**>>>** np.savez(\"result.npz\", a, b, sin_array = c)**>>>** r = np.load(\"result.npz\")**>>>** r\"arr_0\" _# 数组a_array(1, 2, 3, 4, 5, 6)**>>>** r\"arr_1\" _# 数组b_array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)**>>>** r\"sin_array\" _# 数组c_array( 0. , 0.09983342, 0.19866933, 0.29552021, 0.38941834, 0.47942554, 0.56464247, 0.64421769, 0.71735609, 0.78332691)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":534},{"title":"如果你用解压软件打开result.npz文件的话，会发现其中有三个文件：arr_0.npy， arr_1.npy， sin_array.npy，其中分别保存着数组a, b, c的内容。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":536},{"title":"使用numpy.savetxt和numpy.loadtxt可以读写1维和2维的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":538},{"title":"**>>>** a = np.arange(0,12,0.5).reshape(4,-1)**>>>** np.savetxt(\"a.txt\", a) _# 缺省按照'%.18e'格式保存数据，以空格分隔_**>>>** np.loadtxt(\"a.txt\")array( 0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5. , 5.5, 6. , 6.5, 7. , 7.5, 8. , 8.5, 9. , 9.5, 10. , 10.5, 11. , 11.5)**>>>** np.savetxt(\"a.txt\", a, fmt=\"_%d_\", delimiter=\",\") _#改为保存为整数，以逗号分隔_**>>>** np.loadtxt(\"a.txt\",delimiter=\",\") _# 读入的时候也需要指定逗号分隔_array( 0., 0., 1., 1., 2., 2., 3., 3., 4., 4., 5., 5., 6., 6., 7., 7., 8., 8., 9., 9., 10., 10., 11., 11.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":540},{"title":"文件名和文件对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":542},{"title":"本节介绍所举的例子都是传递的文件名，也可以传递已经打开的文件对象，例如对于load和save函数来说，如果使用文件对象的话，可以将多个数组储存到一个npy文件中：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":544},{"title":"**>>>** a = np.arange(8)**>>>** b = np.add.accumulate(a)**>>>** c = a + b**>>>** f = file(\"result.npy\", \"wb\")**>>>** np.save(f, a) _# 顺序将a,b,c保存进文件对象f_**>>>** np.save(f, b)**>>>** np.save(f, c)**>>>** f.close()**>>>** f = file(\"result.npy\", \"rb\")**>>>** np.load(f) _# 顺序从文件对象f中读取内容_array(0, 1, 2, 3, 4, 5, 6, 7)**>>>** np.load(f)array( 0, 1, 3, 6, 10, 15, 21, 28)**>>>** np.load(f)array( 0, 2, 5, 9, 14, 20, 27, 35)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":546},{"title":"首页目录","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":548},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":550},{"title":"NumPy-快速处理数据","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":550},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":551},{"title":"ndarray对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":551},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":552},{"title":"创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":552},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":553},{"title":"存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":553},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":554},{"title":"多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":554},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":555},{"title":"结构数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":555},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":556},{"title":"内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":556},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":557},{"title":"ufunc运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":557},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":558},{"title":"广播","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":558},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":559},{"title":"ufunc的方法","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":559},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":560},{"title":"矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":560},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":561},{"title":"文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":561},{"title":"软件包的安装和介绍","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":565},{"title":"SciPy-数值计算库","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":569},{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":577},{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":579},{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":580},{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":581},{"title":"HYRY Studio","target":"http://hyry.dip.jp/blogt.py","line":583},{"title":"Sphinx","target":"http://sphinx.pocoo.org/","line":583}],"metadata":{"source":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html"}},
"smart_sources:印象笔记/Python/NumPy-快速处理数据.md": {"path":"印象笔记/Python/NumPy-快速处理数据.md","embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.13563047,-0.02394552,-0.00732828,-0.05151266,0.03419628,0.00038997,-0.04385133,-0.03268959,0.03056684,0.01912048,0.06928757,-0.07039367,0.03237837,-0.01813302,0.0032076,-0.03820279,-0.00196504,0.0103396,-0.03875845,-0.01570061,0.09350248,-0.01253949,0.038364,-0.0521569,0.02675689,0.07956285,-0.00226737,-0.0080028,0.01068919,-0.17432798,0.03372338,0.01634522,0.01187152,-0.02138343,0.07273345,0.01155629,-0.00638231,0.01731583,-0.02707767,0.0549857,-0.00194955,-0.01059109,-0.02902428,0.0160574,0.01533509,-0.06069908,-0.03009512,-0.01948361,0.03230203,-0.02661076,-0.05208677,-0.00746642,-0.05212922,-0.01569599,0.03471435,0.00930845,0.08056329,0.04211714,0.01301816,0.01862856,-0.0045627,0.01351141,-0.20151342,0.0532686,0.07571404,-0.01754844,-0.01215287,0.03092375,0.05848521,0.00002967,-0.08055556,0.04917129,-0.04307422,0.09026624,0.02458074,-0.02645333,0.04284971,-0.01119176,-0.03004213,-0.02454999,-0.04083655,0.05239408,-0.02465011,0.01228774,-0.01014976,0.02246336,0.02419826,-0.00259224,0.0118745,-0.01636486,0.02817832,-0.02194016,0.01302285,0.09880399,-0.01087261,-0.02995136,0.08706871,0.04248304,-0.01610198,0.07564717,-0.04316837,0.01539043,0.00655537,0.02781637,0.02267677,-0.04899441,-0.01410686,-0.03613154,-0.0064508,-0.00190889,0.01023205,-0.02227162,0.02992709,-0.04479013,0.05444551,-0.02859943,-0.05447309,-0.01065904,-0.0628731,-0.00545282,-0.00435383,-0.02419717,0.07219819,-0.03095232,-0.00330661,-0.01011419,-0.02242011,0.05841259,0.03627999,0.03202542,0.07131178,-0.02703745,-0.0747379,-0.00913126,0.02782967,-0.0217634,-0.05100818,0.01579646,0.03003743,-0.06271642,0.02113613,-0.10226782,0.02093595,-0.04515768,-0.10652905,0.07509101,-0.09195969,0.02279807,-0.02228848,-0.05583634,-0.02951395,0.06797547,-0.0415925,-0.02827567,0.01282729,-0.01057062,0.06175962,0.08313018,-0.02835285,-0.03012317,-0.0499051,-0.05780277,-0.03714475,0.06329852,-0.01908305,-0.09022819,-0.03793022,0.03205732,-0.05631416,-0.02943429,0.02696326,-0.02299031,-0.03227025,0.02412965,0.07174659,-0.02859783,0.01196973,-0.06057899,0.04667072,0.00626279,-0.0256513,-0.042311,-0.06027292,-0.00137005,0.01261221,-0.07582514,0.00342984,-0.01590549,0.01993733,0.00333575,-0.0246856,0.00238378,0.01817988,-0.06949928,-0.02605727,0.01994588,0.00375246,-0.02642883,0.06378815,-0.06414989,0.08100973,0.01066044,0.00389086,0.04443271,-0.03778706,-0.01762334,0.01465972,-0.00568793,0.08783314,0.03805199,-0.00270743,-0.03563401,0.01668699,-0.0267141,-0.02670702,0.0069632,0.05190781,0.06169984,0.05252444,0.03919227,-0.01307641,-0.07950193,-0.11062827,-0.18369479,0.03446763,0.02635409,-0.06447876,0.0208058,-0.06111142,0.03720985,-0.01131606,0.01574917,0.08973753,0.08612289,0.01462039,-0.01104815,-0.00776109,-0.02451677,0.01271015,0.06873639,0.00702058,-0.0087674,0.01605968,0.03194596,-0.00025553,-0.01359571,0.01520611,-0.03328247,-0.05556354,0.13131605,0.01165796,0.07875026,0.0342944,0.01822552,0.01386459,-0.04442748,-0.15242827,0.06572175,0.04699459,-0.04593014,0.03670244,-0.04178393,0.01263938,0.0194987,0.0601714,0.03088933,-0.02326938,-0.01062103,0.01731128,-0.02688944,0.00568601,-0.03435903,0.0211576,-0.00908177,0.05303424,-0.00615898,0.05625591,-0.02242031,-0.02355117,-0.05283188,0.00824588,-0.02527488,0.03873731,0.00212706,-0.03825378,0.01243741,-0.05965929,-0.00610435,-0.05980576,-0.00074594,-0.03137807,0.03444717,0.03055672,-0.0555516,0.14931254,0.03855276,0.00963558,-0.00263022,0.00673387,0.00608494,0.00578718,0.04199985,-0.05781791,0.03614854,0.04408429,0.07881194,0.04056919,0.02196422,-0.04043941,0.02265816,-0.0309221,0.03033503,0.00484646,-0.05787318,-0.0216118,0.03401157,0.08604921,0.11182959,0.0206896,-0.30059767,0.02079982,0.00217467,-0.0139446,0.02248638,-0.01402769,0.03697865,0.01451669,-0.02267058,0.0171465,-0.062303,0.00411335,-0.01429628,-0.0659325,0.00024121,0.00152576,0.07560724,-0.00031713,0.0429651,0.0329412,0.01799859,0.01044763,0.21039261,-0.00943475,0.02566571,-0.00667101,-0.02597592,0.06859513,0.07264172,-0.0036579,-0.00061441,-0.00532435,0.0627678,-0.0372867,0.01877091,0.1088997,0.02473398,0.00559347,0.04497536,-0.00949445,-0.03305871,-0.00369037,-0.13062948,0.01279807,0.08231513,-0.03314305,-0.01627228,-0.13094139,-0.03181259,0.01358717,-0.05430564,0.01694332,-0.01234358,-0.01383634,0.04114775,0.03606124,0.01713634,-0.02871898,-0.03177861,0.00441981,0.04172353,-0.07707813,0.12320236,0.11788567,0.01162829],"last_embed":{"hash":"f915e0a8fe64305d32f3613c518cd5ecfc1764a334ddf4f7315028c4aa7aca51","tokens":477}}},"last_read":{"hash":"f915e0a8fe64305d32f3613c518cd5ecfc1764a334ddf4f7315028c4aa7aca51","at":1757414819632},"class_name":"SmartSource","last_import":{"mtime":1478794407000,"size":64401,"at":1757413833931,"hash":"f915e0a8fe64305d32f3613c518cd5ecfc1764a334ddf4f7315028c4aa7aca51"},"blocks":{"#---frontmatter---":[1,3],"#":[4,9],"##{1}":[4,5],"##{2}":[6,6],"##{3}":[7,7],"##{4}":[8,9],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]":[10,584],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#{1}":[12,17],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)":[18,247],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#{1}":[20,25],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.1　创建](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)":[26,100],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.1　创建](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)#{1}":[28,100],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.2　存取元素](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)":[101,128],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.2　存取元素](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)#{1}":[103,128],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)":[129,157],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{1}":[131,152],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{2}":[153,154],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{3}":[155,155],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{4}":[156,157],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)":[158,223],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{1}":[160,167],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{2}":[168,169],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{3}":[170,170],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{4}":[171,172],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{5}":[173,178],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{6}":[179,180],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{7}":[181,181],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{8}":[182,183],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{9}":[184,223],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.5　内存结构](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5)":[224,247],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.5　内存结构](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5)#{1}":[226,247],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)":[248,461],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#{1}":[250,344],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)":[345,413],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{1}":[347,348],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{2}":[349,350],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{3}":[351,351],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{4}":[352,352],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{5}":[353,354],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{6}":[355,413],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.2　ufunc的方法[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)":[414,461],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.2　ufunc的方法[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)#{1}":[416,461],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.3　矩阵运算](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)":[462,515],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.3　矩阵运算](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)#{1}":[464,515],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)":[516,584],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#{1}":[518,547],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)":[548,570],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#{1}":[550,562],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#上一篇文章":[563,566],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#上一篇文章#{1}":[565,566],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#下一篇文章":[567,570],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#下一篇文章#{1}":[569,570],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索":[571,584],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{1}":[575,576],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{2}":[577,578],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{3}":[579,579],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{4}":[580,580],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{5}":[581,582],"#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{6}":[583,584]},"outlinks":[{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":4},{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":6},{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":7},{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":8},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":10},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":18},{"title":"函数库的导入","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":20},{"title":"本书的示例程序假设用以下推荐的方式导入NumPy函数库:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":22},{"title":"**import** **numpy** **as** **np**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":24},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":26},{"title":"2.1.1　创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":26},{"title":"首先需要创建数组才能对其进行其它操作。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":28},{"title":"我们可以通过给array函数传递Python的序列对象创建数组，如果传递的是多层嵌套的序列，将创建多维数组(下例中的变量c):","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":30},{"title":"**>>>** a = np.array(1, 2, 3, 4)**>>>** b = np.array((5, 6, 7, 8))**>>>** c = np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10)**>>>** barray(5, 6, 7, 8)**>>>** carray(1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)**>>>** c.dtypedtype('int32')","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":32},{"title":"数组的大小可以通过其shape属性获得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":34},{"title":"**>>>** a.shape(4,)**>>>** c.shape(3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":36},{"title":"数组a的shape只有一个元素，因此它是一维数组。而数组c的shape有两个元素，因此它是二维数组，其中第0轴的长度为3，第1轴的长度为4。还可以通过修改数组的shape属性，在保持数组元素个数不变的情况下，改变数组每个轴的长度。下面的例子将数组c的shape改为(4,3)，注意从(3,4)改为(4,3)并不是对数组进行转置，而只是改变每个轴的大小，数组元素在内存中的位置并没有改变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":38},{"title":"**>>>** c.shape = 4,3**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":40},{"title":"当某个轴的元素为-1时，将根据数组元素的个数自动计算此轴的长度，因此下面的程序将数组c的shape改为了(2,6)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":42},{"title":"**>>>** c.shape = 2,-1**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":44},{"title":"使用数组的reshape方法，可以创建一个改变了尺寸的新数组，原数组的shape保持不变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":46},{"title":"**>>>** d = a.reshape((2,2))**>>>** darray(1, 2, 3, 4)**>>>** aarray(1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":48},{"title":"数组a和d其实共享数据存储内存区域，因此修改其中任意一个数组的元素都会同时修改另外一个数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":50},{"title":"**>>>** a1 = 100 _# 将数组a的第一个元素改为100_**>>>** d _# 注意数组d中的2也被改变了_array( 1, 100, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":52},{"title":"数组的元素类型可以通过dtype属性获得。上面例子中的参数序列的元素都是整数，因此所创建的数组的元素类型也是整数，并且是32bit的长整型。可以通过dtype参数在创建时指定元素类型:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":54},{"title":"**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.float)array( 1., 2., 3., 4., 4., 5., 6., 7., 7., 8., 9., 10.)**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.complex)array( 1.+0.j, 2.+0.j, 3.+0.j, 4.+0.j, 4.+0.j, 5.+0.j, 6.+0.j, 7.+0.j, 7.+0.j, 8.+0.j, 9.+0.j, 10.+0.j)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":56},{"title":"上面的例子都是先创建一个Python序列，然后通过array函数将其转换为数组，这样做显然效率不高。因此NumPy提供了很多专门用来创建数组的函数。下面的每个函数都有一些关键字参数，具体用法请查看函数说明。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":58},{"title":"arange函数类似于python的range函数，通过指定开始值、终值和步长来创建一维数组，注意数组不包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":60},{"title":"**>>>** np.arange(0,1,0.1)array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":62},{"title":"linspace函数通过指定开始值、终值和元素个数来创建一维数组，可以通过endpoint关键字指定是否包括终值，缺省设置是包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":64},{"title":"**>>>** np.linspace(0, 1, 12)array( 0. , 0.09090909, 0.18181818, 0.27272727, 0.36363636, 0.45454545, 0.54545455, 0.63636364, 0.72727273, 0.81818182, 0.90909091, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":66},{"title":"logspace函数和linspace类似，不过它创建等比数列，下面的例子产生1(10^0)到100(10^2)、有20个元素的等比数列:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":68},{"title":"**>>>** np.logspace(0, 2, 20)array( 1. , 1.27427499, 1.62377674, 2.06913808, 2.6366509 , 3.35981829, 4.2813324 , 5.45559478, 6.95192796, 8.8586679 , 11.28837892, 14.38449888, 18.32980711, 23.35721469, 29.76351442, 37.92690191, 48.32930239, 61.58482111, 78.47599704, 100. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":70},{"title":"此外，使用frombuffer, fromstring, fromfile等函数可以从字节序列创建数组，下面以fromstring为例:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":73},{"title":"**>>>** s = \"abcdefgh\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":75},{"title":"Python的字符串实际上是字节序列，每个字符占一个字节，因此如果从字符串s创建一个8bit的整数数组的话，所得到的数组正好就是字符串中每个字符的ASCII编码:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":77},{"title":"**>>>** np.fromstring(s, dtype=np.int8)array( 97, 98, 99, 100, 101, 102, 103, 104, dtype=int8)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":79},{"title":"如果从字符串s创建16bit的整数数组，那么两个相邻的字节就表示一个整数，把字节98和字节97当作一个16位的整数，它的值就是98*256+97 = 25185。可以看出内存中是以little endian(低位字节在前)方式保存数据的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":81},{"title":"**>>>** np.fromstring(s, dtype=np.int16)array(25185, 25699, 26213, 26727, dtype=int16)**>>>** 98*256+9725185","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":83},{"title":"如果把整个字符串转换为一个64位的双精度浮点数数组，那么它的值是:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":85},{"title":"**>>>** np.fromstring(s, dtype=np.float)array( 8.54088322e+194)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":87},{"title":"显然这个例子没有什么意义，但是可以想象如果我们用C语言的二进制方式写了一组double类型的数值到某个文件中，那们可以从此文件读取相应的数据，并通过fromstring函数将其转换为float64类型的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":89},{"title":"我们可以写一个Python的函数，它将数组下标转换为数组中对应的值，然后使用此函数创建数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":91},{"title":"**>>>** **def** func(i):**...** **return** i%4+1**...****>>>** np.fromfunction(func, (10,))array( 1., 2., 3., 4., 1., 2., 3., 4., 1., 2.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":93},{"title":"fromfunction函数的第一个参数为计算每个数组元素的函数，第二个参数为数组的大小(shape)，因为它支持多维数组，所以第二个参数必须是一个序列，本例中用(10,)创建一个10元素的一维数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":95},{"title":"下面的例子创建一个二维数组表示九九乘法表，输出的数组a中的每个元素ai, j都等于func2(i, j)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":97},{"title":"**>>>** **def** func2(i, j):**...** **return** (i+1) * (j+1)**...****>>>** a = np.fromfunction(func2, (9,9))**>>>** aarray( 1., 2., 3., 4., 5., 6., 7., 8., 9., 2., 4., 6., 8., 10., 12., 14., 16., 18., 3., 6., 9., 12., 15., 18., 21., 24., 27., 4., 8., 12., 16., 20., 24., 28., 32., 36., 5., 10., 15., 20., 25., 30., 35., 40., 45., 6., 12., 18., 24., 30., 36., 42., 48., 54., 7., 14., 21., 28., 35., 42., 49., 56., 63., 8., 16., 24., 32., 40., 48., 56., 64., 72., 9., 18., 27., 36., 45., 54., 63., 72., 81.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":99},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":101},{"title":"2.1.2　存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":101},{"title":"数组元素的存取方法和Python的标准方法相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":103},{"title":"**>>>** a = np.arange(10)**>>>** a5 _# 用整数作为下标可以获取数组中的某个元素_5**>>>** a3:5 _# 用范围作为下标获取数组的一个切片，包括a3不包括a5_array(3, 4)**>>>** a:5 _# 省略开始下标，表示从a0开始_array(0, 1, 2, 3, 4)**>>>** a:-1 _# 下标可以使用负数，表示从数组后往前数_array(0, 1, 2, 3, 4, 5, 6, 7, 8)**>>>** a2:4 = 100,101 _# 下标还可以用来修改元素的值_**>>>** aarray( 0, 1, 100, 101, 4, 5, 6, 7, 8, 9)**>>>** a1:-1:2 _# 范围中的第三个参数表示步长，2表示隔一个元素取一个元素_array( 1, 101, 5, 7)**>>>** a::-1 _# 省略范围的开始下标和结束下标，步长为-1，整个数组头尾颠倒_array( 9, 8, 7, 6, 5, 4, 101, 100, 1, 0)**>>>** a5:1:-2 _# 步长为负数时，开始下标必须大于结束下标_array( 5, 101)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":105},{"title":"和Python的列表序列不同，通过下标范围获取的新的数组是原始数组的一个视图。它与原始数组共享同一块数据空间：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":107},{"title":"**>>>** b = a3:7 _# 通过下标范围产生一个新的数组b，b和a共享同一块数据空间_**>>>** barray(101, 4, 5, 6)**>>>** b2 = -10 _# 将b的第2个元素修改为-10_**>>>** barray(101, 4, -10, 6)**>>>** a _# a的第5个元素也被修改为10_array( 0, 1, 100, 101, 4, -10, 6, 7, 8, 9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":109},{"title":"除了使用下标范围存取元素之外，NumPy还提供了两种存取元素的高级方法。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":111},{"title":"**使用整数序列**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":113},{"title":"当使用整数序列对数组元素进行存取时，将使用整数序列中的每个元素作为下标，整数序列可以是列表或者数组。使用整数序列作为下标获得的数组不和原始数组共享数据空间。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":115},{"title":"**>>>** x = np.arange(10,1,-1)**>>>** xarray(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3, 3, 1, 8 _# 获取x中的下标为3, 3, 1, 8的4个元素，组成一个新的数组_array(7, 7, 9, 2)**>>>** b = xnp.array(3,3,-3,8) _#下标可以是负数_**>>>** b2 = 100**>>>** barray(7, 7, 100, 2)**>>>** x _# 由于b和x不共享数据空间，因此x中的值并没有改变_array(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3,5,1 = -1, -2, -3 _# 整数序列下标也可以用来修改元素的值_**>>>** xarray(10, -3, 8, -1, 6, -2, 4, 3, 2)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":117},{"title":"**使用布尔数组**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":119},{"title":"当使用布尔数组b作为下标存取数组x中的元素时，将收集数组x中所有在数组b中对应下标为True的元素。使用布尔数组作为下标获得的数组不和原始数组共享数据空间，注意这种方式只对应于布尔数组，不能使用布尔列表。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":121},{"title":"**>>>** x = np.arange(5,0,-1)**>>>** xarray(5, 4, 3, 2, 1)**>>>** xnp.array(True, False, True, False, False)**>>>** _# 布尔数组中下标为0，2的元素为True，因此获取x中下标为0,2的元素_array(5, 3)**>>>** xTrue, False, True, False, False**>>>** _# 如果是布尔列表，则把True当作1, False当作0，按照整数序列方式获取x中的元素_array(4, 5, 4, 5, 5)**>>>** xnp.array(True, False, True, True)**>>>** _# 布尔数组的长度不够时，不够的部分都当作False_array(5, 3, 2)**>>>** xnp.array(True, False, True, True) = -1, -2, -3**>>>** _# 布尔数组下标也可以用来修改元素_**>>>** xarray(-1, 4, -2, -3, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":123},{"title":"布尔数组一般不是手工产生，而是使用布尔运算的ufunc函数产生，关于ufunc函数请参照 ufunc运算 一节。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":125},{"title":"**>>>** x = np.random.rand(10) _# 产生一个长度为10，元素值为0-1的随机数的数组_**>>>** xarray( 0.72223939, 0.921226 , 0.7770805 , 0.2055047 , 0.17567449, 0.95799412, 0.12015178, 0.7627083 , 0.43260184, 0.91379859)**>>>** x>0.5**>>>** _# 数组x中的每个元素和0.5进行大小比较，得到一个布尔数组，True表示x中对应的值大于0.5_array( True, True, True, False, False, True, False, True, False, True, dtype=bool)**>>>** xx>0.5**>>>** _# 使用x>0.5返回的布尔数组收集x中的元素，因此得到的结果是x中所有大于0.5的元素的数组_array( 0.72223939, 0.921226 , 0.7770805 , 0.95799412, 0.7627083 , 0.91379859)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":127},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":129},{"title":"2.1.3　多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":129},{"title":"图2.1","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro02","line":131},{"title":"多维数组的存取和一维数组类似，因为多维数组有多个轴，因此它的下标需要用多个值来表示，NumPy采用组元(tuple)作为数组的下标。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":131},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","line":137},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","line":149},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":158},{"title":"在C语言中我们可以通过struct关键字定义结构类型，结构中的字段占据连续的内存空间，每个结构体占用的内存大小都相同，因此可以很容易地定义结构数组。和C语言一样，在NumPy中也很容易对这种结构数组进行操作。只要NumPy中的结构定义和C语言中的定义相同，NumPy就可以很方便地读取C语言的结构数组的二进制数据，转换为NumPy的结构数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":160},{"title":"假设我们需要定义一个结构数组，它的每个元素都有name, age和weight字段。在NumPy中可以如下定义：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":162},{"title":"**import** **numpy** **as** **np**persontype = np.dtype({ 'names':'name', 'age', 'weight', 'formats':'S32','i', 'f'})a = np.array((\"Zhang\",32,75.5),(\"Wang\",24,65.2), dtype=persontype)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":164},{"title":"我们先创建一个dtype对象persontype，通过其字典参数描述结构类型的各个字段。字典有两个关键字：names，formats。每个关键字对应的值都是一个列表。names定义结构中的每个字段名，而formats则定义每个字段的类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":166},{"title":"**S32** : 32个字节的字符串类型，由于结构中的每个元素的大小必须固定，因此需要指定字符串的长度","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":168},{"title":"**i** : 32bit的整数类型，相当于np.int32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":170},{"title":"**f** : 32bit的单精度浮点数类型，相当于np.float32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":171},{"title":"然后我们调用array函数创建数组，通过关键字参数 dtype=persontype， 指定所创建的数组的元素类型为结构persontype。运行上面程序之后，我们可以在IPython中执行如下的语句查看数组a的元素类型","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":173},{"title":"**>>>** a.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":175},{"title":"这里我们看到了另外一种描述结构类型的方法： 一个包含多个组元的列表，其中形如 (字段名, 类型描述) 的组元描述了结构中的每个字段。类型描述前面为我们添加了 '|', '<' 等字符，这些字符用来描述字段值的字节顺序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":177},{"title":"**|** : 忽视字节顺序","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":179},{"title":"**<** : 低位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":181},{"title":"**>** : 高位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":182},{"title":"结构数组的存取方式和一般数组相同，通过下标能够取得其中的元素，注意元素的值看上去像是组元，实际上它是一个结构：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":184},{"title":"**>>>** a0('Zhang', 32, 75.5)**>>>** a0.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":186},{"title":"a0是一个结构元素，它和数组a共享内存数据，因此可以通过修改它的字段，改变原始数组中的对应字段：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":188},{"title":"**>>>** c = a1**>>>** c\"name\" = \"Li\"**>>>** a1\"name\"\"Li\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":190},{"title":"结构像字典一样可以通过字符串下标获取其对应的字段值：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":192},{"title":"**>>>** a0\"name\"'Zhang'","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":194},{"title":"我们不但可以获得结构元素的某个字段，还可以直接获得结构数组的字段，它返回的是原始数组的视图，因此可以通过修改b0改变a0\"age\"：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":196},{"title":"**>>>** b=a:\"age\" _# 或者a\"age\"_**>>>** barray(32, 24)**>>>** b0 = 40**>>>** a0\"age\"40","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":198},{"title":"通过调用a.tostring或者a.tofile方法，可以直接输出数组a的二进制形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":200},{"title":"**>>>** a.tofile(\"test.bin\")","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":202},{"title":"利用下面的C语言程序可以将test.bin文件中的数据读取出来。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":204},{"title":"内存对齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":206},{"title":"C语言的结构体为了内存寻址方便，会自动的添加一些填充用的字节，这叫做内存对齐。例如如果把下面的name32改为name30的话，由于内存对齐问题，在name和age中间会填补两个字节，最终的结构体大小不会改变。因此如果numpy中的所配置的内存大小不符合C语言的对齐规范的话，将会出现数据错位。为了解决这个问题，在创建dtype对象时，可以传递参数align=True，这样numpy的结构数组的内存对齐和C语言的结构体就一致了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":208},{"title":"#include <stdio.h> **struct** person{ char name32; int age; float weight;}; **struct** person p2; void main (){ FILE *fp; int i; fp=fopen(\"test.bin\",\"rb\"); fread(p, **sizeof**(**struct** person), 2, fp); fclose(fp); **for**(i=0;i<2;i++) printf(\"%s %d %f**n**\", pi.name, pi.age, pi.weight); getchar();}","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":210},{"title":"结构类型中可以包括其它的结构类型，下面的语句创建一个有一个字段f1的结构，f1的值是另外一个结构，它有字段f2，其类型为16bit整数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":212},{"title":"**>>>** np.dtype(('f1', ('f2', np.int16)))dtype(('f1', ('f2', '<i2')))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":214},{"title":"当某个字段类型为数组时，用组元的第三个参数表示，下面描述的f1字段是一个shape为(2,3)的双精度浮点数组:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":216},{"title":"**>>>** np.dtype(('f0', 'i4'), ('f1', 'f8', (2, 3)))dtype(('f0', '<i4'), ('f1', '<f8', (2, 3)))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":218},{"title":"用下面的字典参数也可以定义结构类型，字典的关键字为结构中字段名，值为字段的类型描述，但是由于字典的关键字是没有顺序的，因此字段的顺序需要在类型描述中给出，类型描述是一个组元，它的第二个值给出字段的字节为单位的偏移量，例如age字段的偏移量为25个字节：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":220},{"title":"**>>>** np.dtype({'surname':('S25',0),'age':(np.uint8,25)})dtype(('surname', '|S25'), ('age', '|u1'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":222},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":224},{"title":"2.1.5　内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":224},{"title":"图2.3","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpymemorystruct","line":226},{"title":"下面让我们来看看ndarray数组对象是如何在内存中储存的。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":226},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","line":228},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":248},{"title":"ufunc是universal function的缩写，它是一种能对数组的每个元素进行操作的函数。NumPy内置的许多ufunc函数都是在C语言级别实现的，因此它们的计算速度非常快。让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":250},{"title":"**>>>** x = np.linspace(0, 2*np.pi, 10)# 对数组x中的每个元素进行正弦计算，返回一个同样大小的新数组**>>>** y = np.sin(x)**>>>** yarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":252},{"title":"先用linspace产生一个从0到2*PI的等距离的10个数，然后将其传递给sin函数，由于np.sin是一个ufunc函数，因此它对x中的每个元素求正弦值，然后将结果返回，并且赋值给y。计算之后x中的值并没有改变，而是新创建了一个数组保存结果。如果我们希望将sin函数所计算的结果直接覆盖到数组x上去的话，可以将要被覆盖的数组作为第二个参数传递给ufunc函数。例如：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":254},{"title":"**>>>** t = np.sin(x,x)**>>>** xarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)**>>>** id(t) == id(x)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":256},{"title":"sin函数的第二个参数也是x，那么它所做的事情就是对x中的每给值求正弦值，并且把结果保存到x中的对应的位置中。此时函数的返回值仍然是整个计算的结果，只不过它就是x，因此两个变量的id是相同的(变量t和变量x指向同一块内存区域)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":258},{"title":"我用下面这个小程序，比较了一下numpy.math和Python标准库的math.sin的计算速度：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":260},{"title":"**import** **time****import** **math****import** **numpy** **as** **np** x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = math.sin(t)**print** \"math.sin:\", time.clock() - start x = i * 0.001 **for** i **in** xrange(1000000)x = np.array(x)start = time.clock()np.sin(x,x)**print** \"numpy.sin:\", time.clock() - start _# 输出__# math.sin: 1.15426932753__# numpy.sin: 0.0882399858083_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":262},{"title":"在我的电脑上计算100万次正弦值，numpy.sin比math.sin快10倍多。这得利于numpy.sin在C语言级别的循环计算。numpy.sin同样也支持对单个数值求正弦，例如：numpy.sin(0.5)。不过值得注意的是，对单个数的计算math.sin则比numpy.sin快得多了，让我们看下面这个测试程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":264},{"title":"x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = np.sin(t)**print** \"numpy.sin loop:\", time.clock() - start _# 输出__# numpy.sin loop: 5.72166965355_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":266},{"title":"请注意numpy.sin的计算速度只有math.sin的1/5。这是因为numpy.sin为了同时支持数组和单个值的计算，其C语言的内部实现要比math.sin复杂很多，如果我们同样在Python级别进行循环的话，就会看出其中的差别了。此外，numpy.sin返回的数的类型和math.sin返回的类型有所不同，math.sin返回的是Python的标准float类型，而numpy.sin则返回一个numpy.float64类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":268},{"title":"**>>>** type(math.sin(0.5))<type 'float'>**>>>** type(np.sin(0.5))<type 'numpy.float64'>","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":270},{"title":"通过上面的例子我们了解了如何最有效率地使用math库和numpy库中的数学函数。因为它们各有长短，因此在导入时不建议使用*号全部载入，而是应该使用import numpy as np的方式载入，这样我们可以根据需要选择合适的函数调用。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":272},{"title":"NumPy中有众多的ufunc函数为我们提供各式各样的计算。除了sin这种单输入函数之外，还有许多多个输入的函数，add函数就是一个最常用的例子。先来看一个例子:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":274},{"title":"**>>>** a = np.arange(0,4)**>>>** aarray(0, 1, 2, 3)**>>>** b = np.arange(1,5)**>>>** barray(1, 2, 3, 4)**>>>** np.add(a,b)array(1, 3, 5, 7)**>>>** np.add(a,b,a)array(1, 3, 5, 7)**>>>** aarray(1, 3, 5, 7)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":276},{"title":"add函数返回一个新的数组，此数组的每个元素都为两个参数数组的对应元素之和。它接受第3个参数指定计算结果所要写入的数组，如果指定的话，add函数就不再产生新的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":278},{"title":"由于Python的操作符重载功能，计算两个数组相加可以简单地写为a+b，而np.add(a,b,a)则可以用a+=b来表示。下面是数组的运算符和其对应的ufunc函数的一个列表，注意除号\"/\"的意义根据是否激活__future__.division有所不同。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":280},{"title":"数组对象支持这些操作符，极大地简化了算式的编写，不过要注意如果你的算式很复杂，并且要运算的数组很大的话，会因为产生大量的中间结果而降低程序的运算效率。例如：假设a b c三个数组采用算式x=a*b+c计算，那么它相当于:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":294},{"title":"t = a * bx = t + c**del** t","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":296},{"title":"也就是说需要产生一个数组t保存乘法的计算结果，然后再产生最后的结果数组x。我们可以通过手工将一个算式分解为x = a*b; x += c，以减少一次内存分配。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":298},{"title":"通过组合标准的ufunc函数的调用，可以实现各种算式的数组计算。不过有些时候这种算式不易编写，而针对每个元素的计算函数却很容易用Python实现，这时可以用frompyfunc函数将一个计算单个元素的函数转换成ufunc函数。这样就可以方便地用所产生的ufunc函数对数组进行计算了。让我们来看一个例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":300},{"title":"图2.4","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro01","line":302},{"title":"我们想用一个分段函数描述三角波，三角波的样子如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":302},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","line":304},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":345},{"title":"当我们使用ufunc函数对两个数组进行计算时，ufunc函数会对这两个数组的对应元素进行计算，因此它要求这两个数组有相同的大小(shape相同)。如果两个数组的shape不同的话，会进行如下的广播(broadcasting)处理：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":347},{"title":"让所有输入数组都向其中shape最长的数组看齐，shape中不足的部分都通过在前面加1补齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":349},{"title":"输出数组的shape是输入数组shape的各个轴上的最大值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":351},{"title":"如果输入数组的某个轴和输出数组的对应轴的长度相同或者其长度为1时，这个数组能够用来计算，否则出错","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":352},{"title":"当输入数组的某个轴的长度为1时，沿着此轴运算时都用此轴上的第一组值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":353},{"title":"上述4条规则理解起来可能比较费劲，让我们来看一个实际的例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":355},{"title":"先创建一个二维数组a，其shape为(6,1)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":357},{"title":"**>>>** a = np.arange(0, 60, 10).reshape(-1, 1)**>>>** aarray( 0, 10, 20, 30, 40, 50)**>>>** a.shape(6, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":359},{"title":"再创建一维数组b，其shape为(5,)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":361},{"title":"**>>>** b = np.arange(0, 5)**>>>** barray(0, 1, 2, 3, 4)**>>>** b.shape(5,)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":363},{"title":"计算a和b的和，得到一个加法表，它相当于计算a,b中所有元素组的和，得到一个shape为(6,5)的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":365},{"title":"**>>>** c = a + b**>>>** carray( 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54)**>>>** c.shape(6, 5)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":367},{"title":"由于a和b的shape长度(也就是ndim属性)不同，根据规则1，需要让b的shape向a对齐，于是将b的shape前面加1，补齐为(1,5)。相当于做了如下计算：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":369},{"title":"**>>>** b.shape=1,5**>>>** barray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":371},{"title":"这样加法运算的两个输入数组的shape分别为(6,1)和(1,5)，根据规则2，输出数组的各个轴的长度为输入数组各个轴上的长度的最大值，可知输出数组的shape为(6,5)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":373},{"title":"由于b的第0轴上的长度为1，而a的第0轴上的长度为6，因此为了让它们在第0轴上能够相加，需要将b在第0轴上的长度扩展为6，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":375},{"title":"**>>>** b = b.repeat(6,axis=0)**>>>** barray(0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":377},{"title":"由于a的第1轴的长度为1，而b的第一轴长度为5，因此为了让它们在第1轴上能够相加，需要将a在第1轴上的长度扩展为5，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":379},{"title":"**>>>** a = a.repeat(5, axis=1)**>>>** aarray( 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":381},{"title":"经过上述处理之后，a和b就可以按对应元素进行相加运算了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":383},{"title":"当然，numpy在执行a+b运算时，其内部并不会真正将长度为1的轴用repeat函数进行扩展，如果这样做的话就太浪费空间了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":385},{"title":"由于这种广播计算很常用，因此numpy提供了一个快速产生如上面a,b数组的方法： ogrid对象：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":387},{"title":"**>>>** x,y = np.ogrid0:5,0:5**>>>** xarray(0, 1, 2, 3, 4)**>>>** yarray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":389},{"title":"ogrid是一个很有趣的对象，它像一个多维数组一样，用切片组元作为下标进行存取，返回的是一组可以用来广播计算的数组。其切片下标有两种形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":391},{"title":"开始值:结束值:步长，和np.arange(开始值, 结束值, 步长)类似","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":393},{"title":"开始值:结束值:长度j，当第三个参数为虚数时，它表示返回的数组的长度，和np.linspace(开始值, 结束值, 长度)类似：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":395},{"title":"**>>>** x, y = np.ogrid0:1:4j, 0:1:3j**>>>** xarray( 0. , 0.33333333, 0.66666667, 1. )**>>>** yarray( 0. , 0.5, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":397},{"title":"ogrid为什么不是函数","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":400},{"title":"根据Python的语法，只有在中括号中才能使用用冒号隔开的切片语法，如果ogrid是函数的话，那么这些切片必须使用slice函数创建，这显然会增加代码的长度。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":402},{"title":"利用ogrid的返回值，我能很容易计算x, y网格面上各点的值，或者x, y, z网格体上各点的值。下面是绘制三维曲面 x * exp(x**2 - y**2) 的程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":404},{"title":"**import** **numpy** **as** **np****from** **enthought.mayavi** **import** mlab x, y = np.ogrid-2:2:20j, -2:2:20jz = x * np.exp( - x**2 - y**2) pl = mlab.surf(x, y, z, warp_scale=\"auto\")mlab.axes(xlabel='x', ylabel='y', zlabel='z')mlab.outline(pl)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":406},{"title":"图2.5","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro04","line":408},{"title":"此程序使用mayavi的mlab库快速绘制如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":408},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","line":410},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":414},{"title":"ufunc函数本身还有些方法，这些方法只对两个输入一个输出的ufunc函数有效，其它的ufunc对象调用这些方法时会抛出ValueError异常。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":416},{"title":"**reduce** 方法和Python的reduce函数类似，它沿着axis轴对array进行操作，相当于将<op>运算符插入到沿axis轴的所有子数组或者元素当中。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":418},{"title":"<op>.reduce (array=, axis=0, dtype=None)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":420},{"title":"例如：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":422},{"title":"**>>>** np.add.reduce(1,2,3) _# 1 + 2 + 3_6**>>>** np.add.reduce(1,2,3,4,5,6, axis=1) _# 1,4 + 2,5 + 3,6_array( 6, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":424},{"title":"**accumulate** 方法和reduce方法类似，只是它返回的数组和输入的数组的shape相同，保存所有的中间计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":426},{"title":"**>>>** np.add.accumulate(1,2,3)array(1, 3, 6)**>>>** np.add.accumulate(1,2,3,4,5,6, axis=1)array( 1, 3, 6, 4, 9, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":428},{"title":"**reduceat** 方法计算多组reduce的结果，通过indices参数指定一系列reduce的起始和终了位置。reduceat的计算有些特别，让我们通过一个例子来解释一下：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":430},{"title":"**>>>** a = np.array(1,2,3,4)**>>>** result = np.add.reduceat(a,indices=0,1,0,2,0,3,0)**>>>** resultarray( 1, 2, 3, 3, 6, 4, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":432},{"title":"对于indices中的每个元素都会调用reduce函数计算出一个值来，因此最终计算结果的长度和indices的长度相同。结果result数组中除最后一个元素之外，都按照如下计算得出：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":434},{"title":"if indicesi < indicesi+1: resulti = np.reduce(aindicesi:indicesi+1) else: resulti = aindicesi","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":436},{"title":"而最后一个元素如下计算:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":438},{"title":"np.reduce(aindices-1:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":440},{"title":"因此上面例子中，结果的每个元素如下计算而得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":442},{"title":"1 : a0 = 1 2 : a1 = 2 3 : a0 + a1 = 1 + 2 3 : a2 = 3 6 : a0 + a1 + a2 = 1 + 2 + 3 = 6 4 : a3 = 4 10: a0 + a1 + a2 + a4 = 1+2+3+4 = 10","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":444},{"title":"可以看出result::2和a相等，而result1::2和np.add.accumulate(a)相等。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":446},{"title":"**outer** 方法，<op>.outer(a,b)方法的计算等同于如下程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":448},{"title":"**>>>** a.shape += (1,)*b.ndim**>>>** <op>(a,b)**>>>** a = a.squeeze()","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":450},{"title":"其中squeeze的功能是剔除数组a中长度为1的轴。如果你看不太明白这个等同程序的话，让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":452},{"title":"**>>>** np.multiply.outer(1,2,3,4,5,2,3,4)array( 2, 3, 4, 4, 6, 8, 6, 9, 12, 8, 12, 16, 10, 15, 20)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":454},{"title":"可以看出通过outer方法计算的结果是如下的乘法表：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":456},{"title":"_# 2, 3, 4__# 1__# 2__# 3__# 4__# 5_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":458},{"title":"如果将这两个数组按照等同程序一步一步的计算的话，就会发现乘法表最终是通过广播的方式计算出来的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":460},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":462},{"title":"2.3　矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":462},{"title":"NumPy和Matlab不一样，对于多维数组的运算，缺省情况下并不使用矩阵运算，如果你希望对数组进行矩阵运算的话，可以调用相应的函数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":464},{"title":"matrix对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":466},{"title":"numpy库提供了matrix类，使用matrix类创建的是矩阵对象，它们的加减乘除运算缺省采用矩阵方式计算，因此用法和matlab十分类似。但是由于NumPy中同时存在ndarray和matrix对象，因此用户很容易将两者弄混。这有违Python的“显式优于隐式”的原则，因此并不推荐在较复杂的程序中使用matrix。下面是使用matrix的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":468},{"title":"**>>>** a = np.matrix(1,2,3,5,5,6,7,9,9)**>>>** a*a**-1matrix( 1.00000000e+00, 1.66533454e-16, -8.32667268e-17, -2.77555756e-16, 1.00000000e+00, -2.77555756e-17, 1.66533454e-16, 5.55111512e-17, 1.00000000e+00)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":470},{"title":"因为a是用matrix创建的矩阵对象，因此乘法和幂运算符都变成了矩阵运算，于是上面计算的是矩阵a和其逆矩阵的乘积，结果是一个单位矩阵。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":472},{"title":"矩阵的乘积可以使用dot函数进行计算。对于二维数组，它计算的是矩阵乘积，对于一维数组，它计算的是其点积。当需要将一维数组当作列矢量或者行矢量进行矩阵运算时，推荐先使用reshape函数将一维数组转换为二维数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":474},{"title":"**>>>** a = array(1, 2, 3)**>>>** a.reshape((-1,1))array(1, 2, 3)**>>>** a.reshape((1,-1))array(1, 2, 3)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":476},{"title":"除了dot计算乘积之外，NumPy还提供了inner和outer等多种计算乘积的函数。这些函数计算乘积的方式不同，尤其是当对于多维数组的时候，更容易搞混。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":478},{"title":"**dot** : 对于两个一维的数组，计算的是这两个数组对应下标元素的乘积和(数学上称之为内积)；对于二维数组，计算的是两个数组的矩阵乘积；对于多维数组，它的通用计算公式如下，即结果数组中的每个元素都是：数组a的最后一维上的所有元素与数组b的倒数第二位上的所有元素的乘积和：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":480},{"title":"dot(a, b)i,j,k,m = sum(ai,j,: * bk,:,m)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":482},{"title":"下面以两个3为数组的乘积演示一下dot乘积的计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":484},{"title":"首先创建两个3维数组，这两个数组的最后两维满足矩阵乘积的条件：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":486},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,2,3)**>>>** c = np.dot(a,b)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":488},{"title":"dot乘积的结果c可以看作是数组a,b的多个子矩阵的乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":490},{"title":"**>>>** np.alltrue( c0,:,0,: == np.dot(a0,b0) )True**>>>** np.alltrue( c1,:,0,: == np.dot(a1,b0) )True**>>>** np.alltrue( c0,:,1,: == np.dot(a0,b1) )True**>>>** np.alltrue( c1,:,1,: == np.dot(a1,b1) )True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":492},{"title":"**inner** : 和dot乘积一样，对于两个一维数组，计算的是这两个数组对应下标元素的乘积和；对于多维数组，它计算的结果数组中的每个元素都是：数组a和b的最后一维的内积，因此数组a和b的最后一维的长度必须相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":495},{"title":"inner(a, b)i,j,k,m = sum(ai,j,:*bk,m,:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":497},{"title":"下面是inner乘积的演示：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":499},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,3,2)**>>>** c = np.inner(a,b)**>>>** c.shape(2, 3, 2, 3)**>>>** c0,0,0,0 == np.inner(a0,0,b0,0)True**>>>** c0,1,1,0 == np.inner(a0,1,b1,0)True**>>>** c1,2,1,2 == np.inner(a1,2,b1,2)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":501},{"title":"**outer** : 只按照一维数组进行计算，如果传入参数是多维数组，则先将此数组展平为一维数组之后再进行运算。outer乘积计算的列向量和行向量的矩阵乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":503},{"title":"**>>>** np.outer(1,2,3,4,5,6,7)array( 4, 5, 6, 7, 8, 10, 12, 14, 12, 15, 18, 21)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":505},{"title":"矩阵中更高级的一些运算可以在NumPy的线性代数子库linalg中找到。例如inv函数计算逆矩阵，solve函数可以求解多元一次方程组。下面是solve函数的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":508},{"title":"**>>>** a = np.random.rand(10,10)**>>>** b = np.random.rand(10)**>>>** x = np.linalg.solve(a,b)**>>>** np.sum(np.abs(np.dot(a,x) - b))3.1433189384699745e-15","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":510},{"title":"solve函数有两个参数a和b。a是一个N*N的二维数组，而b是一个长度为N的一维数组，solve函数找到一个长度为N的一维数组x，使得a和x的矩阵乘积正好等于b，数组x就是多元一次方程组的解。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":512},{"title":"有关线性代数方面的内容将在今后的章节中详细介绍。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":514},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":516},{"title":"2.4　文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":516},{"title":"NumPy提供了多种文件操作函数方便我们存取数组内容。文件存取的格式分为两类：二进制和文本。而二进制格式的文件又分为NumPy专用的格式化二进制类型和无格式类型。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":518},{"title":"使用数组的方法函数tofile可以方便地将数组中数据以二进制的格式写进文件。tofile输出的数据没有格式，因此用numpy.fromfile读回来的时候需要自己格式化数据：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":520},{"title":"**>>>** a = np.arange(0,12)**>>>** a.shape = 3,4**>>>** aarray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** a.tofile(\"a.bin\")**>>>** b = np.fromfile(\"a.bin\", dtype=np.float) _# 按照float类型读入数据_**>>>** b _# 读入的数据是错误的_array( 2.12199579e-314, 6.36598737e-314, 1.06099790e-313, 1.48539705e-313, 1.90979621e-313, 2.33419537e-313)**>>>** a.dtype _# 查看a的dtype_dtype('int32')**>>>** b = np.fromfile(\"a.bin\", dtype=np.int32) _# 按照int32类型读入数据_**>>>** b _# 数据是一维的_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** b.shape = 3, 4 _# 按照a的shape修改b的shape_**>>>** b _# 这次终于正确了_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":522},{"title":"从上面的例子可以看出，需要在读入的时候设置正确的dtype和shape才能保证数据一致。并且tofile函数不管数组的排列顺序是C语言格式的还是Fortran语言格式的，统一使用C语言格式输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":524},{"title":"此外如果fromfile和tofile函数调用时指定了sep关键字参数的话，数组将以文本格式输入输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":526},{"title":"numpy.load和numpy.save函数以NumPy专用的二进制类型保存数据，这两个函数会自动处理元素类型和shape等信息，使用它们读写数组就方便多了，但是numpy.save输出的文件很难和其它语言编写的程序读入：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":528},{"title":"**>>>** np.save(\"a.npy\", a)**>>>** c = np.load( \"a.npy\" )**>>>** carray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":530},{"title":"如果你想将多个数组保存到一个文件中的话，可以使用numpy.savez函数。savez函数的第一个参数是文件名，其后的参数都是需要保存的数组，也可以使用关键字参数为数组起一个名字，非关键字参数传递的数组会自动起名为arr_0, arr_1, ...。savez函数输出的是一个压缩文件(扩展名为npz)，其中每个文件都是一个save函数保存的npy文件，文件名对应于数组名。load函数自动识别npz文件，并且返回一个类似于字典的对象，可以通过数组名作为关键字获取数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":532},{"title":"**>>>** a = np.array(1,2,3,4,5,6)**>>>** b = np.arange(0, 1.0, 0.1)**>>>** c = np.sin(b)**>>>** np.savez(\"result.npz\", a, b, sin_array = c)**>>>** r = np.load(\"result.npz\")**>>>** r\"arr_0\" _# 数组a_array(1, 2, 3, 4, 5, 6)**>>>** r\"arr_1\" _# 数组b_array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)**>>>** r\"sin_array\" _# 数组c_array( 0. , 0.09983342, 0.19866933, 0.29552021, 0.38941834, 0.47942554, 0.56464247, 0.64421769, 0.71735609, 0.78332691)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":534},{"title":"如果你用解压软件打开result.npz文件的话，会发现其中有三个文件：arr_0.npy， arr_1.npy， sin_array.npy，其中分别保存着数组a, b, c的内容。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":536},{"title":"使用numpy.savetxt和numpy.loadtxt可以读写1维和2维的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":538},{"title":"**>>>** a = np.arange(0,12,0.5).reshape(4,-1)**>>>** np.savetxt(\"a.txt\", a) _# 缺省按照'%.18e'格式保存数据，以空格分隔_**>>>** np.loadtxt(\"a.txt\")array( 0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5. , 5.5, 6. , 6.5, 7. , 7.5, 8. , 8.5, 9. , 9.5, 10. , 10.5, 11. , 11.5)**>>>** np.savetxt(\"a.txt\", a, fmt=\"_%d_\", delimiter=\",\") _#改为保存为整数，以逗号分隔_**>>>** np.loadtxt(\"a.txt\",delimiter=\",\") _# 读入的时候也需要指定逗号分隔_array( 0., 0., 1., 1., 2., 2., 3., 3., 4., 4., 5., 5., 6., 6., 7., 7., 8., 8., 9., 9., 10., 10., 11., 11.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":540},{"title":"文件名和文件对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":542},{"title":"本节介绍所举的例子都是传递的文件名，也可以传递已经打开的文件对象，例如对于load和save函数来说，如果使用文件对象的话，可以将多个数组储存到一个npy文件中：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":544},{"title":"**>>>** a = np.arange(8)**>>>** b = np.add.accumulate(a)**>>>** c = a + b**>>>** f = file(\"result.npy\", \"wb\")**>>>** np.save(f, a) _# 顺序将a,b,c保存进文件对象f_**>>>** np.save(f, b)**>>>** np.save(f, c)**>>>** f.close()**>>>** f = file(\"result.npy\", \"rb\")**>>>** np.load(f) _# 顺序从文件对象f中读取内容_array(0, 1, 2, 3, 4, 5, 6, 7)**>>>** np.load(f)array( 0, 1, 3, 6, 10, 15, 21, 28)**>>>** np.load(f)array( 0, 2, 5, 9, 14, 20, 27, 35)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":546},{"title":"首页目录","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":548},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":550},{"title":"NumPy-快速处理数据","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":550},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":551},{"title":"ndarray对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":551},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":552},{"title":"创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":552},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":553},{"title":"存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":553},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":554},{"title":"多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":554},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":555},{"title":"结构数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":555},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":556},{"title":"内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":556},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":557},{"title":"ufunc运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":557},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":558},{"title":"广播","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":558},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":559},{"title":"ufunc的方法","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":559},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":560},{"title":"矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":560},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":561},{"title":"文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":561},{"title":"软件包的安装和介绍","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":565},{"title":"SciPy-数值计算库","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":569},{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":577},{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":579},{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":580},{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":581},{"title":"HYRY Studio","target":"http://hyry.dip.jp/blogt.py","line":583},{"title":"Sphinx","target":"http://sphinx.pocoo.org/","line":583}],"metadata":{"source":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html"}},"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#---frontmatter---": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.13191654,-0.03340572,0.008537,-0.04285087,0.02995775,0.0039728,-0.02120307,-0.02761136,0.03849106,0.01010845,0.06343978,-0.09712102,0.03401086,0.00485893,-0.01365304,-0.02615101,-0.01417451,-0.018247,-0.02425697,-0.04151734,0.11420294,-0.03202786,0.04408384,-0.06521334,0.02396231,0.07895823,-0.01108627,-0.00243753,0.02209538,-0.16944623,0.02838425,0.04501095,0.02083695,-0.02552572,0.0662297,0.02289565,-0.00828687,-0.00630212,-0.00222822,0.09238137,-0.00545164,-0.00913883,-0.02755247,0.02247453,0.02565591,-0.05824768,-0.02675551,0.01209717,0.00048884,-0.01963258,-0.03840313,0.00601077,-0.03166855,-0.01311441,0.04471033,0.01960195,0.0738593,0.04423215,0.02612973,0.00752814,0.00164902,0.00494605,-0.1990594,0.02854276,0.07759696,-0.01645503,-0.01754639,0.02782555,0.03330551,0.0272589,-0.06500401,0.04677607,-0.06149231,0.09152123,0.0400924,-0.01060874,0.04274464,-0.0243869,-0.00974912,-0.05244827,-0.02306372,0.04098423,-0.03744454,-0.00771666,-0.02084534,-0.01283763,0.01731578,0.01462869,0.03671925,-0.0505891,0.04576145,-0.03443424,0.01236627,0.08840036,-0.02444947,0.00937968,0.09242304,0.04063728,0.01197522,0.10017399,-0.05329858,0.0345482,0.00557638,0.01440582,0.01247352,-0.03795354,-0.01526988,-0.05485763,-0.01008112,0.01649956,-0.00409915,0.00206841,0.03665076,-0.05107691,0.0676403,-0.0350121,-0.04421693,0.00390474,-0.04088738,0.00585734,-0.01906035,-0.01456835,0.04883259,-0.0261427,0.01408827,-0.02018346,-0.01454036,0.06487413,0.03077401,0.01504394,0.07233525,-0.01311564,-0.09056757,-0.01707078,0.00392191,-0.05632286,-0.03983483,0.02315459,0.04674596,-0.03552171,-0.00784951,-0.11724194,0.00081899,-0.05350582,-0.09878868,0.07853813,-0.10094233,-0.00095347,-0.00834605,-0.04464402,-0.02497663,0.07261202,-0.03779116,-0.04915179,0.014158,-0.00932902,0.04130088,0.09817494,-0.00576088,-0.06263115,-0.03350544,-0.04638615,-0.06521201,0.06021059,-0.0282774,-0.07570793,-0.01353197,0.06554763,-0.04064108,-0.04687297,0.02325698,-0.01496948,-0.03939299,0.0250331,0.09660155,-0.0157536,0.0008355,-0.04541822,0.022835,0.01076343,-0.01753003,-0.05486062,-0.05677965,0.01789689,0.00242966,-0.07597173,0.01813491,-0.01811018,0.03650243,-0.01270256,0.00667326,-0.00667906,-0.00470061,-0.0476901,-0.02788832,0.00276324,0.01178514,-0.02139881,0.05072719,-0.04154132,0.07111464,-0.01081867,-0.00555114,0.02536011,-0.05291348,-0.03153748,0.04001048,-0.02268243,0.07405348,0.05131288,-0.00623712,-0.04394697,0.02202737,-0.02231545,-0.0200891,0.00215582,0.02251521,0.05185717,0.01617926,0.02527785,-0.04182879,-0.08159506,-0.13342522,-0.19869649,0.00769871,0.02658116,-0.09160343,0.02883014,-0.05265438,0.05076602,0.02798794,0.059048,0.10520611,0.07037651,0.0195904,-0.00917404,-0.01926348,-0.00260017,0.01227633,0.0390906,-0.02411276,-0.02579348,0.00458141,0.04111983,-0.0117434,-0.05890915,-0.02693933,-0.01495165,-0.05042452,0.13234061,0.03181289,0.07022358,0.03850009,0.02433973,-0.00508068,-0.03082337,-0.14394902,0.03456753,0.05927085,-0.03674924,0.0287602,-0.06397869,0.01017655,0.01234051,0.05588435,0.02733592,-0.02482769,-0.0009065,0.00078981,-0.02438029,-0.01408725,-0.02879976,0.03249088,-0.00565843,0.06828178,0.00174773,0.06904002,-0.03230207,-0.02166211,-0.05483113,-0.00772173,-0.00121556,0.03862662,-0.00908661,-0.02724208,0.01847278,-0.06212696,0.01241992,-0.05356807,0.01522326,-0.04148647,0.06764217,0.02637847,-0.03481556,0.14731793,0.01835165,-0.00320789,0.01480002,0.02044768,0.02762006,0.01001345,0.02424068,-0.03899307,0.05803212,0.04099366,0.0879181,0.02574363,0.03124169,-0.0537471,-0.00555954,-0.01962524,0.06066196,-0.01758681,-0.07103284,-0.02979011,0.01037076,0.04286894,0.08616695,0.03339275,-0.29148418,0.02515418,0.00272938,0.0226093,0.01070913,0.01768831,0.05828517,-0.00112669,-0.04051995,0.0135435,-0.07014532,0.00666774,0.00216958,-0.04606199,0.00777918,0.00279409,0.0845465,-0.01994745,0.04563571,0.05174726,0.04745015,0.0114757,0.21467939,0.0084375,0.03842125,0.0036324,-0.00869033,0.06251872,0.06276695,-0.02544317,-0.01343486,-0.0012226,0.04152736,-0.02108338,0.00598037,0.0810962,-0.00275055,0.01210469,0.02281471,-0.0007637,-0.0287952,0.01923193,-0.11598349,0.00314993,0.09791616,-0.00441872,-0.0488737,-0.11040261,-0.02472181,0.00977689,-0.04275093,0.02729512,-0.01444514,-0.00660557,0.05373057,0.05154796,0.01860322,-0.04013339,-0.03418024,-0.00169652,0.02422521,-0.0672309,0.09848931,0.09845776,0.00903483],"last_embed":{"hash":"8b769e149f87fb6d9f74e22a1aa5b606bf06423e31ff4bb5546b8e41f014bff7","tokens":55}}},"text":null,"length":0,"last_read":{"hash":"8b769e149f87fb6d9f74e22a1aa5b606bf06423e31ff4bb5546b8e41f014bff7","at":1757414816829},"key":"印象笔记/Python/NumPy-快速处理数据.md#---frontmatter---","lines":[1,3],"size":74,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.14137574,-0.01124265,0.01335015,-0.0584367,0.03293252,0.01020884,-0.02799554,-0.02679998,0.02540385,0.00742507,0.06872571,-0.09048037,0.03406031,0.00471313,0.00093893,-0.01887379,-0.01544534,-0.01177443,-0.01044315,-0.03748101,0.11378043,-0.02720745,0.04000046,-0.05619967,0.03219724,0.08713946,-0.00299098,-0.01692951,0.03596375,-0.16504359,0.03410081,0.04362348,0.03481609,-0.02921024,0.06686335,0.01891065,-0.0024483,-0.00873586,-0.01016162,0.05614685,-0.02826652,-0.01239444,-0.03285367,0.02047534,0.03069978,-0.05941785,-0.02194411,-0.01015718,0.00972375,-0.02720189,-0.0305244,-0.00527043,-0.04479497,-0.02341245,0.02873873,0.00976944,0.07133878,0.03556583,0.00949117,0.02130975,-0.00317644,0.01048015,-0.19950023,0.04829947,0.0830893,-0.01588841,-0.01345196,0.03064786,0.06125107,0.04674012,-0.07311521,0.04960005,-0.0540511,0.10082784,0.02721492,-0.00657453,0.02780924,-0.02746266,-0.00754121,-0.04920651,-0.03036719,0.04322447,-0.03280475,0.00768423,-0.01486575,0.00847944,0.0101181,-0.00735444,0.00747356,-0.02909245,0.05280005,-0.01511153,0.00173374,0.07359437,-0.00816481,-0.01179804,0.08043798,0.01488442,0.00214228,0.09131962,-0.04244265,0.02502514,0.00239925,0.03012975,0.01105715,-0.03944479,-0.01969881,-0.05760603,0.00438267,-0.00195234,-0.01191797,-0.0121404,0.03249659,-0.03857224,0.06024224,-0.02921366,-0.04786205,0.00140477,-0.03215373,0.00107653,-0.01209087,-0.01840184,0.06106788,-0.03327158,-0.01150494,-0.02898287,-0.01529118,0.05861429,0.04039414,0.01904166,0.06412827,-0.03476657,-0.07894603,-0.01476845,0.01349441,-0.05873218,-0.05065964,0.03034805,0.02900202,-0.05525841,0.00541509,-0.10972459,0.01024854,-0.05313909,-0.10063455,0.06752831,-0.10438018,0.00614369,-0.00643697,-0.04550491,-0.01935664,0.06052014,-0.03624545,-0.04678186,0.0218245,-0.01830383,0.05043826,0.10630112,-0.00713554,-0.06466463,-0.04783193,-0.04475094,-0.06692631,0.08025406,-0.02373871,-0.07997752,-0.02199385,0.04481312,-0.04055326,-0.05615244,0.02130755,-0.01555501,-0.03448339,0.03585188,0.09895343,-0.00846483,0.02285858,-0.05048347,0.01304689,0.01779395,-0.02115618,-0.06824704,-0.06363826,0.00679258,0.00359096,-0.08403239,0.01655901,-0.01987717,0.01612578,-0.01455949,-0.00186439,0.01166752,0.00427284,-0.05956765,-0.03643303,-0.00300172,0.00635523,-0.03732386,0.04795491,-0.04934246,0.07619801,-0.02404647,-0.01064204,0.0162957,-0.04197617,-0.02226878,0.04740639,-0.01250047,0.08136743,0.02945521,-0.00370963,-0.01676448,0.02867588,-0.02050939,0.00288578,0.01555924,0.04042487,0.05678517,0.02882559,0.04105473,-0.02880787,-0.06642815,-0.11337458,-0.18710569,0.0139031,0.047209,-0.08146582,0.03368323,-0.06555665,0.05803252,-0.00561555,0.06541984,0.09238286,0.0750725,0.02544081,-0.01168744,0.00557786,-0.00703782,0.01382847,0.05996643,-0.00037704,-0.00968665,-0.0079813,0.04898543,0.00025238,-0.03731657,-0.00744589,-0.01719005,-0.05593148,0.1242354,0.01835418,0.08432009,0.02872708,0.01357465,-0.00640641,-0.03439329,-0.1310133,0.05422103,0.06317243,-0.02908847,0.02129483,-0.0537185,-0.01202884,0.00846627,0.07891332,0.02296828,-0.02237125,-0.019961,0.02094664,-0.03376494,-0.0021044,-0.02595168,0.02818258,-0.01525832,0.06063361,-0.00532101,0.0739427,-0.02533436,-0.01867895,-0.05538852,-0.01116414,-0.00703295,0.04546199,-0.01054141,-0.00436767,0.01011701,-0.06012378,0.00522521,-0.04703303,0.01078655,-0.04421661,0.07906588,0.03174643,-0.06295789,0.14348537,0.02094681,0.01327637,0.00193155,0.02928023,0.01063866,0.01130411,0.0385133,-0.04027748,0.04164564,0.02772647,0.09123376,0.02925942,0.00963175,-0.0646942,0.01091057,-0.04251337,0.03955948,-0.01251266,-0.07498876,-0.01046986,0.03160185,0.08173309,0.08100273,0.00109317,-0.29414794,0.02249694,0.002759,0.01983623,0.01458185,0.01048431,0.04695165,-0.00003768,-0.03683659,0.00404372,-0.08939549,0.00047937,-0.00379594,-0.05051302,0.01214444,-0.01331662,0.08707597,-0.00265457,0.03122406,0.02165815,0.04115397,0.00484551,0.20671707,0.01110618,0.02630279,-0.00464301,-0.00918304,0.05699693,0.05701214,-0.0406559,0.00010413,-0.0127706,0.0507881,-0.02586179,0.0177718,0.09056695,0.00848522,0.01450704,0.03373243,0.01139353,-0.03660654,0.02261027,-0.12729688,0.01096856,0.09388391,-0.01782582,-0.04461366,-0.11308201,-0.0227833,0.02012137,-0.03820122,0.02859615,-0.02132543,-0.01980122,0.0539052,0.06155873,0.02278432,-0.04023212,-0.03813676,0.00073643,0.03238447,-0.06985404,0.10526836,0.11274759,0.01478308],"last_embed":{"hash":"6226e40e3ccb9aab5719c763ee5f301dcef2bbd5ef4116a5fdc9a7176144f17a","tokens":169}}},"text":null,"length":0,"last_read":{"hash":"6226e40e3ccb9aab5719c763ee5f301dcef2bbd5ef4116a5fdc9a7176144f17a","at":1757414816864},"key":"印象笔记/Python/NumPy-快速处理数据.md#","lines":[4,9],"size":288,"outlinks":[{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":1},{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":3},{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":4},{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":5}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md##{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12513922,-0.02835701,0.01782325,-0.04660671,0.01786155,0.00253726,-0.00146549,-0.0274934,0.04443531,0.00945584,0.06595853,-0.10613509,0.04454015,0.01568528,-0.02013393,-0.02470536,-0.02179576,-0.00433973,-0.02273949,-0.04522965,0.10139731,-0.03046126,0.03729621,-0.0638636,0.01932754,0.08126988,-0.01489052,-0.00220733,0.01808096,-0.16622965,0.02660887,0.03526616,0.02885594,-0.03790111,0.05862483,0.0205515,-0.00657427,-0.01260717,-0.01349017,0.08730747,-0.01312557,-0.01523534,-0.02716177,0.01700031,0.01096783,-0.06671058,-0.02160431,0.00601545,0.0112459,-0.01507526,-0.0356575,-0.00470689,-0.03473721,-0.0210928,0.04497293,0.01078287,0.06592522,0.04013205,0.02175508,0.00283709,-0.00353267,-0.00072344,-0.1748607,0.02627935,0.0860497,-0.02230536,-0.01565353,0.02265778,0.04104999,0.0479666,-0.07237495,0.0450687,-0.07034861,0.11458991,0.0370424,-0.01788086,0.03612191,-0.03048173,-0.00430687,-0.03461984,-0.03085355,0.02383617,-0.03676951,-0.00711538,-0.01202844,0.00446914,0.01500578,0.00643268,0.03509735,-0.04760664,0.0309634,-0.02666785,-0.00049085,0.07425713,-0.0167071,0.01202682,0.09978476,0.02724427,0.00197097,0.09503464,-0.05477908,0.03941301,0.00020136,0.01134676,0.00401678,-0.03702349,-0.01928205,-0.06023225,-0.0014008,0.00205285,0.00383347,-0.005751,0.04096294,-0.05057198,0.0696212,-0.02972907,-0.04521626,0.01303424,-0.03990597,0.01036103,-0.01433299,-0.0178158,0.0475365,-0.0380515,0.0028756,-0.0190472,-0.01431663,0.07136456,0.01919946,0.02756893,0.07694998,-0.02857823,-0.08534512,-0.00648269,0.00291465,-0.05589016,-0.04048085,0.02336011,0.03210223,-0.04868546,-0.00712913,-0.12535615,-0.00056825,-0.06243373,-0.09154346,0.08151349,-0.10852959,0.0001646,-0.0114778,-0.05780593,-0.03178831,0.06219557,-0.04036883,-0.05577868,0.0109986,-0.00241667,0.04881178,0.09972131,0.00335552,-0.05945768,-0.05145576,-0.04333168,-0.07334501,0.0725587,-0.03400237,-0.07730412,-0.00889181,0.064165,-0.03656271,-0.04543139,0.02881967,-0.01506601,-0.04246451,0.02120172,0.1001454,-0.02805818,-0.00362299,-0.0384797,0.01751641,0.01399737,-0.01834011,-0.05927144,-0.04755975,-0.00013452,0.00163555,-0.07594974,0.01543428,-0.00238503,0.03239326,-0.02238323,0.00471695,-0.00398572,-0.00688036,-0.06204488,-0.03640513,-0.00196893,0.01602103,-0.02212458,0.04471271,-0.02182083,0.08861998,-0.01335975,-0.01159722,0.03969369,-0.03485831,-0.02875713,0.04807945,-0.01735892,0.07192596,0.0475837,0.00189249,-0.03926758,0.02379811,-0.01403408,-0.02152731,0.00087017,0.02483024,0.05646377,0.02059365,0.02896063,-0.02924327,-0.07986581,-0.13463347,-0.18622372,0.00911628,0.04620599,-0.08601439,0.02083455,-0.04608364,0.04482048,0.02620561,0.06288923,0.09341428,0.06312095,0.03588047,-0.0082126,-0.01980529,-0.01371448,0.00958244,0.03683968,-0.00696075,-0.02759171,-0.00106893,0.03818011,-0.01101404,-0.04800366,-0.02353369,-0.01255139,-0.05621053,0.13590822,0.03632751,0.06688591,0.0470906,0.01958864,-0.00142718,-0.02469971,-0.13533033,0.03806047,0.06663882,-0.03829059,0.03466457,-0.06383751,0.00838456,0.01292019,0.05843237,0.02446603,-0.02423766,-0.00097455,0.00483988,-0.02973715,-0.00726957,-0.01517638,0.03418658,-0.00118581,0.07040132,-0.01008457,0.06089163,-0.01688989,-0.03091022,-0.05414592,-0.01923151,0.00487729,0.03182923,-0.0108268,-0.02500815,0.00292,-0.04676554,0.00786127,-0.05904491,0.01787648,-0.03448741,0.06407352,0.01698853,-0.04055091,0.14515847,0.02068668,-0.00505781,0.01334311,0.01544993,0.02135513,0.02021258,0.02597911,-0.03482308,0.06009607,0.04811355,0.09967496,0.02528575,0.03409133,-0.06216039,0.00468188,-0.01271948,0.05233565,-0.02065416,-0.05770707,-0.02093064,0.00756154,0.07291804,0.08291833,0.02883397,-0.29787725,0.03025677,-0.01422086,0.01868724,0.01202007,0.03042926,0.0539049,-0.00191778,-0.05145062,0.01516577,-0.08502705,0.00576373,0.00493492,-0.04071451,0.00441207,-0.00071595,0.08342905,-0.00917523,0.04520874,0.05699168,0.05314273,0.00869977,0.2251838,-0.00151614,0.0453537,0.01272003,-0.00788977,0.06264763,0.05887125,-0.02944135,-0.00644245,-0.00116854,0.03827472,-0.04406167,0.0018026,0.08558472,0.00802975,0.00816925,0.02617565,0.00145112,-0.02919671,0.01617717,-0.10637908,0.00294335,0.0977316,-0.00001756,-0.05073703,-0.11304402,-0.02448651,0.01558364,-0.0374542,0.02675209,-0.00688785,-0.01328012,0.05609092,0.05255104,0.02286537,-0.02669259,-0.03031315,-0.00772623,0.01711433,-0.07379321,0.09733281,0.08804715,0.0128203],"last_embed":{"hash":"a3c0ac11ea453e6ab99524cc578516eb6f64ecdcd7bfbb0c0a22bb143e788582","tokens":55}}},"text":null,"length":0,"last_read":{"hash":"a3c0ac11ea453e6ab99524cc578516eb6f64ecdcd7bfbb0c0a22bb143e788582","at":1757414816895},"key":"印象笔记/Python/NumPy-快速处理数据.md##{1}","lines":[4,5],"size":68,"outlinks":[{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md##{2}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.13333756,-0.02113723,0.01815115,-0.0561439,0.02529947,-0.00489722,-0.0494497,-0.02423899,0.04632702,0.02129316,0.07826263,-0.10535926,0.06285886,0.00164055,-0.025936,-0.00462846,-0.0166137,0.00573421,-0.03830854,-0.04789783,0.10150273,-0.02706164,0.04301371,-0.07310268,0.00567528,0.06498647,-0.01821874,-0.01055627,0.00661823,-0.16875291,0.00680255,0.0279555,0.00423807,-0.03839198,0.05880592,0.02443015,-0.00341935,-0.00511331,0.00181636,0.06902019,-0.01777012,0.00295767,-0.03410371,0.0019752,0.02546941,-0.07072575,-0.03526698,-0.00225885,0.02387382,-0.0190076,-0.0317194,0.00721142,-0.03382985,-0.01869474,0.042068,0.01440817,0.06523567,0.03710948,0.03389029,0.00527751,0.00199461,-0.00449817,-0.17751914,0.02605268,0.07884839,-0.01562023,-0.01453008,0.00345016,0.03698063,0.04979025,-0.06838631,0.05505576,-0.06066309,0.11331735,0.04964554,-0.03086532,0.03960318,-0.0217785,-0.00348186,-0.02626139,-0.02948954,0.02059405,-0.04293227,-0.01612391,0.0007039,-0.00448797,0.01844388,-0.00748901,0.03254001,-0.04742829,0.0229766,-0.03698051,0.00292528,0.08638299,-0.00976743,0.01493467,0.08815987,0.00462637,-0.0093633,0.09499299,-0.05134008,0.03377793,-0.00747521,0.00659066,-0.00249023,-0.04198223,-0.01754938,-0.0456649,-0.02315876,-0.01377383,0.00528157,-0.00999851,0.03207028,-0.0471026,0.06996308,-0.03182209,-0.05015637,0.00939464,-0.04849241,0.00259035,-0.01690267,-0.0196046,0.07360962,-0.0430116,-0.00017549,-0.02199033,-0.01145841,0.073332,0.01100596,0.02947305,0.06080817,-0.03193666,-0.07311143,-0.00811538,0.01085845,-0.03353397,-0.0466482,0.0112716,0.02960141,-0.04761609,-0.0158982,-0.11051822,0.00830185,-0.06051436,-0.08162372,0.07128838,-0.08420534,0.03704277,-0.00474711,-0.04773176,-0.04185062,0.06178005,-0.05498644,-0.03902445,0.01437949,-0.00322487,0.04563124,0.09992168,0.0117114,-0.07153612,-0.04291856,-0.04231402,-0.0725996,0.06813311,-0.02710895,-0.07529865,-0.0183738,0.05444301,-0.02735946,-0.03728938,0.03258634,0.00976174,-0.05070284,0.0344401,0.09590813,-0.03093961,0.00102083,-0.0515376,0.03335293,0.00104788,0.01193761,-0.04334828,-0.0447325,-0.00495903,0.00433751,-0.0741659,0.02434765,-0.00917527,0.03736224,-0.01801513,-0.00470587,0.01097095,-0.01533948,-0.07365632,-0.02831991,-0.01758827,0.00698494,-0.0049085,0.05752466,-0.025595,0.10076795,-0.00551943,-0.00487125,0.00590299,-0.05941124,-0.01337545,0.03269956,-0.01198845,0.04651183,0.03881747,0.006645,-0.04014753,0.05708465,-0.00121985,-0.0377081,-0.00492378,0.01043273,0.06992626,0.04232829,0.02038896,-0.03950992,-0.05972575,-0.12214299,-0.19026276,0.01608788,0.04979781,-0.07744166,0.01703331,-0.05288798,0.06143932,0.01023619,0.0525786,0.1240694,0.07543328,0.00457493,0.00095147,-0.01677444,-0.0049164,0.01628392,0.0316912,0.00463794,-0.02371107,0.00952006,0.03007024,-0.00961845,-0.06644922,-0.0164186,0.01798282,-0.05897603,0.14525393,0.04750377,0.05772545,0.03602413,0.03606923,0.0060859,-0.03872655,-0.15595667,0.0424304,0.071738,-0.04304529,0.04912029,-0.06505194,0.00504803,0.0250628,0.06704879,0.02360434,-0.03872523,0.018471,0.0207659,-0.01130425,-0.0115938,-0.02677877,0.02055182,-0.01384949,0.07612365,-0.01934474,0.05420098,-0.01415004,-0.03252222,-0.05145888,0.01160706,0.0150917,0.03415193,0.00695071,-0.04475718,0.01278439,-0.05067372,0.00048899,-0.0487312,0.01526438,-0.04733023,0.06656368,0.03570983,-0.0249726,0.13853875,0.01644737,0.0062845,0.00579946,0.02088206,0.02071501,0.02989333,0.02230461,-0.03650586,0.05910569,0.03708016,0.08219961,0.03353375,0.03126006,-0.0651786,-0.01269588,-0.00362827,0.04358703,-0.01459277,-0.05556512,-0.02464332,0.00721869,0.06784013,0.08104615,0.01484239,-0.28981459,0.02476832,-0.01037986,0.01384693,0.00690545,0.02029973,0.0481608,-0.00209603,-0.03670406,0.01018776,-0.09986098,0.00274296,0.00252044,-0.04198566,0.00747585,-0.01661075,0.0621347,-0.01757784,0.02650758,0.03584982,0.04930257,0.01075871,0.22151348,0.01207126,0.04263812,0.01181271,0.00250022,0.07560507,0.03924406,-0.01772969,-0.0325764,0.0149349,0.01410036,-0.03140847,-0.00720796,0.09797939,0.00802027,0.00198961,0.0217765,0.01114769,-0.02116982,0.02613887,-0.11161539,0.01577721,0.0921801,-0.00849567,-0.03614761,-0.0971095,-0.01779821,0.02495453,-0.04779223,0.02316017,0.00743401,-0.03138448,0.07403634,0.0566167,0.00950244,-0.03574588,-0.04466664,0.02143178,0.00364405,-0.07782392,0.11377724,0.0863364,0.01143781],"last_embed":{"hash":"7db29cf876a0efe0061fbdd5ae74f0d8e3537a8ff11a25572b0a71770a359b3a","tokens":53}}},"text":null,"length":0,"last_read":{"hash":"7db29cf876a0efe0061fbdd5ae74f0d8e3537a8ff11a25572b0a71770a359b3a","at":1757414816913},"key":"印象笔记/Python/NumPy-快速处理数据.md##{2}","lines":[6,6],"size":65,"outlinks":[{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md##{3}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.13547964,-0.02552962,0.01587145,-0.04159658,0.02580811,0.00511859,-0.00796695,-0.02070406,0.04591663,0.01555952,0.05709639,-0.09241774,0.03470492,0.0071484,-0.00589329,-0.02409615,-0.0128923,0.00054232,-0.04129554,-0.05087855,0.1134042,-0.03506145,0.03549545,-0.06509049,0.03531063,0.08030832,-0.02105208,0.00003094,0.01990044,-0.18136759,0.02904094,0.05276243,0.0234048,-0.0373826,0.05008208,0.01656192,-0.0069168,-0.00641808,-0.01318151,0.08587863,-0.00883727,-0.01137786,-0.02082566,0.0163707,0.01313069,-0.0791021,-0.03788508,0.00473551,0.00897976,-0.01373186,-0.02750673,0.00283611,-0.03305333,-0.01344688,0.05028697,0.02043909,0.06335163,0.03110505,0.03015096,0.00872329,0.02080868,0.00391584,-0.18473968,0.03813282,0.08041858,-0.0164737,-0.02242552,0.01377045,0.02477691,0.04538748,-0.05996636,0.04002191,-0.07256668,0.11020524,0.04510924,-0.01608559,0.0398934,-0.03878354,-0.01349652,-0.04647586,-0.02705363,0.04180174,-0.04431874,-0.01060712,-0.00259688,-0.01016697,0.01834041,0.01183263,0.02589036,-0.04561308,0.03457832,-0.03041274,0.01052248,0.08294789,-0.00765712,0.00538134,0.09694577,0.03421422,-0.00003318,0.09440343,-0.04856129,0.03460224,0.00568449,0.01658648,0.02159633,-0.0343069,-0.02345374,-0.05429335,-0.01403407,0.009047,-0.00227263,-0.0110715,0.04636841,-0.05837581,0.05100577,-0.0354841,-0.04525465,0.01024441,-0.0331239,0.00197267,-0.02759227,-0.01644726,0.04589972,-0.02663608,0.00674347,-0.02166181,-0.02554109,0.06721573,0.02802015,0.02482025,0.08793027,-0.00828872,-0.07989191,-0.00940827,-0.00983254,-0.05298291,-0.05376589,0.01229797,0.04201247,-0.04007833,-0.00164101,-0.11135265,0.00523558,-0.05348407,-0.07579669,0.08892611,-0.10342403,-0.00580525,-0.01217002,-0.06102266,-0.02628439,0.06524465,-0.03766206,-0.04615093,0.01315048,-0.01454761,0.04342151,0.09318135,-0.00805522,-0.04090973,-0.04708948,-0.03532592,-0.07249396,0.0736588,-0.02628085,-0.06918025,-0.01216459,0.06041643,-0.04515732,-0.0451737,0.03366723,-0.02997938,-0.04144929,0.01856864,0.10115393,-0.03714944,0.00478152,-0.04617746,0.01524458,0.00625749,-0.02211365,-0.06935431,-0.0497619,0.00548448,0.0001585,-0.07525965,0.02561359,-0.01768025,0.04173224,-0.00810598,0.01398683,-0.00652564,-0.0103332,-0.05517523,-0.03926768,-0.00813658,0.00618883,-0.01699867,0.05885289,-0.03618707,0.0857017,0.0019779,-0.00061974,0.02903011,-0.04721346,-0.02976506,0.04811519,-0.0223445,0.07239554,0.04963193,-0.00146643,-0.03633049,0.04139961,-0.01749414,-0.01348593,0.00323634,0.02173809,0.05914726,0.00662118,0.0344553,-0.03054982,-0.09102778,-0.12519127,-0.18810338,0.00197741,0.04056178,-0.08499743,0.01699146,-0.05911529,0.0501332,0.0140998,0.05868296,0.09945778,0.07927741,0.01464842,-0.00392305,-0.03071445,0.00244429,0.02179357,0.02493984,-0.00981857,-0.00652598,-0.0022456,0.03754323,-0.00545115,-0.0400252,-0.01494323,-0.00857561,-0.04690893,0.1404229,0.04655198,0.0777259,0.047756,0.02165405,0.00006038,-0.03046343,-0.13474666,0.03349949,0.07170433,-0.03611443,0.02041504,-0.06791389,0.00134631,0.01049047,0.06299104,0.03654787,-0.02992041,-0.00802039,-0.00472547,-0.023135,-0.01672666,-0.01635753,0.0308298,0.00419075,0.05780993,-0.01724134,0.06209187,-0.01927347,-0.03117031,-0.05274085,-0.01246093,0.00080152,0.0375253,-0.00369378,-0.04078744,0.0136811,-0.04755718,0.0084631,-0.05510785,0.01718948,-0.05204299,0.05166863,0.02067257,-0.03321748,0.15511666,0.02743263,-0.0115973,-0.0025735,0.02455671,0.02558626,0.03327088,0.02239505,-0.0333299,0.05883645,0.02330806,0.0877362,0.02356059,0.04126647,-0.0555321,-0.02147047,-0.01580143,0.05334365,-0.02680963,-0.07275839,-0.01549916,-0.00233078,0.06066351,0.06971915,0.02819169,-0.29164153,0.02784704,-0.00599108,0.00061643,0.00814015,0.02476003,0.05030264,-0.0139152,-0.05657535,0.02003091,-0.06894668,0.01269478,0.01072636,-0.0368426,0.01100855,-0.00821381,0.08344464,-0.01112938,0.0414954,0.04685003,0.04606472,0.00610815,0.22947671,0.01077016,0.04429358,0.00588495,-0.01292979,0.04460322,0.05036141,-0.02569672,-0.02899842,0.0017103,0.04873161,-0.04048978,0.00846769,0.08618946,-0.00761193,0.00803158,0.04297324,0.00069978,-0.01307253,0.01342889,-0.10207168,0.01126022,0.0913401,0.00497863,-0.05093394,-0.09562902,-0.01449063,0.02157346,-0.050277,0.03292929,-0.02531336,-0.00820587,0.07879295,0.0429267,0.01253715,-0.04596838,-0.03172892,0.00022479,0.01890243,-0.06681967,0.09262983,0.09215596,0.01801997],"last_embed":{"hash":"25282152e8b4a9b44c0e6ac248480d92ffbda5031514221c34da0f4b01211c1d","tokens":65}}},"text":null,"length":0,"last_read":{"hash":"25282152e8b4a9b44c0e6ac248480d92ffbda5031514221c34da0f4b01211c1d","at":1757414816932},"key":"印象笔记/Python/NumPy-快速处理数据.md##{3}","lines":[7,7],"size":79,"outlinks":[{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md##{4}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12324124,-0.03002289,0.02053748,-0.03353302,0.02188543,-0.003998,-0.02212232,-0.01121478,0.04398523,0.01895316,0.05682788,-0.10663018,0.04340956,0.01115493,-0.02342755,-0.02046225,-0.01733104,0.00129935,-0.02431345,-0.04650409,0.10859475,-0.02996295,0.0433812,-0.07822975,0.00335033,0.07190645,-0.01247058,-0.00142766,0.0066199,-0.18055908,0.02822465,0.03876513,0.00962797,-0.02778684,0.04831813,0.02002047,-0.00165945,0.00371776,-0.0049403,0.08856291,0.00098992,0.00287106,-0.03382298,0.01576165,0.01913461,-0.06548126,-0.03044696,-0.00171091,0.00799572,-0.02882332,-0.05159431,-0.01343762,-0.0279213,-0.00875816,0.0367659,0.02265003,0.06337167,0.02716851,0.03803715,0.00442767,0.00785136,0.0081087,-0.20540795,0.02829064,0.07754802,-0.02400219,-0.0275959,0.01463124,0.03022818,0.03577306,-0.06637657,0.04255509,-0.06627464,0.10556766,0.05125745,-0.01469503,0.04284359,-0.03148232,0.00080503,-0.04168521,-0.03926151,0.02198066,-0.02600127,-0.03133896,-0.0023135,-0.02000436,0.0163887,-0.00894518,0.04051632,-0.04851613,0.03453503,-0.03060246,0.00617833,0.08867314,-0.01495932,0.01495403,0.08568952,0.0269103,0.00314328,0.0950276,-0.05877429,0.03142689,0.00777848,0.02048131,0.00941696,-0.04478471,-0.01589979,-0.06096509,-0.02815358,0.01518153,0.00519575,-0.00639622,0.03741715,-0.05145887,0.05565816,-0.01415881,-0.04028689,0.02800254,-0.03800664,0.00445881,-0.02686015,-0.01096875,0.05009045,-0.03912098,0.02220727,-0.02040154,-0.04362752,0.07610869,0.00635881,0.0219023,0.07348768,-0.02189611,-0.09485086,-0.01090181,0.0011204,-0.04234118,-0.04724894,0.00781887,0.0354808,-0.04654738,-0.01348886,-0.13047172,0.00678492,-0.06869575,-0.09086301,0.09937701,-0.09541184,0.02681935,-0.01123698,-0.04643973,-0.02674996,0.05439969,-0.05169152,-0.05818399,0.01128774,-0.00687452,0.04075764,0.09725592,0.01728544,-0.0631758,-0.05294362,-0.04536216,-0.06282744,0.07471587,-0.02888878,-0.05659718,0.00139069,0.07103278,-0.03809251,-0.03568067,0.0448366,-0.0056471,-0.04644059,0.03104124,0.09411933,-0.02634104,-0.01019705,-0.03271694,0.03847064,0.00165399,-0.00679918,-0.03817487,-0.03044167,0.00077464,0.00483177,-0.04467912,0.03069855,-0.01760889,0.05408679,-0.00796062,0.0061471,-0.0061488,-0.00838192,-0.05882641,-0.03455815,-0.00114285,0.01904471,-0.02012205,0.05620946,-0.01069974,0.09047655,-0.00069598,-0.01017827,0.02296529,-0.04336347,-0.02729638,0.04172803,-0.01226944,0.06070769,0.04676266,0.00892435,-0.05386167,0.02442387,-0.02042933,-0.03874493,-0.01775373,0.01417491,0.06558717,0.02376242,0.02800892,-0.032952,-0.08146793,-0.12649694,-0.17767301,-0.00229806,0.04190889,-0.0858704,0.03683708,-0.04672309,0.05538037,0.01609741,0.04484989,0.11659249,0.06764843,0.02760842,-0.00049712,-0.0311739,0.00223234,0.01349737,0.02065931,-0.01121483,-0.03833285,0.00109729,0.02152457,-0.00786501,-0.05614804,-0.01858023,0.00718002,-0.05710039,0.13866363,0.02136554,0.04959875,0.04573777,0.0262131,0.00299805,-0.02878611,-0.14112175,0.02714411,0.06980111,-0.04804455,0.03915352,-0.06610131,-0.00762091,0.02388571,0.07118943,0.03244818,-0.023269,-0.02224686,0.01384852,-0.01811486,-0.01931537,-0.02007493,0.03720033,0.00186918,0.06268422,-0.00392823,0.04077734,-0.03045072,-0.03493235,-0.0570827,-0.00631362,0.00735113,0.03119071,-0.00291696,-0.04305615,0.01364689,-0.05174502,0.01151408,-0.05826837,0.01472566,-0.03648504,0.04159676,0.03831026,-0.01756181,0.15323719,0.01849453,-0.01136046,0.01902746,0.00953606,0.03261978,0.03378544,0.0245801,-0.03420093,0.06823519,0.03512401,0.08006759,0.02143823,0.04863437,-0.06776962,-0.01467795,-0.010315,0.05177525,-0.00647807,-0.0544787,-0.02567089,-0.00478027,0.07060243,0.06706837,0.04440293,-0.28782672,0.03124071,-0.01707741,0.017839,0.01345199,0.01911758,0.04842676,-0.01230882,-0.04653042,0.00807714,-0.05719637,0.00547068,0.01639368,-0.02825564,0.00815657,-0.00604597,0.08343191,-0.03184876,0.03775327,0.05036918,0.04398158,0.01177756,0.21972625,0.00645826,0.0708778,0.00266948,-0.0073526,0.07632022,0.04130836,-0.02727525,-0.02333411,0.0084784,0.02439841,-0.03456198,-0.00514951,0.10416573,-0.01673274,0.00391976,0.01725829,0.0118699,-0.01582659,0.01695924,-0.1130558,0.00995221,0.1108351,0.00488519,-0.04804225,-0.11246961,-0.01668998,0.02854924,-0.02890393,0.03319662,-0.00643818,-0.02071956,0.0612404,0.0484863,0.0154984,-0.03681554,-0.03985485,-0.001605,-0.00203713,-0.05899259,0.07952521,0.08547911,-0.00007159],"last_embed":{"hash":"8c4c105494ff42833cdef528de0198da0f285bbbf51b0d45f24c329c9bfee364","tokens":57}}},"text":null,"length":0,"last_read":{"hash":"8c4c105494ff42833cdef528de0198da0f285bbbf51b0d45f24c329c9bfee364","at":1757414816947},"key":"印象笔记/Python/NumPy-快速处理数据.md##{4}","lines":[8,9],"size":73,"outlinks":[{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11383393,-0.04366894,-0.01260466,-0.03821075,0.04499353,-0.0012633,-0.01783825,-0.01706639,0.0318871,0.02326143,0.0371439,-0.05489242,0.03759171,-0.00804609,-0.02227132,-0.03080242,-0.02180473,0.01308459,-0.0666844,-0.01321831,0.09202594,-0.00363932,0.0188542,-0.06095432,0.02906245,0.09668707,-0.01567352,0.0051904,0.00498856,-0.20131169,0.05631266,0.00855609,-0.01557215,-0.01662672,0.06810024,-0.00337914,-0.00178329,0.01240092,-0.0400162,0.05513161,0.02209114,0.00790213,-0.03017241,-0.00123157,0.02570881,-0.06930102,-0.04972099,-0.02904372,0.03721193,-0.01804627,-0.0659085,-0.01934354,-0.06569026,-0.00556144,0.0654582,-0.01976385,0.08080693,0.04096024,0.01147998,0.00772699,0.01012958,-0.00903802,-0.18820703,0.05339268,0.08408787,-0.02709402,-0.00909917,0.01079692,0.05607282,0.00364444,-0.05320717,0.04419101,-0.02240408,0.09755429,0.02553141,-0.03094391,0.04574032,-0.03283131,-0.03799197,0.00699942,-0.05683446,0.06313576,-0.0244053,-0.00407695,0.0179444,0.03775358,0.00284411,-0.01738417,0.02881896,-0.01692392,0.01182105,-0.00543534,0.02112632,0.09079316,-0.0137807,-0.01549129,0.08235601,0.04457295,-0.02036493,0.0667896,-0.03457768,0.02504038,0.01815896,0.00451865,0.00613257,-0.04609156,-0.01414693,-0.05720324,-0.03292342,0.01943144,0.03316772,-0.01780945,0.02624166,-0.04336411,0.0621063,-0.00017418,-0.06581637,-0.00342749,-0.07691778,-0.01150625,-0.00742914,-0.00458057,0.06394193,-0.02043047,-0.00565354,-0.0099585,-0.03284268,0.04071316,0.03093015,0.02825298,0.08468636,-0.0066734,-0.08087178,0.00154683,-0.00082564,-0.00114421,-0.02851583,0.00160687,0.02163333,-0.03935999,0.00665851,-0.10318976,0.01273782,-0.05594508,-0.0756238,0.08471579,-0.07029466,0.0319977,-0.02793046,-0.04765907,-0.01457542,0.0607587,-0.02355304,-0.04719019,0.01348988,0.0031506,0.05188626,0.06708283,-0.02980914,-0.01663528,-0.08084916,-0.07154241,-0.01920296,0.03960131,-0.02934788,-0.09412479,-0.02255349,0.03682733,-0.04104371,-0.03061093,0.03037178,-0.01732784,-0.04009522,-0.01308856,0.0772538,-0.02511289,-0.03396643,-0.03183319,0.05970508,-0.01049326,-0.02601898,-0.0390052,-0.03970798,-0.00064663,0.00200463,-0.08203141,0.0009853,0.0130046,0.03445196,-0.00397376,-0.03765931,-0.00087217,-0.01425329,-0.0484908,-0.03864502,0.02740319,-0.00364458,-0.00892732,0.06610056,-0.04379866,0.10508505,0.02189512,0.00382528,0.06558757,-0.0140688,-0.01301645,-0.0030398,-0.03463447,0.08166055,0.05814917,0.01830251,-0.05836987,-0.01867974,-0.00422193,-0.03398887,-0.02372951,0.05632829,0.05884324,0.05031159,0.03478581,0.02766647,-0.10328046,-0.11389272,-0.18177444,0.04037498,0.01676457,-0.07414568,-0.0013865,-0.03820421,0.01308863,0.00087373,-0.00152137,0.08081927,0.08074906,0.03172616,0.00111082,-0.03180312,-0.04253509,0.02555306,0.05328511,-0.00608361,-0.02439359,0.04486196,0.02872987,0.00482831,0.0021992,0.00910813,-0.0274034,-0.04953296,0.13044778,-0.00652844,0.06877122,0.04351195,0.02786231,0.00612618,-0.0492383,-0.1105223,0.04822419,0.03672342,-0.06262499,0.06177417,-0.06113985,0.00450907,0.0336519,0.05173824,0.05060615,-0.02617322,-0.00709422,0.01110569,-0.03325906,-0.01613896,-0.02561362,0.01155228,0.01071491,0.04549078,0.00342113,0.02761869,-0.02174518,-0.0474648,-0.04972963,0.00086067,-0.01695962,0.0409332,-0.00163405,-0.06779281,-0.02122704,-0.05984366,0.00265161,-0.06529135,-0.00957167,-0.01290007,0.01440596,0.00573943,-0.03513269,0.15701431,0.04498458,-0.00489422,0.03639331,-0.01260811,0.02495718,0.01294949,0.02892669,-0.04057831,0.04149279,0.07155067,0.07028022,0.02805342,0.06105829,-0.0574588,0.04925138,0.00270116,0.00436983,0.00222547,-0.0458004,-0.03894718,0.02553229,0.05910204,0.11908408,0.05097452,-0.28763497,0.00638475,-0.02535565,-0.03042714,0.02187677,-0.02455273,0.02530876,0.02526565,-0.0312233,0.02576395,-0.04316874,0.0297617,0.01717467,-0.0587606,0.00058808,0.02227199,0.08630472,-0.01543409,0.05912036,0.04828643,0.03361892,0.0255883,0.23554379,-0.03037714,0.04137138,0.00241192,-0.05802004,0.06246734,0.07555504,-0.00376946,0.00481924,0.01252009,0.05833363,-0.06512012,-0.01088103,0.11290637,0.02126085,-0.00701617,0.03629369,-0.01683221,-0.03249932,-0.01205179,-0.11177673,0.01091734,0.09515813,-0.02093294,-0.01278691,-0.11854322,-0.03836073,0.02189004,-0.04036022,0.02433662,0.02133549,-0.01259581,0.03225681,0.02226228,-0.00048063,-0.03457284,-0.01296221,-0.0005128,0.03965149,-0.04944618,0.09861972,0.1083001,0.00690124],"last_embed":{"hash":"5fed7a1bcf231c4c1c588e6af94b96e3a6786242c9cb188b09364578f909fa18","tokens":474}}},"text":null,"length":0,"last_read":{"hash":"5fed7a1bcf231c4c1c588e6af94b96e3a6786242c9cb188b09364578f909fa18","at":1757414816964},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]","lines":[10,584],"size":44969,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":9},{"title":"函数库的导入","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":11},{"title":"本书的示例程序假设用以下推荐的方式导入NumPy函数库:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":13},{"title":"**import** **numpy** **as** **np**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":15},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":17},{"title":"2.1.1　创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":17},{"title":"首先需要创建数组才能对其进行其它操作。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":19},{"title":"我们可以通过给array函数传递Python的序列对象创建数组，如果传递的是多层嵌套的序列，将创建多维数组(下例中的变量c):","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":21},{"title":"**>>>** a = np.array(1, 2, 3, 4)**>>>** b = np.array((5, 6, 7, 8))**>>>** c = np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10)**>>>** barray(5, 6, 7, 8)**>>>** carray(1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)**>>>** c.dtypedtype('int32')","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":23},{"title":"数组的大小可以通过其shape属性获得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":25},{"title":"**>>>** a.shape(4,)**>>>** c.shape(3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":27},{"title":"数组a的shape只有一个元素，因此它是一维数组。而数组c的shape有两个元素，因此它是二维数组，其中第0轴的长度为3，第1轴的长度为4。还可以通过修改数组的shape属性，在保持数组元素个数不变的情况下，改变数组每个轴的长度。下面的例子将数组c的shape改为(4,3)，注意从(3,4)改为(4,3)并不是对数组进行转置，而只是改变每个轴的大小，数组元素在内存中的位置并没有改变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":29},{"title":"**>>>** c.shape = 4,3**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":31},{"title":"当某个轴的元素为-1时，将根据数组元素的个数自动计算此轴的长度，因此下面的程序将数组c的shape改为了(2,6)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":33},{"title":"**>>>** c.shape = 2,-1**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":35},{"title":"使用数组的reshape方法，可以创建一个改变了尺寸的新数组，原数组的shape保持不变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":37},{"title":"**>>>** d = a.reshape((2,2))**>>>** darray(1, 2, 3, 4)**>>>** aarray(1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":39},{"title":"数组a和d其实共享数据存储内存区域，因此修改其中任意一个数组的元素都会同时修改另外一个数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":41},{"title":"**>>>** a1 = 100 _# 将数组a的第一个元素改为100_**>>>** d _# 注意数组d中的2也被改变了_array( 1, 100, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":43},{"title":"数组的元素类型可以通过dtype属性获得。上面例子中的参数序列的元素都是整数，因此所创建的数组的元素类型也是整数，并且是32bit的长整型。可以通过dtype参数在创建时指定元素类型:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":45},{"title":"**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.float)array( 1., 2., 3., 4., 4., 5., 6., 7., 7., 8., 9., 10.)**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.complex)array( 1.+0.j, 2.+0.j, 3.+0.j, 4.+0.j, 4.+0.j, 5.+0.j, 6.+0.j, 7.+0.j, 7.+0.j, 8.+0.j, 9.+0.j, 10.+0.j)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":47},{"title":"上面的例子都是先创建一个Python序列，然后通过array函数将其转换为数组，这样做显然效率不高。因此NumPy提供了很多专门用来创建数组的函数。下面的每个函数都有一些关键字参数，具体用法请查看函数说明。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":49},{"title":"arange函数类似于python的range函数，通过指定开始值、终值和步长来创建一维数组，注意数组不包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":51},{"title":"**>>>** np.arange(0,1,0.1)array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":53},{"title":"linspace函数通过指定开始值、终值和元素个数来创建一维数组，可以通过endpoint关键字指定是否包括终值，缺省设置是包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":55},{"title":"**>>>** np.linspace(0, 1, 12)array( 0. , 0.09090909, 0.18181818, 0.27272727, 0.36363636, 0.45454545, 0.54545455, 0.63636364, 0.72727273, 0.81818182, 0.90909091, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":57},{"title":"logspace函数和linspace类似，不过它创建等比数列，下面的例子产生1(10^0)到100(10^2)、有20个元素的等比数列:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":59},{"title":"**>>>** np.logspace(0, 2, 20)array( 1. , 1.27427499, 1.62377674, 2.06913808, 2.6366509 , 3.35981829, 4.2813324 , 5.45559478, 6.95192796, 8.8586679 , 11.28837892, 14.38449888, 18.32980711, 23.35721469, 29.76351442, 37.92690191, 48.32930239, 61.58482111, 78.47599704, 100. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":61},{"title":"此外，使用frombuffer, fromstring, fromfile等函数可以从字节序列创建数组，下面以fromstring为例:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":64},{"title":"**>>>** s = \"abcdefgh\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":66},{"title":"Python的字符串实际上是字节序列，每个字符占一个字节，因此如果从字符串s创建一个8bit的整数数组的话，所得到的数组正好就是字符串中每个字符的ASCII编码:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":68},{"title":"**>>>** np.fromstring(s, dtype=np.int8)array( 97, 98, 99, 100, 101, 102, 103, 104, dtype=int8)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":70},{"title":"如果从字符串s创建16bit的整数数组，那么两个相邻的字节就表示一个整数，把字节98和字节97当作一个16位的整数，它的值就是98*256+97 = 25185。可以看出内存中是以little endian(低位字节在前)方式保存数据的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":72},{"title":"**>>>** np.fromstring(s, dtype=np.int16)array(25185, 25699, 26213, 26727, dtype=int16)**>>>** 98*256+9725185","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":74},{"title":"如果把整个字符串转换为一个64位的双精度浮点数数组，那么它的值是:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":76},{"title":"**>>>** np.fromstring(s, dtype=np.float)array( 8.54088322e+194)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":78},{"title":"显然这个例子没有什么意义，但是可以想象如果我们用C语言的二进制方式写了一组double类型的数值到某个文件中，那们可以从此文件读取相应的数据，并通过fromstring函数将其转换为float64类型的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":80},{"title":"我们可以写一个Python的函数，它将数组下标转换为数组中对应的值，然后使用此函数创建数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":82},{"title":"**>>>** **def** func(i):**...** **return** i%4+1**...****>>>** np.fromfunction(func, (10,))array( 1., 2., 3., 4., 1., 2., 3., 4., 1., 2.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":84},{"title":"fromfunction函数的第一个参数为计算每个数组元素的函数，第二个参数为数组的大小(shape)，因为它支持多维数组，所以第二个参数必须是一个序列，本例中用(10,)创建一个10元素的一维数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":86},{"title":"下面的例子创建一个二维数组表示九九乘法表，输出的数组a中的每个元素ai, j都等于func2(i, j)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":88},{"title":"**>>>** **def** func2(i, j):**...** **return** (i+1) * (j+1)**...****>>>** a = np.fromfunction(func2, (9,9))**>>>** aarray( 1., 2., 3., 4., 5., 6., 7., 8., 9., 2., 4., 6., 8., 10., 12., 14., 16., 18., 3., 6., 9., 12., 15., 18., 21., 24., 27., 4., 8., 12., 16., 20., 24., 28., 32., 36., 5., 10., 15., 20., 25., 30., 35., 40., 45., 6., 12., 18., 24., 30., 36., 42., 48., 54., 7., 14., 21., 28., 35., 42., 49., 56., 63., 8., 16., 24., 32., 40., 48., 56., 64., 72., 9., 18., 27., 36., 45., 54., 63., 72., 81.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":90},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":92},{"title":"2.1.2　存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":92},{"title":"数组元素的存取方法和Python的标准方法相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":94},{"title":"**>>>** a = np.arange(10)**>>>** a5 _# 用整数作为下标可以获取数组中的某个元素_5**>>>** a3:5 _# 用范围作为下标获取数组的一个切片，包括a3不包括a5_array(3, 4)**>>>** a:5 _# 省略开始下标，表示从a0开始_array(0, 1, 2, 3, 4)**>>>** a:-1 _# 下标可以使用负数，表示从数组后往前数_array(0, 1, 2, 3, 4, 5, 6, 7, 8)**>>>** a2:4 = 100,101 _# 下标还可以用来修改元素的值_**>>>** aarray( 0, 1, 100, 101, 4, 5, 6, 7, 8, 9)**>>>** a1:-1:2 _# 范围中的第三个参数表示步长，2表示隔一个元素取一个元素_array( 1, 101, 5, 7)**>>>** a::-1 _# 省略范围的开始下标和结束下标，步长为-1，整个数组头尾颠倒_array( 9, 8, 7, 6, 5, 4, 101, 100, 1, 0)**>>>** a5:1:-2 _# 步长为负数时，开始下标必须大于结束下标_array( 5, 101)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":96},{"title":"和Python的列表序列不同，通过下标范围获取的新的数组是原始数组的一个视图。它与原始数组共享同一块数据空间：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":98},{"title":"**>>>** b = a3:7 _# 通过下标范围产生一个新的数组b，b和a共享同一块数据空间_**>>>** barray(101, 4, 5, 6)**>>>** b2 = -10 _# 将b的第2个元素修改为-10_**>>>** barray(101, 4, -10, 6)**>>>** a _# a的第5个元素也被修改为10_array( 0, 1, 100, 101, 4, -10, 6, 7, 8, 9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":100},{"title":"除了使用下标范围存取元素之外，NumPy还提供了两种存取元素的高级方法。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":102},{"title":"**使用整数序列**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":104},{"title":"当使用整数序列对数组元素进行存取时，将使用整数序列中的每个元素作为下标，整数序列可以是列表或者数组。使用整数序列作为下标获得的数组不和原始数组共享数据空间。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":106},{"title":"**>>>** x = np.arange(10,1,-1)**>>>** xarray(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3, 3, 1, 8 _# 获取x中的下标为3, 3, 1, 8的4个元素，组成一个新的数组_array(7, 7, 9, 2)**>>>** b = xnp.array(3,3,-3,8) _#下标可以是负数_**>>>** b2 = 100**>>>** barray(7, 7, 100, 2)**>>>** x _# 由于b和x不共享数据空间，因此x中的值并没有改变_array(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3,5,1 = -1, -2, -3 _# 整数序列下标也可以用来修改元素的值_**>>>** xarray(10, -3, 8, -1, 6, -2, 4, 3, 2)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":108},{"title":"**使用布尔数组**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":110},{"title":"当使用布尔数组b作为下标存取数组x中的元素时，将收集数组x中所有在数组b中对应下标为True的元素。使用布尔数组作为下标获得的数组不和原始数组共享数据空间，注意这种方式只对应于布尔数组，不能使用布尔列表。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":112},{"title":"**>>>** x = np.arange(5,0,-1)**>>>** xarray(5, 4, 3, 2, 1)**>>>** xnp.array(True, False, True, False, False)**>>>** _# 布尔数组中下标为0，2的元素为True，因此获取x中下标为0,2的元素_array(5, 3)**>>>** xTrue, False, True, False, False**>>>** _# 如果是布尔列表，则把True当作1, False当作0，按照整数序列方式获取x中的元素_array(4, 5, 4, 5, 5)**>>>** xnp.array(True, False, True, True)**>>>** _# 布尔数组的长度不够时，不够的部分都当作False_array(5, 3, 2)**>>>** xnp.array(True, False, True, True) = -1, -2, -3**>>>** _# 布尔数组下标也可以用来修改元素_**>>>** xarray(-1, 4, -2, -3, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":114},{"title":"布尔数组一般不是手工产生，而是使用布尔运算的ufunc函数产生，关于ufunc函数请参照 ufunc运算 一节。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":116},{"title":"**>>>** x = np.random.rand(10) _# 产生一个长度为10，元素值为0-1的随机数的数组_**>>>** xarray( 0.72223939, 0.921226 , 0.7770805 , 0.2055047 , 0.17567449, 0.95799412, 0.12015178, 0.7627083 , 0.43260184, 0.91379859)**>>>** x>0.5**>>>** _# 数组x中的每个元素和0.5进行大小比较，得到一个布尔数组，True表示x中对应的值大于0.5_array( True, True, True, False, False, True, False, True, False, True, dtype=bool)**>>>** xx>0.5**>>>** _# 使用x>0.5返回的布尔数组收集x中的元素，因此得到的结果是x中所有大于0.5的元素的数组_array( 0.72223939, 0.921226 , 0.7770805 , 0.95799412, 0.7627083 , 0.91379859)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":118},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":120},{"title":"2.1.3　多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":120},{"title":"图2.1","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro02","line":122},{"title":"多维数组的存取和一维数组类似，因为多维数组有多个轴，因此它的下标需要用多个值来表示，NumPy采用组元(tuple)作为数组的下标。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":122},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","line":128},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","line":140},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":149},{"title":"在C语言中我们可以通过struct关键字定义结构类型，结构中的字段占据连续的内存空间，每个结构体占用的内存大小都相同，因此可以很容易地定义结构数组。和C语言一样，在NumPy中也很容易对这种结构数组进行操作。只要NumPy中的结构定义和C语言中的定义相同，NumPy就可以很方便地读取C语言的结构数组的二进制数据，转换为NumPy的结构数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":151},{"title":"假设我们需要定义一个结构数组，它的每个元素都有name, age和weight字段。在NumPy中可以如下定义：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":153},{"title":"**import** **numpy** **as** **np**persontype = np.dtype({ 'names':'name', 'age', 'weight', 'formats':'S32','i', 'f'})a = np.array((\"Zhang\",32,75.5),(\"Wang\",24,65.2), dtype=persontype)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":155},{"title":"我们先创建一个dtype对象persontype，通过其字典参数描述结构类型的各个字段。字典有两个关键字：names，formats。每个关键字对应的值都是一个列表。names定义结构中的每个字段名，而formats则定义每个字段的类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":157},{"title":"**S32** : 32个字节的字符串类型，由于结构中的每个元素的大小必须固定，因此需要指定字符串的长度","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":159},{"title":"**i** : 32bit的整数类型，相当于np.int32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":161},{"title":"**f** : 32bit的单精度浮点数类型，相当于np.float32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":162},{"title":"然后我们调用array函数创建数组，通过关键字参数 dtype=persontype， 指定所创建的数组的元素类型为结构persontype。运行上面程序之后，我们可以在IPython中执行如下的语句查看数组a的元素类型","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":164},{"title":"**>>>** a.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":166},{"title":"这里我们看到了另外一种描述结构类型的方法： 一个包含多个组元的列表，其中形如 (字段名, 类型描述) 的组元描述了结构中的每个字段。类型描述前面为我们添加了 '|', '<' 等字符，这些字符用来描述字段值的字节顺序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":168},{"title":"**|** : 忽视字节顺序","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":170},{"title":"**<** : 低位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":172},{"title":"**>** : 高位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":173},{"title":"结构数组的存取方式和一般数组相同，通过下标能够取得其中的元素，注意元素的值看上去像是组元，实际上它是一个结构：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":175},{"title":"**>>>** a0('Zhang', 32, 75.5)**>>>** a0.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":177},{"title":"a0是一个结构元素，它和数组a共享内存数据，因此可以通过修改它的字段，改变原始数组中的对应字段：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":179},{"title":"**>>>** c = a1**>>>** c\"name\" = \"Li\"**>>>** a1\"name\"\"Li\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":181},{"title":"结构像字典一样可以通过字符串下标获取其对应的字段值：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":183},{"title":"**>>>** a0\"name\"'Zhang'","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":185},{"title":"我们不但可以获得结构元素的某个字段，还可以直接获得结构数组的字段，它返回的是原始数组的视图，因此可以通过修改b0改变a0\"age\"：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":187},{"title":"**>>>** b=a:\"age\" _# 或者a\"age\"_**>>>** barray(32, 24)**>>>** b0 = 40**>>>** a0\"age\"40","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":189},{"title":"通过调用a.tostring或者a.tofile方法，可以直接输出数组a的二进制形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":191},{"title":"**>>>** a.tofile(\"test.bin\")","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":193},{"title":"利用下面的C语言程序可以将test.bin文件中的数据读取出来。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":195},{"title":"内存对齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":197},{"title":"C语言的结构体为了内存寻址方便，会自动的添加一些填充用的字节，这叫做内存对齐。例如如果把下面的name32改为name30的话，由于内存对齐问题，在name和age中间会填补两个字节，最终的结构体大小不会改变。因此如果numpy中的所配置的内存大小不符合C语言的对齐规范的话，将会出现数据错位。为了解决这个问题，在创建dtype对象时，可以传递参数align=True，这样numpy的结构数组的内存对齐和C语言的结构体就一致了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":199},{"title":"#include <stdio.h> **struct** person{ char name32; int age; float weight;}; **struct** person p2; void main (){ FILE *fp; int i; fp=fopen(\"test.bin\",\"rb\"); fread(p, **sizeof**(**struct** person), 2, fp); fclose(fp); **for**(i=0;i<2;i++) printf(\"%s %d %f**n**\", pi.name, pi.age, pi.weight); getchar();}","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":201},{"title":"结构类型中可以包括其它的结构类型，下面的语句创建一个有一个字段f1的结构，f1的值是另外一个结构，它有字段f2，其类型为16bit整数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":203},{"title":"**>>>** np.dtype(('f1', ('f2', np.int16)))dtype(('f1', ('f2', '<i2')))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":205},{"title":"当某个字段类型为数组时，用组元的第三个参数表示，下面描述的f1字段是一个shape为(2,3)的双精度浮点数组:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":207},{"title":"**>>>** np.dtype(('f0', 'i4'), ('f1', 'f8', (2, 3)))dtype(('f0', '<i4'), ('f1', '<f8', (2, 3)))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":209},{"title":"用下面的字典参数也可以定义结构类型，字典的关键字为结构中字段名，值为字段的类型描述，但是由于字典的关键字是没有顺序的，因此字段的顺序需要在类型描述中给出，类型描述是一个组元，它的第二个值给出字段的字节为单位的偏移量，例如age字段的偏移量为25个字节：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":211},{"title":"**>>>** np.dtype({'surname':('S25',0),'age':(np.uint8,25)})dtype(('surname', '|S25'), ('age', '|u1'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":213},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":215},{"title":"2.1.5　内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":215},{"title":"图2.3","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpymemorystruct","line":217},{"title":"下面让我们来看看ndarray数组对象是如何在内存中储存的。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":217},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","line":219},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":239},{"title":"ufunc是universal function的缩写，它是一种能对数组的每个元素进行操作的函数。NumPy内置的许多ufunc函数都是在C语言级别实现的，因此它们的计算速度非常快。让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":241},{"title":"**>>>** x = np.linspace(0, 2*np.pi, 10)# 对数组x中的每个元素进行正弦计算，返回一个同样大小的新数组**>>>** y = np.sin(x)**>>>** yarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":243},{"title":"先用linspace产生一个从0到2*PI的等距离的10个数，然后将其传递给sin函数，由于np.sin是一个ufunc函数，因此它对x中的每个元素求正弦值，然后将结果返回，并且赋值给y。计算之后x中的值并没有改变，而是新创建了一个数组保存结果。如果我们希望将sin函数所计算的结果直接覆盖到数组x上去的话，可以将要被覆盖的数组作为第二个参数传递给ufunc函数。例如：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":245},{"title":"**>>>** t = np.sin(x,x)**>>>** xarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)**>>>** id(t) == id(x)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":247},{"title":"sin函数的第二个参数也是x，那么它所做的事情就是对x中的每给值求正弦值，并且把结果保存到x中的对应的位置中。此时函数的返回值仍然是整个计算的结果，只不过它就是x，因此两个变量的id是相同的(变量t和变量x指向同一块内存区域)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":249},{"title":"我用下面这个小程序，比较了一下numpy.math和Python标准库的math.sin的计算速度：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":251},{"title":"**import** **time****import** **math****import** **numpy** **as** **np** x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = math.sin(t)**print** \"math.sin:\", time.clock() - start x = i * 0.001 **for** i **in** xrange(1000000)x = np.array(x)start = time.clock()np.sin(x,x)**print** \"numpy.sin:\", time.clock() - start _# 输出__# math.sin: 1.15426932753__# numpy.sin: 0.0882399858083_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":253},{"title":"在我的电脑上计算100万次正弦值，numpy.sin比math.sin快10倍多。这得利于numpy.sin在C语言级别的循环计算。numpy.sin同样也支持对单个数值求正弦，例如：numpy.sin(0.5)。不过值得注意的是，对单个数的计算math.sin则比numpy.sin快得多了，让我们看下面这个测试程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":255},{"title":"x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = np.sin(t)**print** \"numpy.sin loop:\", time.clock() - start _# 输出__# numpy.sin loop: 5.72166965355_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":257},{"title":"请注意numpy.sin的计算速度只有math.sin的1/5。这是因为numpy.sin为了同时支持数组和单个值的计算，其C语言的内部实现要比math.sin复杂很多，如果我们同样在Python级别进行循环的话，就会看出其中的差别了。此外，numpy.sin返回的数的类型和math.sin返回的类型有所不同，math.sin返回的是Python的标准float类型，而numpy.sin则返回一个numpy.float64类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":259},{"title":"**>>>** type(math.sin(0.5))<type 'float'>**>>>** type(np.sin(0.5))<type 'numpy.float64'>","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":261},{"title":"通过上面的例子我们了解了如何最有效率地使用math库和numpy库中的数学函数。因为它们各有长短，因此在导入时不建议使用*号全部载入，而是应该使用import numpy as np的方式载入，这样我们可以根据需要选择合适的函数调用。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":263},{"title":"NumPy中有众多的ufunc函数为我们提供各式各样的计算。除了sin这种单输入函数之外，还有许多多个输入的函数，add函数就是一个最常用的例子。先来看一个例子:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":265},{"title":"**>>>** a = np.arange(0,4)**>>>** aarray(0, 1, 2, 3)**>>>** b = np.arange(1,5)**>>>** barray(1, 2, 3, 4)**>>>** np.add(a,b)array(1, 3, 5, 7)**>>>** np.add(a,b,a)array(1, 3, 5, 7)**>>>** aarray(1, 3, 5, 7)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":267},{"title":"add函数返回一个新的数组，此数组的每个元素都为两个参数数组的对应元素之和。它接受第3个参数指定计算结果所要写入的数组，如果指定的话，add函数就不再产生新的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":269},{"title":"由于Python的操作符重载功能，计算两个数组相加可以简单地写为a+b，而np.add(a,b,a)则可以用a+=b来表示。下面是数组的运算符和其对应的ufunc函数的一个列表，注意除号\"/\"的意义根据是否激活__future__.division有所不同。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":271},{"title":"数组对象支持这些操作符，极大地简化了算式的编写，不过要注意如果你的算式很复杂，并且要运算的数组很大的话，会因为产生大量的中间结果而降低程序的运算效率。例如：假设a b c三个数组采用算式x=a*b+c计算，那么它相当于:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":285},{"title":"t = a * bx = t + c**del** t","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":287},{"title":"也就是说需要产生一个数组t保存乘法的计算结果，然后再产生最后的结果数组x。我们可以通过手工将一个算式分解为x = a*b; x += c，以减少一次内存分配。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":289},{"title":"通过组合标准的ufunc函数的调用，可以实现各种算式的数组计算。不过有些时候这种算式不易编写，而针对每个元素的计算函数却很容易用Python实现，这时可以用frompyfunc函数将一个计算单个元素的函数转换成ufunc函数。这样就可以方便地用所产生的ufunc函数对数组进行计算了。让我们来看一个例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":291},{"title":"图2.4","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro01","line":293},{"title":"我们想用一个分段函数描述三角波，三角波的样子如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":293},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","line":295},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":336},{"title":"当我们使用ufunc函数对两个数组进行计算时，ufunc函数会对这两个数组的对应元素进行计算，因此它要求这两个数组有相同的大小(shape相同)。如果两个数组的shape不同的话，会进行如下的广播(broadcasting)处理：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":338},{"title":"让所有输入数组都向其中shape最长的数组看齐，shape中不足的部分都通过在前面加1补齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":340},{"title":"输出数组的shape是输入数组shape的各个轴上的最大值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":342},{"title":"如果输入数组的某个轴和输出数组的对应轴的长度相同或者其长度为1时，这个数组能够用来计算，否则出错","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":343},{"title":"当输入数组的某个轴的长度为1时，沿着此轴运算时都用此轴上的第一组值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":344},{"title":"上述4条规则理解起来可能比较费劲，让我们来看一个实际的例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":346},{"title":"先创建一个二维数组a，其shape为(6,1)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":348},{"title":"**>>>** a = np.arange(0, 60, 10).reshape(-1, 1)**>>>** aarray( 0, 10, 20, 30, 40, 50)**>>>** a.shape(6, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":350},{"title":"再创建一维数组b，其shape为(5,)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":352},{"title":"**>>>** b = np.arange(0, 5)**>>>** barray(0, 1, 2, 3, 4)**>>>** b.shape(5,)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":354},{"title":"计算a和b的和，得到一个加法表，它相当于计算a,b中所有元素组的和，得到一个shape为(6,5)的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":356},{"title":"**>>>** c = a + b**>>>** carray( 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54)**>>>** c.shape(6, 5)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":358},{"title":"由于a和b的shape长度(也就是ndim属性)不同，根据规则1，需要让b的shape向a对齐，于是将b的shape前面加1，补齐为(1,5)。相当于做了如下计算：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":360},{"title":"**>>>** b.shape=1,5**>>>** barray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":362},{"title":"这样加法运算的两个输入数组的shape分别为(6,1)和(1,5)，根据规则2，输出数组的各个轴的长度为输入数组各个轴上的长度的最大值，可知输出数组的shape为(6,5)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":364},{"title":"由于b的第0轴上的长度为1，而a的第0轴上的长度为6，因此为了让它们在第0轴上能够相加，需要将b在第0轴上的长度扩展为6，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":366},{"title":"**>>>** b = b.repeat(6,axis=0)**>>>** barray(0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":368},{"title":"由于a的第1轴的长度为1，而b的第一轴长度为5，因此为了让它们在第1轴上能够相加，需要将a在第1轴上的长度扩展为5，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":370},{"title":"**>>>** a = a.repeat(5, axis=1)**>>>** aarray( 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":372},{"title":"经过上述处理之后，a和b就可以按对应元素进行相加运算了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":374},{"title":"当然，numpy在执行a+b运算时，其内部并不会真正将长度为1的轴用repeat函数进行扩展，如果这样做的话就太浪费空间了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":376},{"title":"由于这种广播计算很常用，因此numpy提供了一个快速产生如上面a,b数组的方法： ogrid对象：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":378},{"title":"**>>>** x,y = np.ogrid0:5,0:5**>>>** xarray(0, 1, 2, 3, 4)**>>>** yarray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":380},{"title":"ogrid是一个很有趣的对象，它像一个多维数组一样，用切片组元作为下标进行存取，返回的是一组可以用来广播计算的数组。其切片下标有两种形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":382},{"title":"开始值:结束值:步长，和np.arange(开始值, 结束值, 步长)类似","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":384},{"title":"开始值:结束值:长度j，当第三个参数为虚数时，它表示返回的数组的长度，和np.linspace(开始值, 结束值, 长度)类似：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":386},{"title":"**>>>** x, y = np.ogrid0:1:4j, 0:1:3j**>>>** xarray( 0. , 0.33333333, 0.66666667, 1. )**>>>** yarray( 0. , 0.5, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":388},{"title":"ogrid为什么不是函数","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":391},{"title":"根据Python的语法，只有在中括号中才能使用用冒号隔开的切片语法，如果ogrid是函数的话，那么这些切片必须使用slice函数创建，这显然会增加代码的长度。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":393},{"title":"利用ogrid的返回值，我能很容易计算x, y网格面上各点的值，或者x, y, z网格体上各点的值。下面是绘制三维曲面 x * exp(x**2 - y**2) 的程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":395},{"title":"**import** **numpy** **as** **np****from** **enthought.mayavi** **import** mlab x, y = np.ogrid-2:2:20j, -2:2:20jz = x * np.exp( - x**2 - y**2) pl = mlab.surf(x, y, z, warp_scale=\"auto\")mlab.axes(xlabel='x', ylabel='y', zlabel='z')mlab.outline(pl)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":397},{"title":"图2.5","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro04","line":399},{"title":"此程序使用mayavi的mlab库快速绘制如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":399},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","line":401},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":405},{"title":"ufunc函数本身还有些方法，这些方法只对两个输入一个输出的ufunc函数有效，其它的ufunc对象调用这些方法时会抛出ValueError异常。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":407},{"title":"**reduce** 方法和Python的reduce函数类似，它沿着axis轴对array进行操作，相当于将<op>运算符插入到沿axis轴的所有子数组或者元素当中。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":409},{"title":"<op>.reduce (array=, axis=0, dtype=None)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":411},{"title":"例如：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":413},{"title":"**>>>** np.add.reduce(1,2,3) _# 1 + 2 + 3_6**>>>** np.add.reduce(1,2,3,4,5,6, axis=1) _# 1,4 + 2,5 + 3,6_array( 6, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":415},{"title":"**accumulate** 方法和reduce方法类似，只是它返回的数组和输入的数组的shape相同，保存所有的中间计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":417},{"title":"**>>>** np.add.accumulate(1,2,3)array(1, 3, 6)**>>>** np.add.accumulate(1,2,3,4,5,6, axis=1)array( 1, 3, 6, 4, 9, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":419},{"title":"**reduceat** 方法计算多组reduce的结果，通过indices参数指定一系列reduce的起始和终了位置。reduceat的计算有些特别，让我们通过一个例子来解释一下：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":421},{"title":"**>>>** a = np.array(1,2,3,4)**>>>** result = np.add.reduceat(a,indices=0,1,0,2,0,3,0)**>>>** resultarray( 1, 2, 3, 3, 6, 4, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":423},{"title":"对于indices中的每个元素都会调用reduce函数计算出一个值来，因此最终计算结果的长度和indices的长度相同。结果result数组中除最后一个元素之外，都按照如下计算得出：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":425},{"title":"if indicesi < indicesi+1: resulti = np.reduce(aindicesi:indicesi+1) else: resulti = aindicesi","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":427},{"title":"而最后一个元素如下计算:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":429},{"title":"np.reduce(aindices-1:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":431},{"title":"因此上面例子中，结果的每个元素如下计算而得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":433},{"title":"1 : a0 = 1 2 : a1 = 2 3 : a0 + a1 = 1 + 2 3 : a2 = 3 6 : a0 + a1 + a2 = 1 + 2 + 3 = 6 4 : a3 = 4 10: a0 + a1 + a2 + a4 = 1+2+3+4 = 10","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":435},{"title":"可以看出result::2和a相等，而result1::2和np.add.accumulate(a)相等。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":437},{"title":"**outer** 方法，<op>.outer(a,b)方法的计算等同于如下程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":439},{"title":"**>>>** a.shape += (1,)*b.ndim**>>>** <op>(a,b)**>>>** a = a.squeeze()","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":441},{"title":"其中squeeze的功能是剔除数组a中长度为1的轴。如果你看不太明白这个等同程序的话，让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":443},{"title":"**>>>** np.multiply.outer(1,2,3,4,5,2,3,4)array( 2, 3, 4, 4, 6, 8, 6, 9, 12, 8, 12, 16, 10, 15, 20)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":445},{"title":"可以看出通过outer方法计算的结果是如下的乘法表：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":447},{"title":"_# 2, 3, 4__# 1__# 2__# 3__# 4__# 5_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":449},{"title":"如果将这两个数组按照等同程序一步一步的计算的话，就会发现乘法表最终是通过广播的方式计算出来的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":451},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":453},{"title":"2.3　矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":453},{"title":"NumPy和Matlab不一样，对于多维数组的运算，缺省情况下并不使用矩阵运算，如果你希望对数组进行矩阵运算的话，可以调用相应的函数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":455},{"title":"matrix对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":457},{"title":"numpy库提供了matrix类，使用matrix类创建的是矩阵对象，它们的加减乘除运算缺省采用矩阵方式计算，因此用法和matlab十分类似。但是由于NumPy中同时存在ndarray和matrix对象，因此用户很容易将两者弄混。这有违Python的“显式优于隐式”的原则，因此并不推荐在较复杂的程序中使用matrix。下面是使用matrix的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":459},{"title":"**>>>** a = np.matrix(1,2,3,5,5,6,7,9,9)**>>>** a*a**-1matrix( 1.00000000e+00, 1.66533454e-16, -8.32667268e-17, -2.77555756e-16, 1.00000000e+00, -2.77555756e-17, 1.66533454e-16, 5.55111512e-17, 1.00000000e+00)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":461},{"title":"因为a是用matrix创建的矩阵对象，因此乘法和幂运算符都变成了矩阵运算，于是上面计算的是矩阵a和其逆矩阵的乘积，结果是一个单位矩阵。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":463},{"title":"矩阵的乘积可以使用dot函数进行计算。对于二维数组，它计算的是矩阵乘积，对于一维数组，它计算的是其点积。当需要将一维数组当作列矢量或者行矢量进行矩阵运算时，推荐先使用reshape函数将一维数组转换为二维数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":465},{"title":"**>>>** a = array(1, 2, 3)**>>>** a.reshape((-1,1))array(1, 2, 3)**>>>** a.reshape((1,-1))array(1, 2, 3)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":467},{"title":"除了dot计算乘积之外，NumPy还提供了inner和outer等多种计算乘积的函数。这些函数计算乘积的方式不同，尤其是当对于多维数组的时候，更容易搞混。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":469},{"title":"**dot** : 对于两个一维的数组，计算的是这两个数组对应下标元素的乘积和(数学上称之为内积)；对于二维数组，计算的是两个数组的矩阵乘积；对于多维数组，它的通用计算公式如下，即结果数组中的每个元素都是：数组a的最后一维上的所有元素与数组b的倒数第二位上的所有元素的乘积和：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":471},{"title":"dot(a, b)i,j,k,m = sum(ai,j,: * bk,:,m)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":473},{"title":"下面以两个3为数组的乘积演示一下dot乘积的计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":475},{"title":"首先创建两个3维数组，这两个数组的最后两维满足矩阵乘积的条件：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":477},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,2,3)**>>>** c = np.dot(a,b)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":479},{"title":"dot乘积的结果c可以看作是数组a,b的多个子矩阵的乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":481},{"title":"**>>>** np.alltrue( c0,:,0,: == np.dot(a0,b0) )True**>>>** np.alltrue( c1,:,0,: == np.dot(a1,b0) )True**>>>** np.alltrue( c0,:,1,: == np.dot(a0,b1) )True**>>>** np.alltrue( c1,:,1,: == np.dot(a1,b1) )True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":483},{"title":"**inner** : 和dot乘积一样，对于两个一维数组，计算的是这两个数组对应下标元素的乘积和；对于多维数组，它计算的结果数组中的每个元素都是：数组a和b的最后一维的内积，因此数组a和b的最后一维的长度必须相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":486},{"title":"inner(a, b)i,j,k,m = sum(ai,j,:*bk,m,:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":488},{"title":"下面是inner乘积的演示：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":490},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,3,2)**>>>** c = np.inner(a,b)**>>>** c.shape(2, 3, 2, 3)**>>>** c0,0,0,0 == np.inner(a0,0,b0,0)True**>>>** c0,1,1,0 == np.inner(a0,1,b1,0)True**>>>** c1,2,1,2 == np.inner(a1,2,b1,2)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":492},{"title":"**outer** : 只按照一维数组进行计算，如果传入参数是多维数组，则先将此数组展平为一维数组之后再进行运算。outer乘积计算的列向量和行向量的矩阵乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":494},{"title":"**>>>** np.outer(1,2,3,4,5,6,7)array( 4, 5, 6, 7, 8, 10, 12, 14, 12, 15, 18, 21)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":496},{"title":"矩阵中更高级的一些运算可以在NumPy的线性代数子库linalg中找到。例如inv函数计算逆矩阵，solve函数可以求解多元一次方程组。下面是solve函数的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":499},{"title":"**>>>** a = np.random.rand(10,10)**>>>** b = np.random.rand(10)**>>>** x = np.linalg.solve(a,b)**>>>** np.sum(np.abs(np.dot(a,x) - b))3.1433189384699745e-15","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":501},{"title":"solve函数有两个参数a和b。a是一个N*N的二维数组，而b是一个长度为N的一维数组，solve函数找到一个长度为N的一维数组x，使得a和x的矩阵乘积正好等于b，数组x就是多元一次方程组的解。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":503},{"title":"有关线性代数方面的内容将在今后的章节中详细介绍。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":505},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":507},{"title":"2.4　文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":507},{"title":"NumPy提供了多种文件操作函数方便我们存取数组内容。文件存取的格式分为两类：二进制和文本。而二进制格式的文件又分为NumPy专用的格式化二进制类型和无格式类型。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":509},{"title":"使用数组的方法函数tofile可以方便地将数组中数据以二进制的格式写进文件。tofile输出的数据没有格式，因此用numpy.fromfile读回来的时候需要自己格式化数据：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":511},{"title":"**>>>** a = np.arange(0,12)**>>>** a.shape = 3,4**>>>** aarray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** a.tofile(\"a.bin\")**>>>** b = np.fromfile(\"a.bin\", dtype=np.float) _# 按照float类型读入数据_**>>>** b _# 读入的数据是错误的_array( 2.12199579e-314, 6.36598737e-314, 1.06099790e-313, 1.48539705e-313, 1.90979621e-313, 2.33419537e-313)**>>>** a.dtype _# 查看a的dtype_dtype('int32')**>>>** b = np.fromfile(\"a.bin\", dtype=np.int32) _# 按照int32类型读入数据_**>>>** b _# 数据是一维的_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** b.shape = 3, 4 _# 按照a的shape修改b的shape_**>>>** b _# 这次终于正确了_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":513},{"title":"从上面的例子可以看出，需要在读入的时候设置正确的dtype和shape才能保证数据一致。并且tofile函数不管数组的排列顺序是C语言格式的还是Fortran语言格式的，统一使用C语言格式输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":515},{"title":"此外如果fromfile和tofile函数调用时指定了sep关键字参数的话，数组将以文本格式输入输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":517},{"title":"numpy.load和numpy.save函数以NumPy专用的二进制类型保存数据，这两个函数会自动处理元素类型和shape等信息，使用它们读写数组就方便多了，但是numpy.save输出的文件很难和其它语言编写的程序读入：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":519},{"title":"**>>>** np.save(\"a.npy\", a)**>>>** c = np.load( \"a.npy\" )**>>>** carray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":521},{"title":"如果你想将多个数组保存到一个文件中的话，可以使用numpy.savez函数。savez函数的第一个参数是文件名，其后的参数都是需要保存的数组，也可以使用关键字参数为数组起一个名字，非关键字参数传递的数组会自动起名为arr_0, arr_1, ...。savez函数输出的是一个压缩文件(扩展名为npz)，其中每个文件都是一个save函数保存的npy文件，文件名对应于数组名。load函数自动识别npz文件，并且返回一个类似于字典的对象，可以通过数组名作为关键字获取数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":523},{"title":"**>>>** a = np.array(1,2,3,4,5,6)**>>>** b = np.arange(0, 1.0, 0.1)**>>>** c = np.sin(b)**>>>** np.savez(\"result.npz\", a, b, sin_array = c)**>>>** r = np.load(\"result.npz\")**>>>** r\"arr_0\" _# 数组a_array(1, 2, 3, 4, 5, 6)**>>>** r\"arr_1\" _# 数组b_array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)**>>>** r\"sin_array\" _# 数组c_array( 0. , 0.09983342, 0.19866933, 0.29552021, 0.38941834, 0.47942554, 0.56464247, 0.64421769, 0.71735609, 0.78332691)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":525},{"title":"如果你用解压软件打开result.npz文件的话，会发现其中有三个文件：arr_0.npy， arr_1.npy， sin_array.npy，其中分别保存着数组a, b, c的内容。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":527},{"title":"使用numpy.savetxt和numpy.loadtxt可以读写1维和2维的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":529},{"title":"**>>>** a = np.arange(0,12,0.5).reshape(4,-1)**>>>** np.savetxt(\"a.txt\", a) _# 缺省按照'%.18e'格式保存数据，以空格分隔_**>>>** np.loadtxt(\"a.txt\")array( 0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5. , 5.5, 6. , 6.5, 7. , 7.5, 8. , 8.5, 9. , 9.5, 10. , 10.5, 11. , 11.5)**>>>** np.savetxt(\"a.txt\", a, fmt=\"_%d_\", delimiter=\",\") _#改为保存为整数，以逗号分隔_**>>>** np.loadtxt(\"a.txt\",delimiter=\",\") _# 读入的时候也需要指定逗号分隔_array( 0., 0., 1., 1., 2., 2., 3., 3., 4., 4., 5., 5., 6., 6., 7., 7., 8., 8., 9., 9., 10., 10., 11., 11.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":531},{"title":"文件名和文件对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":533},{"title":"本节介绍所举的例子都是传递的文件名，也可以传递已经打开的文件对象，例如对于load和save函数来说，如果使用文件对象的话，可以将多个数组储存到一个npy文件中：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":535},{"title":"**>>>** a = np.arange(8)**>>>** b = np.add.accumulate(a)**>>>** c = a + b**>>>** f = file(\"result.npy\", \"wb\")**>>>** np.save(f, a) _# 顺序将a,b,c保存进文件对象f_**>>>** np.save(f, b)**>>>** np.save(f, c)**>>>** f.close()**>>>** f = file(\"result.npy\", \"rb\")**>>>** np.load(f) _# 顺序从文件对象f中读取内容_array(0, 1, 2, 3, 4, 5, 6, 7)**>>>** np.load(f)array( 0, 1, 3, 6, 10, 15, 21, 28)**>>>** np.load(f)array( 0, 2, 5, 9, 14, 20, 27, 35)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":537},{"title":"首页目录","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":539},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":541},{"title":"NumPy-快速处理数据","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":541},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":542},{"title":"ndarray对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":542},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":543},{"title":"创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":543},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":544},{"title":"存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":544},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":545},{"title":"多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":545},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":546},{"title":"结构数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":546},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":547},{"title":"内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":547},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":548},{"title":"ufunc运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":548},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":549},{"title":"广播","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":549},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":550},{"title":"ufunc的方法","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":550},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":551},{"title":"矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":551},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":552},{"title":"文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":552},{"title":"软件包的安装和介绍","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":556},{"title":"SciPy-数值计算库","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":560},{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":568},{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":570},{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":571},{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":572},{"title":"HYRY Studio","target":"http://hyry.dip.jp/blogt.py","line":574},{"title":"Sphinx","target":"http://sphinx.pocoo.org/","line":574}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11144603,-0.0510171,-0.0071234,-0.02675365,0.05230489,-0.00379996,-0.01354739,-0.02102975,0.03326187,0.02377331,0.03854017,-0.05682214,0.03585152,-0.02047838,-0.02900146,-0.02437399,-0.01749262,0.01003178,-0.07011151,-0.01106785,0.08576731,-0.0111527,0.01215167,-0.07064932,0.0167739,0.07898637,-0.01669014,-0.00635533,-0.01362889,-0.21363196,0.05046182,-0.00176062,-0.02776461,-0.01534722,0.07456829,-0.01128246,0.0006418,0.02923179,-0.03451326,0.04916596,0.02478847,0.02510888,-0.01769497,-0.00109072,0.01968577,-0.06677009,-0.03377518,-0.02903639,0.02925659,-0.01768466,-0.06467801,-0.01874514,-0.06797221,-0.00048194,0.06335597,-0.01959015,0.0901269,0.0409803,0.01273569,-0.0000796,0.01511159,-0.00724076,-0.17576329,0.04733482,0.07860329,-0.01872143,-0.01486964,-0.00804559,0.05118367,0.00470845,-0.05355154,0.05467425,-0.02625144,0.1074288,0.0159133,-0.04611143,0.05834039,-0.02360257,-0.05879683,0.01938637,-0.06855483,0.0693323,-0.02810552,-0.01553563,0.01161393,0.02960585,0.00979515,-0.02744099,0.02675578,-0.02082071,-0.00374679,-0.00391907,0.01696674,0.10114474,-0.01036852,-0.0101439,0.08248213,0.04741606,-0.03077046,0.0596877,-0.04053461,0.01398442,0.01094846,-0.00234729,0.00749675,-0.04579856,-0.01350746,-0.04590658,-0.04957674,0.02366864,0.03613677,-0.01015135,0.03078234,-0.04446691,0.0582136,0.01621534,-0.05550694,-0.00593586,-0.08785454,-0.01527662,-0.00871489,-0.00144638,0.07261577,-0.02761639,0.00187223,-0.01045199,-0.02342741,0.03456533,0.03098879,0.03339206,0.0902354,-0.00956112,-0.07391415,0.00749196,0.00712793,-0.00642006,-0.03429453,-0.00645404,0.01882772,-0.05764256,0.00945953,-0.09673406,0.01233814,-0.05313788,-0.06561676,0.0889589,-0.06072314,0.03634921,-0.02189941,-0.04201265,-0.02019515,0.05298039,-0.03906207,-0.04142046,0.02673646,-0.00310555,0.06753176,0.06223023,-0.03231972,-0.00383215,-0.07450378,-0.07086914,-0.01172815,0.04280367,-0.01922012,-0.08754994,-0.02589017,0.03470171,-0.03453962,-0.02992147,0.03979454,-0.00673089,-0.03933175,-0.01630225,0.06526438,-0.03169431,-0.03862224,-0.0426676,0.05097772,-0.01652468,-0.0291034,-0.03168785,-0.02152195,-0.0162424,0.0037112,-0.07839445,0.00034634,0.01535144,0.03961539,0.00145561,-0.04086892,0.00286291,-0.02034217,-0.04344942,-0.04041154,0.02715366,0.00007378,-0.00455459,0.06658829,-0.04201883,0.10937345,0.0336169,0.01637739,0.0589788,-0.01352647,-0.01186488,0.00099975,-0.03985412,0.0609555,0.06143005,0.01306047,-0.06327688,-0.02452153,-0.00232402,-0.04064048,-0.02864545,0.05283042,0.06807514,0.04520347,0.02793646,0.0344066,-0.10700685,-0.10416737,-0.18466647,0.04270712,0.01636969,-0.07338703,-0.00202737,-0.04062984,0.0043874,0.01256123,-0.00313633,0.08383011,0.08431285,0.0275146,0.00339234,-0.03101122,-0.03395865,0.02646197,0.04521164,-0.00669584,-0.01318847,0.05402969,0.01793789,0.01288997,-0.00882416,0.01252227,-0.02440838,-0.04402851,0.13152653,0.0121589,0.07499903,0.04759638,0.03511106,0.01019689,-0.04276418,-0.11906041,0.05561401,0.03023668,-0.07162125,0.06575757,-0.05476008,0.00837265,0.04066661,0.03397825,0.03174022,-0.03397221,-0.00080924,0.01884891,-0.0232617,-0.00806205,-0.02086304,0.0129998,0.01509128,0.03988823,0.00500072,0.01454862,-0.01792136,-0.05244789,-0.05358632,0.01729064,-0.02162043,0.03554891,0.00498524,-0.08196631,-0.00995367,-0.05869949,-0.00812867,-0.0669777,-0.01448937,-0.00978809,0.01590064,0.00078674,-0.02876465,0.15844901,0.03671768,-0.01629566,0.03682151,-0.02724415,0.03421944,0.01147881,0.02215456,-0.04625044,0.04987887,0.07260416,0.06796006,0.02417844,0.06810128,-0.04402305,0.0393916,0.01807753,0.00810873,0.00562309,-0.0249163,-0.04796518,0.01743697,0.0441023,0.11605759,0.03803194,-0.28346425,0.0060886,-0.03190899,-0.02180461,0.01463055,-0.02301097,0.01963181,0.02289822,-0.02752734,0.02889805,-0.04588446,0.02831168,0.01962294,-0.06628636,-0.00454104,0.01975275,0.07550588,-0.0100493,0.06557418,0.06229442,0.03531369,0.02461081,0.24427231,-0.03085648,0.05899172,-0.00860883,-0.04238276,0.06774312,0.06228791,0.00705393,-0.00079831,0.01189016,0.04595824,-0.07059942,-0.0034625,0.10195454,0.02656435,-0.0057375,0.03448235,-0.00479504,-0.02597627,-0.02258106,-0.1099293,0.01291999,0.09539156,-0.01936025,-0.00561847,-0.112616,-0.04564121,0.02386545,-0.03580649,0.02553121,0.02433763,-0.00821599,0.04483211,0.01401342,0.00119089,-0.03797517,-0.00219773,8.3e-7,0.04148596,-0.05093152,0.10281598,0.10345615,-0.00114862],"last_embed":{"hash":"9033fd17caee8f15b180efad917e40917205ce21a76f643635d5cfcdfb0125ac","tokens":396}}},"text":null,"length":0,"last_read":{"hash":"9033fd17caee8f15b180efad917e40917205ce21a76f643635d5cfcdfb0125ac","at":1757414817081},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#{1}","lines":[12,17],"size":387,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12377425,-0.05017944,0.00972452,-0.02926456,0.07391211,-0.00975725,-0.01437809,-0.05532574,0.01882062,0.01119747,0.07437415,-0.07457592,0.02369056,-0.00432722,-0.01314967,-0.03436312,-0.0187582,-0.01014185,-0.03059998,-0.0009927,0.11732604,-0.01183372,0.05180559,-0.05482446,0.01659017,0.08407989,-0.01555885,-0.01819476,-0.00745449,-0.19241689,0.05641051,0.01697485,-0.01743897,-0.00958237,0.07589648,-0.00204656,-0.00184545,0.03425952,-0.00363054,0.03918447,0.01294868,-0.01096402,0.0078799,0.03004092,0.00789586,-0.08053114,-0.0199759,-0.01192259,0.01404033,-0.02587665,-0.06919425,-0.01722966,-0.03672558,-0.02319476,0.05399731,0.00094731,0.09351413,0.05275527,0.0069837,0.03640198,0.00046955,0.02605649,-0.193849,0.0495122,0.08121644,-0.0171598,-0.03177376,0.02947156,0.03489882,0.00351036,-0.05487181,0.06558363,-0.01146001,0.09839355,0.01118841,-0.03093832,0.04949084,-0.00162929,-0.04083769,-0.04705198,-0.06074114,0.071106,-0.0329842,-0.00139662,-0.01940363,0.02828458,0.00154545,-0.00154578,0.03725322,-0.02571362,0.03226949,0.00057949,0.01812106,0.09772878,-0.02524362,-0.01919378,0.0994743,0.06653872,0.01191002,0.08057735,-0.04127355,0.00243306,0.03304977,0.01255602,0.00929661,-0.06340272,-0.03495704,-0.02200882,0.01094477,0.03187867,0.01849649,-0.00749206,0.02812186,-0.04172387,0.04099627,-0.00544788,-0.06870956,-0.02737303,-0.08081394,0.00432878,-0.00883141,-0.00995885,0.04689093,-0.01867081,0.02070762,-0.03096139,-0.02635526,0.02642734,0.05975591,0.02403321,0.08927838,-0.02003815,-0.07983962,-0.01700744,0.01421231,-0.01233348,-0.03778933,0.02115923,0.01724708,-0.05928375,0.01974598,-0.1178963,0.00502511,-0.02431667,-0.10509695,0.07650113,-0.05732367,0.01505908,-0.01328723,-0.02736951,-0.02129691,0.0676462,-0.03883664,-0.03876612,0.03457613,-0.04590434,0.07789823,0.07196393,-0.03462872,-0.01750378,-0.02477504,-0.07570203,-0.02394708,0.06463221,-0.03566767,-0.07726993,-0.04322166,0.03076061,-0.03399858,-0.03415956,0.03896633,-0.00897531,-0.01125705,0.02213979,0.07408875,-0.02255122,-0.00423547,-0.06319021,0.02883495,0.00783184,-0.03218585,-0.06198796,-0.03088443,-0.00534185,0.00125721,-0.0673528,0.00760334,-0.01527019,0.0278812,0.01489194,-0.01747068,-0.01149778,0.00868944,-0.0688417,-0.03628025,0.02537253,-0.01105205,-0.02082942,0.06906537,-0.07592328,0.10879924,0.01469676,0.02035349,0.06336249,-0.01430899,-0.02612606,0.01330758,-0.0272104,0.03488198,0.03701035,0.00237509,-0.04840871,-0.00682563,-0.02297316,-0.02377727,-0.00061419,0.05458391,0.05891763,0.04446536,0.04112542,-0.00325835,-0.10116739,-0.11266497,-0.18720983,0.02737177,0.01691991,-0.06624874,-0.0033554,-0.04637871,0.04419585,0.01524033,0.02641768,0.07580038,0.07511847,0.01340225,-0.02706329,-0.02448819,-0.00723486,0.03186423,0.06773867,-0.0120377,-0.01843735,0.03585253,0.01618695,0.013062,-0.01878853,0.02202957,-0.0304682,-0.03254728,0.12070374,0.03122993,0.05779829,0.02314247,0.02383735,0.03320538,-0.05441284,-0.11606705,0.05550946,0.02036849,-0.0448886,0.05291404,-0.03808809,0.01393613,0.0234401,0.02461238,0.0227515,-0.02914866,-0.01868958,0.00991171,-0.0228528,-0.02756074,-0.02749001,0.0052403,-0.00075561,0.06071008,0.00872105,0.05132347,-0.02641833,-0.01969673,-0.04986031,0.0248212,-0.02811458,0.01564234,-0.00572054,-0.03237301,0.00731806,-0.07073422,-0.00766215,-0.06227837,-0.01811038,-0.02598211,0.03121791,0.00461653,-0.02988198,0.14872329,0.03339675,-0.01238136,0.02434413,0.00780005,0.01392341,-0.01549197,0.01553053,-0.05387763,0.02781435,0.03731724,0.09949213,0.02085211,0.02946897,-0.04920889,0.00528797,-0.02997525,0.05118781,0.00207903,-0.05488852,-0.02023561,0.02434473,0.05673032,0.12604603,0.03160691,-0.28811711,0.03130364,-0.00427212,-0.00516785,-0.00063585,-0.00311254,0.03461489,0.00388618,-0.02709618,0.03161881,-0.04410772,0.00414238,-0.00769202,-0.07523085,-0.0152027,0.01414534,0.09121557,-0.00238391,0.07127021,0.04705867,0.01765566,-0.0061738,0.22879295,-0.00566947,0.04593242,-0.02729787,-0.03654156,0.03861678,0.0657191,0.00626283,0.00825158,-0.01783937,0.04257496,-0.05225282,0.01747672,0.09952012,0.01597749,-0.01379369,0.03523319,-0.01312294,-0.03014274,-0.01543067,-0.12526044,-0.00165985,0.08523974,-0.02832256,-0.03153638,-0.11529379,-0.03275311,0.02121355,-0.04803302,0.02904764,-0.01618648,0.01653994,0.04671027,0.02056381,0.0276644,-0.04485794,-0.00406726,-0.02864107,0.04800851,-0.06043308,0.10581519,0.10043333,0.00779839],"last_embed":{"hash":"8004e492fdf63f9db3880ed65541805352183e4144ca1d2d39efbfcc24903868","tokens":363}}},"text":null,"length":0,"last_read":{"hash":"8004e492fdf63f9db3880ed65541805352183e4144ca1d2d39efbfcc24903868","at":1757414817121},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)","lines":[18,247],"size":18485,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"函数库的导入","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":3},{"title":"本书的示例程序假设用以下推荐的方式导入NumPy函数库:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":5},{"title":"**import** **numpy** **as** **np**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":7},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":9},{"title":"2.1.1　创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":9},{"title":"首先需要创建数组才能对其进行其它操作。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":11},{"title":"我们可以通过给array函数传递Python的序列对象创建数组，如果传递的是多层嵌套的序列，将创建多维数组(下例中的变量c):","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":13},{"title":"**>>>** a = np.array(1, 2, 3, 4)**>>>** b = np.array((5, 6, 7, 8))**>>>** c = np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10)**>>>** barray(5, 6, 7, 8)**>>>** carray(1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)**>>>** c.dtypedtype('int32')","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":15},{"title":"数组的大小可以通过其shape属性获得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":17},{"title":"**>>>** a.shape(4,)**>>>** c.shape(3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":19},{"title":"数组a的shape只有一个元素，因此它是一维数组。而数组c的shape有两个元素，因此它是二维数组，其中第0轴的长度为3，第1轴的长度为4。还可以通过修改数组的shape属性，在保持数组元素个数不变的情况下，改变数组每个轴的长度。下面的例子将数组c的shape改为(4,3)，注意从(3,4)改为(4,3)并不是对数组进行转置，而只是改变每个轴的大小，数组元素在内存中的位置并没有改变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":21},{"title":"**>>>** c.shape = 4,3**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":23},{"title":"当某个轴的元素为-1时，将根据数组元素的个数自动计算此轴的长度，因此下面的程序将数组c的shape改为了(2,6)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":25},{"title":"**>>>** c.shape = 2,-1**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":27},{"title":"使用数组的reshape方法，可以创建一个改变了尺寸的新数组，原数组的shape保持不变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":29},{"title":"**>>>** d = a.reshape((2,2))**>>>** darray(1, 2, 3, 4)**>>>** aarray(1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":31},{"title":"数组a和d其实共享数据存储内存区域，因此修改其中任意一个数组的元素都会同时修改另外一个数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":33},{"title":"**>>>** a1 = 100 _# 将数组a的第一个元素改为100_**>>>** d _# 注意数组d中的2也被改变了_array( 1, 100, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":35},{"title":"数组的元素类型可以通过dtype属性获得。上面例子中的参数序列的元素都是整数，因此所创建的数组的元素类型也是整数，并且是32bit的长整型。可以通过dtype参数在创建时指定元素类型:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":37},{"title":"**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.float)array( 1., 2., 3., 4., 4., 5., 6., 7., 7., 8., 9., 10.)**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.complex)array( 1.+0.j, 2.+0.j, 3.+0.j, 4.+0.j, 4.+0.j, 5.+0.j, 6.+0.j, 7.+0.j, 7.+0.j, 8.+0.j, 9.+0.j, 10.+0.j)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":39},{"title":"上面的例子都是先创建一个Python序列，然后通过array函数将其转换为数组，这样做显然效率不高。因此NumPy提供了很多专门用来创建数组的函数。下面的每个函数都有一些关键字参数，具体用法请查看函数说明。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":41},{"title":"arange函数类似于python的range函数，通过指定开始值、终值和步长来创建一维数组，注意数组不包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":43},{"title":"**>>>** np.arange(0,1,0.1)array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":45},{"title":"linspace函数通过指定开始值、终值和元素个数来创建一维数组，可以通过endpoint关键字指定是否包括终值，缺省设置是包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":47},{"title":"**>>>** np.linspace(0, 1, 12)array( 0. , 0.09090909, 0.18181818, 0.27272727, 0.36363636, 0.45454545, 0.54545455, 0.63636364, 0.72727273, 0.81818182, 0.90909091, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":49},{"title":"logspace函数和linspace类似，不过它创建等比数列，下面的例子产生1(10^0)到100(10^2)、有20个元素的等比数列:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":51},{"title":"**>>>** np.logspace(0, 2, 20)array( 1. , 1.27427499, 1.62377674, 2.06913808, 2.6366509 , 3.35981829, 4.2813324 , 5.45559478, 6.95192796, 8.8586679 , 11.28837892, 14.38449888, 18.32980711, 23.35721469, 29.76351442, 37.92690191, 48.32930239, 61.58482111, 78.47599704, 100. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":53},{"title":"此外，使用frombuffer, fromstring, fromfile等函数可以从字节序列创建数组，下面以fromstring为例:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":56},{"title":"**>>>** s = \"abcdefgh\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":58},{"title":"Python的字符串实际上是字节序列，每个字符占一个字节，因此如果从字符串s创建一个8bit的整数数组的话，所得到的数组正好就是字符串中每个字符的ASCII编码:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":60},{"title":"**>>>** np.fromstring(s, dtype=np.int8)array( 97, 98, 99, 100, 101, 102, 103, 104, dtype=int8)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":62},{"title":"如果从字符串s创建16bit的整数数组，那么两个相邻的字节就表示一个整数，把字节98和字节97当作一个16位的整数，它的值就是98*256+97 = 25185。可以看出内存中是以little endian(低位字节在前)方式保存数据的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":64},{"title":"**>>>** np.fromstring(s, dtype=np.int16)array(25185, 25699, 26213, 26727, dtype=int16)**>>>** 98*256+9725185","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":66},{"title":"如果把整个字符串转换为一个64位的双精度浮点数数组，那么它的值是:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":68},{"title":"**>>>** np.fromstring(s, dtype=np.float)array( 8.54088322e+194)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":70},{"title":"显然这个例子没有什么意义，但是可以想象如果我们用C语言的二进制方式写了一组double类型的数值到某个文件中，那们可以从此文件读取相应的数据，并通过fromstring函数将其转换为float64类型的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":72},{"title":"我们可以写一个Python的函数，它将数组下标转换为数组中对应的值，然后使用此函数创建数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":74},{"title":"**>>>** **def** func(i):**...** **return** i%4+1**...****>>>** np.fromfunction(func, (10,))array( 1., 2., 3., 4., 1., 2., 3., 4., 1., 2.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":76},{"title":"fromfunction函数的第一个参数为计算每个数组元素的函数，第二个参数为数组的大小(shape)，因为它支持多维数组，所以第二个参数必须是一个序列，本例中用(10,)创建一个10元素的一维数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":78},{"title":"下面的例子创建一个二维数组表示九九乘法表，输出的数组a中的每个元素ai, j都等于func2(i, j)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":80},{"title":"**>>>** **def** func2(i, j):**...** **return** (i+1) * (j+1)**...****>>>** a = np.fromfunction(func2, (9,9))**>>>** aarray( 1., 2., 3., 4., 5., 6., 7., 8., 9., 2., 4., 6., 8., 10., 12., 14., 16., 18., 3., 6., 9., 12., 15., 18., 21., 24., 27., 4., 8., 12., 16., 20., 24., 28., 32., 36., 5., 10., 15., 20., 25., 30., 35., 40., 45., 6., 12., 18., 24., 30., 36., 42., 48., 54., 7., 14., 21., 28., 35., 42., 49., 56., 63., 8., 16., 24., 32., 40., 48., 56., 64., 72., 9., 18., 27., 36., 45., 54., 63., 72., 81.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":82},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":84},{"title":"2.1.2　存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":84},{"title":"数组元素的存取方法和Python的标准方法相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":86},{"title":"**>>>** a = np.arange(10)**>>>** a5 _# 用整数作为下标可以获取数组中的某个元素_5**>>>** a3:5 _# 用范围作为下标获取数组的一个切片，包括a3不包括a5_array(3, 4)**>>>** a:5 _# 省略开始下标，表示从a0开始_array(0, 1, 2, 3, 4)**>>>** a:-1 _# 下标可以使用负数，表示从数组后往前数_array(0, 1, 2, 3, 4, 5, 6, 7, 8)**>>>** a2:4 = 100,101 _# 下标还可以用来修改元素的值_**>>>** aarray( 0, 1, 100, 101, 4, 5, 6, 7, 8, 9)**>>>** a1:-1:2 _# 范围中的第三个参数表示步长，2表示隔一个元素取一个元素_array( 1, 101, 5, 7)**>>>** a::-1 _# 省略范围的开始下标和结束下标，步长为-1，整个数组头尾颠倒_array( 9, 8, 7, 6, 5, 4, 101, 100, 1, 0)**>>>** a5:1:-2 _# 步长为负数时，开始下标必须大于结束下标_array( 5, 101)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":88},{"title":"和Python的列表序列不同，通过下标范围获取的新的数组是原始数组的一个视图。它与原始数组共享同一块数据空间：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":90},{"title":"**>>>** b = a3:7 _# 通过下标范围产生一个新的数组b，b和a共享同一块数据空间_**>>>** barray(101, 4, 5, 6)**>>>** b2 = -10 _# 将b的第2个元素修改为-10_**>>>** barray(101, 4, -10, 6)**>>>** a _# a的第5个元素也被修改为10_array( 0, 1, 100, 101, 4, -10, 6, 7, 8, 9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":92},{"title":"除了使用下标范围存取元素之外，NumPy还提供了两种存取元素的高级方法。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":94},{"title":"**使用整数序列**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":96},{"title":"当使用整数序列对数组元素进行存取时，将使用整数序列中的每个元素作为下标，整数序列可以是列表或者数组。使用整数序列作为下标获得的数组不和原始数组共享数据空间。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":98},{"title":"**>>>** x = np.arange(10,1,-1)**>>>** xarray(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3, 3, 1, 8 _# 获取x中的下标为3, 3, 1, 8的4个元素，组成一个新的数组_array(7, 7, 9, 2)**>>>** b = xnp.array(3,3,-3,8) _#下标可以是负数_**>>>** b2 = 100**>>>** barray(7, 7, 100, 2)**>>>** x _# 由于b和x不共享数据空间，因此x中的值并没有改变_array(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3,5,1 = -1, -2, -3 _# 整数序列下标也可以用来修改元素的值_**>>>** xarray(10, -3, 8, -1, 6, -2, 4, 3, 2)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":100},{"title":"**使用布尔数组**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":102},{"title":"当使用布尔数组b作为下标存取数组x中的元素时，将收集数组x中所有在数组b中对应下标为True的元素。使用布尔数组作为下标获得的数组不和原始数组共享数据空间，注意这种方式只对应于布尔数组，不能使用布尔列表。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":104},{"title":"**>>>** x = np.arange(5,0,-1)**>>>** xarray(5, 4, 3, 2, 1)**>>>** xnp.array(True, False, True, False, False)**>>>** _# 布尔数组中下标为0，2的元素为True，因此获取x中下标为0,2的元素_array(5, 3)**>>>** xTrue, False, True, False, False**>>>** _# 如果是布尔列表，则把True当作1, False当作0，按照整数序列方式获取x中的元素_array(4, 5, 4, 5, 5)**>>>** xnp.array(True, False, True, True)**>>>** _# 布尔数组的长度不够时，不够的部分都当作False_array(5, 3, 2)**>>>** xnp.array(True, False, True, True) = -1, -2, -3**>>>** _# 布尔数组下标也可以用来修改元素_**>>>** xarray(-1, 4, -2, -3, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":106},{"title":"布尔数组一般不是手工产生，而是使用布尔运算的ufunc函数产生，关于ufunc函数请参照 ufunc运算 一节。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":108},{"title":"**>>>** x = np.random.rand(10) _# 产生一个长度为10，元素值为0-1的随机数的数组_**>>>** xarray( 0.72223939, 0.921226 , 0.7770805 , 0.2055047 , 0.17567449, 0.95799412, 0.12015178, 0.7627083 , 0.43260184, 0.91379859)**>>>** x>0.5**>>>** _# 数组x中的每个元素和0.5进行大小比较，得到一个布尔数组，True表示x中对应的值大于0.5_array( True, True, True, False, False, True, False, True, False, True, dtype=bool)**>>>** xx>0.5**>>>** _# 使用x>0.5返回的布尔数组收集x中的元素，因此得到的结果是x中所有大于0.5的元素的数组_array( 0.72223939, 0.921226 , 0.7770805 , 0.95799412, 0.7627083 , 0.91379859)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":110},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":112},{"title":"2.1.3　多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":112},{"title":"图2.1","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro02","line":114},{"title":"多维数组的存取和一维数组类似，因为多维数组有多个轴，因此它的下标需要用多个值来表示，NumPy采用组元(tuple)作为数组的下标。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":114},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","line":120},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","line":132},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":141},{"title":"在C语言中我们可以通过struct关键字定义结构类型，结构中的字段占据连续的内存空间，每个结构体占用的内存大小都相同，因此可以很容易地定义结构数组。和C语言一样，在NumPy中也很容易对这种结构数组进行操作。只要NumPy中的结构定义和C语言中的定义相同，NumPy就可以很方便地读取C语言的结构数组的二进制数据，转换为NumPy的结构数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":143},{"title":"假设我们需要定义一个结构数组，它的每个元素都有name, age和weight字段。在NumPy中可以如下定义：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":145},{"title":"**import** **numpy** **as** **np**persontype = np.dtype({ 'names':'name', 'age', 'weight', 'formats':'S32','i', 'f'})a = np.array((\"Zhang\",32,75.5),(\"Wang\",24,65.2), dtype=persontype)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":147},{"title":"我们先创建一个dtype对象persontype，通过其字典参数描述结构类型的各个字段。字典有两个关键字：names，formats。每个关键字对应的值都是一个列表。names定义结构中的每个字段名，而formats则定义每个字段的类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":149},{"title":"**S32** : 32个字节的字符串类型，由于结构中的每个元素的大小必须固定，因此需要指定字符串的长度","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":151},{"title":"**i** : 32bit的整数类型，相当于np.int32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":153},{"title":"**f** : 32bit的单精度浮点数类型，相当于np.float32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":154},{"title":"然后我们调用array函数创建数组，通过关键字参数 dtype=persontype， 指定所创建的数组的元素类型为结构persontype。运行上面程序之后，我们可以在IPython中执行如下的语句查看数组a的元素类型","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":156},{"title":"**>>>** a.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":158},{"title":"这里我们看到了另外一种描述结构类型的方法： 一个包含多个组元的列表，其中形如 (字段名, 类型描述) 的组元描述了结构中的每个字段。类型描述前面为我们添加了 '|', '<' 等字符，这些字符用来描述字段值的字节顺序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":160},{"title":"**|** : 忽视字节顺序","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":162},{"title":"**<** : 低位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":164},{"title":"**>** : 高位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":165},{"title":"结构数组的存取方式和一般数组相同，通过下标能够取得其中的元素，注意元素的值看上去像是组元，实际上它是一个结构：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":167},{"title":"**>>>** a0('Zhang', 32, 75.5)**>>>** a0.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":169},{"title":"a0是一个结构元素，它和数组a共享内存数据，因此可以通过修改它的字段，改变原始数组中的对应字段：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":171},{"title":"**>>>** c = a1**>>>** c\"name\" = \"Li\"**>>>** a1\"name\"\"Li\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":173},{"title":"结构像字典一样可以通过字符串下标获取其对应的字段值：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":175},{"title":"**>>>** a0\"name\"'Zhang'","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":177},{"title":"我们不但可以获得结构元素的某个字段，还可以直接获得结构数组的字段，它返回的是原始数组的视图，因此可以通过修改b0改变a0\"age\"：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":179},{"title":"**>>>** b=a:\"age\" _# 或者a\"age\"_**>>>** barray(32, 24)**>>>** b0 = 40**>>>** a0\"age\"40","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":181},{"title":"通过调用a.tostring或者a.tofile方法，可以直接输出数组a的二进制形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":183},{"title":"**>>>** a.tofile(\"test.bin\")","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":185},{"title":"利用下面的C语言程序可以将test.bin文件中的数据读取出来。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":187},{"title":"内存对齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":189},{"title":"C语言的结构体为了内存寻址方便，会自动的添加一些填充用的字节，这叫做内存对齐。例如如果把下面的name32改为name30的话，由于内存对齐问题，在name和age中间会填补两个字节，最终的结构体大小不会改变。因此如果numpy中的所配置的内存大小不符合C语言的对齐规范的话，将会出现数据错位。为了解决这个问题，在创建dtype对象时，可以传递参数align=True，这样numpy的结构数组的内存对齐和C语言的结构体就一致了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":191},{"title":"#include <stdio.h> **struct** person{ char name32; int age; float weight;}; **struct** person p2; void main (){ FILE *fp; int i; fp=fopen(\"test.bin\",\"rb\"); fread(p, **sizeof**(**struct** person), 2, fp); fclose(fp); **for**(i=0;i<2;i++) printf(\"%s %d %f**n**\", pi.name, pi.age, pi.weight); getchar();}","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":193},{"title":"结构类型中可以包括其它的结构类型，下面的语句创建一个有一个字段f1的结构，f1的值是另外一个结构，它有字段f2，其类型为16bit整数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":195},{"title":"**>>>** np.dtype(('f1', ('f2', np.int16)))dtype(('f1', ('f2', '<i2')))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":197},{"title":"当某个字段类型为数组时，用组元的第三个参数表示，下面描述的f1字段是一个shape为(2,3)的双精度浮点数组:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":199},{"title":"**>>>** np.dtype(('f0', 'i4'), ('f1', 'f8', (2, 3)))dtype(('f0', '<i4'), ('f1', '<f8', (2, 3)))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":201},{"title":"用下面的字典参数也可以定义结构类型，字典的关键字为结构中字段名，值为字段的类型描述，但是由于字典的关键字是没有顺序的，因此字段的顺序需要在类型描述中给出，类型描述是一个组元，它的第二个值给出字段的字节为单位的偏移量，例如age字段的偏移量为25个字节：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":203},{"title":"**>>>** np.dtype({'surname':('S25',0),'age':(np.uint8,25)})dtype(('surname', '|S25'), ('age', '|u1'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":205},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":207},{"title":"2.1.5　内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":207},{"title":"图2.3","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpymemorystruct","line":209},{"title":"下面让我们来看看ndarray数组对象是如何在内存中储存的。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":209},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","line":211}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11910343,-0.05648404,0.00962176,-0.03208226,0.07405929,-0.01103064,-0.01405666,-0.05471294,0.01647665,0.01034257,0.07327737,-0.07160613,0.02190131,0.00155021,-0.01700162,-0.03323148,-0.02087204,-0.00793099,-0.02724436,-0.00088034,0.10968002,-0.00856224,0.05243916,-0.05171922,0.01748326,0.09100956,-0.01026061,-0.01746045,-0.00965555,-0.19781755,0.05266758,0.01955635,-0.02019255,-0.00609755,0.07328101,0.00461735,0.00066078,0.02824562,-0.00114441,0.03846985,0.01627687,-0.01689138,0.00895707,0.03089933,0.00853948,-0.08522631,-0.01948212,-0.00773212,0.01667482,-0.02372277,-0.06966843,-0.01787997,-0.03745904,-0.02558788,0.05681078,0.00695145,0.09756417,0.04844653,0.00641514,0.03734278,0.00129942,0.02590038,-0.19409791,0.05116147,0.08033917,-0.01874522,-0.02882538,0.03150983,0.03032739,0.00290156,-0.05529329,0.06924793,-0.003859,0.10110695,0.01160299,-0.02956291,0.04752249,-0.00173533,-0.03517743,-0.04783348,-0.05740436,0.06487063,-0.03376846,0.00173635,-0.01681383,0.02886726,-0.00085423,0.00044385,0.03258769,-0.02773887,0.02739848,-0.00227821,0.02173516,0.0934756,-0.02643783,-0.01746604,0.10155229,0.06335709,0.01109455,0.08201274,-0.03956665,0.00074292,0.03140546,0.01595376,0.00511279,-0.06189028,-0.0396288,-0.02230525,0.01170099,0.03058338,0.0217917,-0.01103574,0.02671071,-0.04635418,0.04547761,-0.00490107,-0.06829366,-0.03481456,-0.08297537,0.00848693,-0.00775731,-0.01028441,0.04973461,-0.01308835,0.02129261,-0.03047955,-0.03001364,0.02618324,0.05690111,0.02402324,0.09014189,-0.02305219,-0.08307601,-0.01970676,0.0145626,-0.00471014,-0.02872911,0.02224772,0.0170648,-0.0585074,0.01768973,-0.11289751,0.00199621,-0.01813782,-0.10584266,0.07668056,-0.05563473,0.01565047,-0.0157977,-0.02196828,-0.02153735,0.06905906,-0.03817846,-0.03739149,0.03632753,-0.04809709,0.07910533,0.06801949,-0.03994951,-0.01310176,-0.02857298,-0.07975788,-0.01835896,0.06223665,-0.03683336,-0.08064246,-0.0416216,0.03179281,-0.03324874,-0.03204622,0.03678713,-0.00789717,-0.00611764,0.02867087,0.07704865,-0.02070038,-0.00474551,-0.06421895,0.02803968,0.00504184,-0.03073069,-0.06706213,-0.03646525,-0.00681927,0.00189722,-0.06799843,0.00830895,-0.01779341,0.02622561,0.01209508,-0.01987001,-0.00723772,0.00649824,-0.06716685,-0.03745222,0.02856179,-0.01190904,-0.01717108,0.07198205,-0.07625604,0.10750919,0.01995087,0.02169161,0.06986012,-0.01621014,-0.02253626,0.01105431,-0.03011392,0.0358928,0.03509796,0.00262175,-0.0448694,-0.00220712,-0.02035124,-0.02939003,-0.00013054,0.0543744,0.05713874,0.04953031,0.04054248,-0.0038307,-0.10228647,-0.11164983,-0.19243914,0.03629875,0.01842142,-0.06251891,-0.00908799,-0.0476843,0.04811531,0.01306386,0.02178652,0.07612393,0.07494295,0.00818753,-0.0237469,-0.02451248,-0.00682718,0.035789,0.06556971,-0.01316301,-0.02153676,0.03706827,0.0122256,0.0112036,-0.02196062,0.02189364,-0.02675613,-0.03255289,0.11999264,0.03181846,0.06147594,0.02221172,0.02645678,0.03611331,-0.05338675,-0.1182117,0.05180584,0.01387853,-0.03567057,0.05589316,-0.03968636,0.01577071,0.02177206,0.02484429,0.02605049,-0.03013906,-0.01489188,0.01152278,-0.02400905,-0.03235836,-0.02626204,-0.00117866,0.001088,0.05647982,0.01288016,0.05123885,-0.03108395,-0.02292815,-0.05054879,0.03511306,-0.02689494,0.01508996,-0.00648719,-0.02876588,0.00623052,-0.07486233,-0.01642624,-0.05920248,-0.01662773,-0.0243744,0.03244666,0.00304083,-0.02465932,0.14273883,0.03082614,-0.01134079,0.02382332,0.00839495,0.00931575,-0.01018634,0.01343161,-0.04794876,0.02770267,0.0341367,0.09909211,0.02080695,0.03084424,-0.05299311,0.0053377,-0.02873054,0.04836791,0.00199627,-0.0543691,-0.01916204,0.02590508,0.06030443,0.12698583,0.03389276,-0.28468391,0.03241963,-0.0050356,-0.01109078,-0.00428609,-0.00532933,0.03403271,0.00049699,-0.0256183,0.02962101,-0.0413008,0.00302216,-0.00693376,-0.06690841,-0.01182448,0.01666246,0.09417448,-0.00232253,0.07423299,0.04039615,0.0170863,-0.00967798,0.22801256,-0.00836374,0.0467575,-0.02299376,-0.04206853,0.03761662,0.05976688,0.00790214,0.00920358,-0.02021009,0.03736715,-0.0547229,0.01934027,0.10117874,0.01615151,-0.01001558,0.03568402,-0.01644364,-0.03168535,-0.02215324,-0.12122273,0.00122154,0.08252745,-0.03073256,-0.03104019,-0.11734113,-0.03759044,0.02268407,-0.04488302,0.03176073,-0.00839433,0.01796949,0.04565001,0.01416152,0.022426,-0.04775271,-0.00568256,-0.03368226,0.04402011,-0.06328537,0.11034297,0.09970779,0.00356247],"last_embed":{"hash":"314d5426b80dabff572af9e99ac1958ed9e83e9fbebec2bfac5b2ff6d674ec80","tokens":336}}},"text":null,"length":0,"last_read":{"hash":"314d5426b80dabff572af9e99ac1958ed9e83e9fbebec2bfac5b2ff6d674ec80","at":1757414817190},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#{1}","lines":[20,25],"size":283,"outlinks":[{"title":"函数库的导入","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":1},{"title":"本书的示例程序假设用以下推荐的方式导入NumPy函数库:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":3},{"title":"**import** **numpy** **as** **np**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":5}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.1　创建](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12881471,-0.04199355,0.01217745,-0.02748368,0.07549583,-0.00636179,-0.01897234,-0.05501945,0.02074179,0.0073672,0.07358166,-0.07329892,0.02691672,-0.00240906,-0.01181991,-0.03400681,-0.01516931,-0.0143812,-0.0221887,-0.00050652,0.12251574,-0.01200848,0.0545288,-0.0515199,0.0149221,0.07798471,-0.01955603,-0.0178691,-0.00912213,-0.18610495,0.05962127,0.02061666,-0.01391787,-0.0097064,0.07578682,0.00017673,-0.00270312,0.03559667,-0.00122775,0.04259547,0.01014333,-0.0009724,0.00706488,0.02593495,0.01172077,-0.0771503,-0.02786562,-0.01365668,0.00803636,-0.02588972,-0.07106109,-0.01900939,-0.03512333,-0.02081678,0.05145345,-0.00098336,0.08759467,0.05891036,0.00927489,0.02966798,-0.00063513,0.028667,-0.19573581,0.0477906,0.08187499,-0.01469907,-0.03503297,0.02759811,0.03854285,0.00725851,-0.05051228,0.06324728,-0.01435768,0.09695812,0.01152139,-0.02865161,0.04926285,-0.00091731,-0.04230692,-0.04999843,-0.06420021,0.0742388,-0.03709865,0.00018821,-0.02369465,0.02787539,0.00319007,-0.00154206,0.04307431,-0.02631917,0.03848204,0.0016322,0.0217524,0.09754174,-0.02452083,-0.01750134,0.09752028,0.06833874,0.01272336,0.0823646,-0.04860385,0.00246885,0.02899794,0.0079447,0.01341978,-0.06407595,-0.02758949,-0.02893311,0.01891754,0.03397999,0.01048309,0.0014601,0.02632695,-0.04341211,0.04070881,-0.00496301,-0.0618097,-0.02045009,-0.0789732,-0.00032837,-0.00802686,-0.00987204,0.0419894,-0.02164249,0.01927508,-0.03608599,-0.02015181,0.02858498,0.06440139,0.01937225,0.08593996,-0.01744305,-0.08638036,-0.02238671,0.01178713,-0.01449656,-0.04230407,0.01902385,0.01137652,-0.05663157,0.0203865,-0.12109018,0.00548729,-0.03245455,-0.10021375,0.08151621,-0.05614711,0.01533456,-0.00354584,-0.028565,-0.02242536,0.06962822,-0.03020865,-0.04662092,0.03351865,-0.04503634,0.07057625,0.07358035,-0.03549259,-0.0185401,-0.02069636,-0.07233044,-0.02915739,0.06952623,-0.03363766,-0.07258862,-0.04406719,0.0321617,-0.03616195,-0.03581529,0.04031474,-0.01697955,-0.01453977,0.01627623,0.07986601,-0.0205963,0.00177098,-0.06602015,0.02057369,0.01221816,-0.03421211,-0.06288602,-0.02741975,-0.00102539,-0.00223998,-0.06834798,0.01172824,-0.01795508,0.02919346,0.01376214,-0.01559104,-0.01584791,0.00794831,-0.07012476,-0.03629743,0.02184492,-0.01139648,-0.02339196,0.06687827,-0.0778129,0.10414767,0.00638494,0.01611982,0.05357786,-0.01506526,-0.02533346,0.01015124,-0.03302108,0.03703506,0.03752241,0.0013459,-0.04819176,-0.00825865,-0.02103882,-0.01612915,-0.00271971,0.05441342,0.05214191,0.03752555,0.03996471,-0.00339301,-0.09672739,-0.11206777,-0.18875648,0.01781908,0.01340886,-0.07628219,0.00291697,-0.04635371,0.04534512,0.01702505,0.02950116,0.07015125,0.07428797,0.01246856,-0.03135028,-0.02227316,0.00127644,0.02697874,0.07005148,-0.01401127,-0.01633485,0.03299991,0.0265018,0.01658351,-0.01545921,0.01749802,-0.02596211,-0.03069479,0.11979154,0.02836327,0.05929633,0.01931054,0.02396284,0.026998,-0.05265856,-0.11663529,0.0539552,0.02012613,-0.05162642,0.05247989,-0.04303305,0.01157033,0.01485188,0.03047715,0.02158408,-0.03192584,-0.02687579,0.00389535,-0.02351257,-0.02230168,-0.02917237,0.00852437,-0.0032589,0.05985672,0.00809088,0.05540764,-0.0231209,-0.02526229,-0.05267969,0.02228599,-0.02885272,0.02097263,-0.00133221,-0.03431414,0.00538768,-0.07098174,0.0030163,-0.06249349,-0.02256623,-0.02279724,0.03631012,0.00381634,-0.02813149,0.15038447,0.02759284,-0.01136564,0.02926495,0.00427942,0.01821822,-0.02128433,0.0150148,-0.05198723,0.0216045,0.02747667,0.10021207,0.02488254,0.02918988,-0.04872271,0.00518634,-0.02812971,0.05909181,0.00276261,-0.05702912,-0.01675423,0.01793366,0.05147872,0.12793477,0.03260167,-0.28887802,0.03347395,-0.00491202,0.00239609,-0.00384137,0.00042174,0.03028398,0.00428058,-0.0233331,0.03376117,-0.04464404,0.0106575,-0.00832061,-0.077478,-0.01748724,0.0090776,0.09149244,-0.00334236,0.0726669,0.0514285,0.02141841,-0.00383326,0.22965567,-0.00263481,0.04229835,-0.02223961,-0.03134862,0.0454424,0.06896292,0.00038343,0.00580872,-0.02041335,0.04711,-0.04553207,0.01370834,0.0964399,0.01823115,-0.01350182,0.03882972,-0.00967546,-0.0321428,-0.00645247,-0.12515721,-0.00199966,0.09107325,-0.02207422,-0.03415761,-0.11176905,-0.02892714,0.02033473,-0.05321349,0.03222851,-0.01888675,0.0139134,0.04981183,0.02296039,0.03512665,-0.04943299,-0.00096327,-0.02247414,0.0477992,-0.05579402,0.10168774,0.09941704,0.00639562],"last_embed":{"hash":"d89e213c81cd6aeeb082f27d8a6f0e10849a017a1bca03801a923fab10348d83","tokens":356}}},"text":null,"length":0,"last_read":{"hash":"d89e213c81cd6aeeb082f27d8a6f0e10849a017a1bca03801a923fab10348d83","at":1757414817226},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.1　创建](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)","lines":[26,100],"size":6437,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"2.1.1　创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":1},{"title":"首先需要创建数组才能对其进行其它操作。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":3},{"title":"我们可以通过给array函数传递Python的序列对象创建数组，如果传递的是多层嵌套的序列，将创建多维数组(下例中的变量c):","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":5},{"title":"**>>>** a = np.array(1, 2, 3, 4)**>>>** b = np.array((5, 6, 7, 8))**>>>** c = np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10)**>>>** barray(5, 6, 7, 8)**>>>** carray(1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)**>>>** c.dtypedtype('int32')","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":7},{"title":"数组的大小可以通过其shape属性获得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":9},{"title":"**>>>** a.shape(4,)**>>>** c.shape(3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":11},{"title":"数组a的shape只有一个元素，因此它是一维数组。而数组c的shape有两个元素，因此它是二维数组，其中第0轴的长度为3，第1轴的长度为4。还可以通过修改数组的shape属性，在保持数组元素个数不变的情况下，改变数组每个轴的长度。下面的例子将数组c的shape改为(4,3)，注意从(3,4)改为(4,3)并不是对数组进行转置，而只是改变每个轴的大小，数组元素在内存中的位置并没有改变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":13},{"title":"**>>>** c.shape = 4,3**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":15},{"title":"当某个轴的元素为-1时，将根据数组元素的个数自动计算此轴的长度，因此下面的程序将数组c的shape改为了(2,6)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":17},{"title":"**>>>** c.shape = 2,-1**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":19},{"title":"使用数组的reshape方法，可以创建一个改变了尺寸的新数组，原数组的shape保持不变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":21},{"title":"**>>>** d = a.reshape((2,2))**>>>** darray(1, 2, 3, 4)**>>>** aarray(1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":23},{"title":"数组a和d其实共享数据存储内存区域，因此修改其中任意一个数组的元素都会同时修改另外一个数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":25},{"title":"**>>>** a1 = 100 _# 将数组a的第一个元素改为100_**>>>** d _# 注意数组d中的2也被改变了_array( 1, 100, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":27},{"title":"数组的元素类型可以通过dtype属性获得。上面例子中的参数序列的元素都是整数，因此所创建的数组的元素类型也是整数，并且是32bit的长整型。可以通过dtype参数在创建时指定元素类型:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":29},{"title":"**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.float)array( 1., 2., 3., 4., 4., 5., 6., 7., 7., 8., 9., 10.)**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.complex)array( 1.+0.j, 2.+0.j, 3.+0.j, 4.+0.j, 4.+0.j, 5.+0.j, 6.+0.j, 7.+0.j, 7.+0.j, 8.+0.j, 9.+0.j, 10.+0.j)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":31},{"title":"上面的例子都是先创建一个Python序列，然后通过array函数将其转换为数组，这样做显然效率不高。因此NumPy提供了很多专门用来创建数组的函数。下面的每个函数都有一些关键字参数，具体用法请查看函数说明。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":33},{"title":"arange函数类似于python的range函数，通过指定开始值、终值和步长来创建一维数组，注意数组不包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":35},{"title":"**>>>** np.arange(0,1,0.1)array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":37},{"title":"linspace函数通过指定开始值、终值和元素个数来创建一维数组，可以通过endpoint关键字指定是否包括终值，缺省设置是包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":39},{"title":"**>>>** np.linspace(0, 1, 12)array( 0. , 0.09090909, 0.18181818, 0.27272727, 0.36363636, 0.45454545, 0.54545455, 0.63636364, 0.72727273, 0.81818182, 0.90909091, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":41},{"title":"logspace函数和linspace类似，不过它创建等比数列，下面的例子产生1(10^0)到100(10^2)、有20个元素的等比数列:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":43},{"title":"**>>>** np.logspace(0, 2, 20)array( 1. , 1.27427499, 1.62377674, 2.06913808, 2.6366509 , 3.35981829, 4.2813324 , 5.45559478, 6.95192796, 8.8586679 , 11.28837892, 14.38449888, 18.32980711, 23.35721469, 29.76351442, 37.92690191, 48.32930239, 61.58482111, 78.47599704, 100. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":45},{"title":"此外，使用frombuffer, fromstring, fromfile等函数可以从字节序列创建数组，下面以fromstring为例:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":48},{"title":"**>>>** s = \"abcdefgh\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":50},{"title":"Python的字符串实际上是字节序列，每个字符占一个字节，因此如果从字符串s创建一个8bit的整数数组的话，所得到的数组正好就是字符串中每个字符的ASCII编码:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":52},{"title":"**>>>** np.fromstring(s, dtype=np.int8)array( 97, 98, 99, 100, 101, 102, 103, 104, dtype=int8)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":54},{"title":"如果从字符串s创建16bit的整数数组，那么两个相邻的字节就表示一个整数，把字节98和字节97当作一个16位的整数，它的值就是98*256+97 = 25185。可以看出内存中是以little endian(低位字节在前)方式保存数据的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":56},{"title":"**>>>** np.fromstring(s, dtype=np.int16)array(25185, 25699, 26213, 26727, dtype=int16)**>>>** 98*256+9725185","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":58},{"title":"如果把整个字符串转换为一个64位的双精度浮点数数组，那么它的值是:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":60},{"title":"**>>>** np.fromstring(s, dtype=np.float)array( 8.54088322e+194)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":62},{"title":"显然这个例子没有什么意义，但是可以想象如果我们用C语言的二进制方式写了一组double类型的数值到某个文件中，那们可以从此文件读取相应的数据，并通过fromstring函数将其转换为float64类型的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":64},{"title":"我们可以写一个Python的函数，它将数组下标转换为数组中对应的值，然后使用此函数创建数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":66},{"title":"**>>>** **def** func(i):**...** **return** i%4+1**...****>>>** np.fromfunction(func, (10,))array( 1., 2., 3., 4., 1., 2., 3., 4., 1., 2.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":68},{"title":"fromfunction函数的第一个参数为计算每个数组元素的函数，第二个参数为数组的大小(shape)，因为它支持多维数组，所以第二个参数必须是一个序列，本例中用(10,)创建一个10元素的一维数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":70},{"title":"下面的例子创建一个二维数组表示九九乘法表，输出的数组a中的每个元素ai, j都等于func2(i, j)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":72},{"title":"**>>>** **def** func2(i, j):**...** **return** (i+1) * (j+1)**...****>>>** a = np.fromfunction(func2, (9,9))**>>>** aarray( 1., 2., 3., 4., 5., 6., 7., 8., 9., 2., 4., 6., 8., 10., 12., 14., 16., 18., 3., 6., 9., 12., 15., 18., 21., 24., 27., 4., 8., 12., 16., 20., 24., 28., 32., 36., 5., 10., 15., 20., 25., 30., 35., 40., 45., 6., 12., 18., 24., 30., 36., 42., 48., 54., 7., 14., 21., 28., 35., 42., 49., 56., 63., 8., 16., 24., 32., 40., 48., 56., 64., 72., 9., 18., 27., 36., 45., 54., 63., 72., 81.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":74}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.1　创建](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12625258,-0.0409441,0.00701709,-0.02776126,0.068936,-0.0066061,-0.0109708,-0.05425964,0.02418168,0.00907366,0.07398649,-0.06959815,0.02198746,-0.00490778,-0.01485283,-0.03472195,-0.0142012,-0.01035031,-0.03007313,0.00245999,0.11568892,-0.01005104,0.04891512,-0.04806146,0.01514432,0.08003522,-0.01920318,-0.01554084,-0.01003539,-0.19018748,0.06245001,0.01964119,-0.01464609,-0.01603999,0.07684211,0.00291224,0.0001962,0.03720691,-0.00848643,0.0418216,0.01836227,-0.00823782,0.0095014,0.02329648,0.0074824,-0.08038314,-0.02460838,-0.01574616,0.01358289,-0.02242723,-0.07153977,-0.02357926,-0.03864383,-0.01541983,0.04742992,0.00133356,0.08597828,0.05111162,0.00786205,0.03304156,0.00252636,0.02783829,-0.19509825,0.05079826,0.08119061,-0.01401111,-0.03423465,0.02580629,0.0317635,0.00353703,-0.05542145,0.06049266,-0.01538309,0.09833156,0.015359,-0.03192255,0.05021041,-0.0002121,-0.04153489,-0.04834664,-0.06254098,0.06828031,-0.04136268,-0.00182547,-0.02498566,0.0277175,0.00735359,-0.00032631,0.04152042,-0.02409617,0.03520942,-0.00154926,0.02440527,0.09837342,-0.02224504,-0.02216342,0.09370434,0.07604503,0.01226667,0.08355413,-0.04816821,0.00264061,0.03183156,0.0090795,0.01474125,-0.06071217,-0.03064508,-0.02456154,0.01684602,0.0344081,0.01696195,-0.00688631,0.02666144,-0.04341182,0.03763819,-0.00604014,-0.06136356,-0.01728903,-0.0797893,-0.0040658,-0.00669786,-0.01441526,0.04277625,-0.02342662,0.02146263,-0.03218535,-0.0218336,0.03387171,0.05993549,0.02388786,0.08900074,-0.02212988,-0.0793362,-0.02308791,0.0186178,-0.01441339,-0.0444756,0.02077642,0.0108746,-0.06211308,0.02112417,-0.11977795,0.008407,-0.0280459,-0.10117134,0.07821472,-0.05582398,0.01378581,-0.00801248,-0.03737744,-0.02240074,0.06742352,-0.0313068,-0.04534157,0.03139835,-0.03701556,0.0728149,0.06882066,-0.0369784,-0.01605464,-0.02252392,-0.07654544,-0.021362,0.07202548,-0.03781173,-0.07673471,-0.04761649,0.02918284,-0.03547506,-0.03206009,0.03720644,-0.01866655,-0.01211739,0.02101691,0.07252244,-0.02321395,-0.00197451,-0.05996775,0.02853668,0.0103251,-0.03333737,-0.05639461,-0.0270984,-0.0032365,-0.00229825,-0.06731714,0.00704609,-0.0131172,0.03276609,0.01348959,-0.0152136,-0.01284383,0.0066876,-0.07134433,-0.03732743,0.02562153,-0.00829836,-0.01745801,0.06985494,-0.07674808,0.10465496,0.01331669,0.0201996,0.06045529,-0.0101022,-0.02965245,0.00371995,-0.02701127,0.04032377,0.03333513,0.00619962,-0.04968354,-0.0098417,-0.02378003,-0.02177738,-0.00249086,0.05218799,0.05192137,0.04296638,0.04491699,0.00455924,-0.09812719,-0.10834802,-0.19222116,0.02227851,0.01678043,-0.07396659,0.00520005,-0.0463814,0.04452659,0.01660357,0.02314634,0.0705258,0.07197737,0.00950438,-0.02849657,-0.02152444,-0.00369941,0.03350817,0.07393359,-0.01267466,-0.01333635,0.03122089,0.02481926,0.01047761,-0.01380451,0.01526396,-0.03117917,-0.03138481,0.12043405,0.02830369,0.06453621,0.02130853,0.02444017,0.02898668,-0.05396592,-0.12156659,0.0553824,0.01666782,-0.04753165,0.04968018,-0.03754399,0.01224478,0.01819402,0.02472091,0.02401194,-0.0274656,-0.02387654,0.00698919,-0.02643005,-0.0259478,-0.02570154,0.00866332,0.00223609,0.06435633,0.00532993,0.05224703,-0.01864254,-0.02441587,-0.05320813,0.02298884,-0.02800167,0.013445,0.00164561,-0.03779383,0.00945464,-0.07165117,0.00238488,-0.06349456,-0.02381027,-0.0215226,0.0306116,0.0004238,-0.02856579,0.15098305,0.03210495,-0.01484612,0.02515014,-0.00105946,0.01915106,-0.0207641,0.01591185,-0.05646,0.02718189,0.03180758,0.09803373,0.01586704,0.03024077,-0.04943302,0.00627368,-0.0219409,0.05467551,0.00257776,-0.05130899,-0.0174436,0.01554616,0.05506903,0.12803337,0.0321296,-0.29098228,0.03798864,-0.00910647,-0.00174131,0.00158322,0.00131877,0.03759247,0.00709614,-0.0241328,0.03130902,-0.03858256,0.00714474,-0.01606216,-0.0732284,-0.01938436,0.0123074,0.08921038,-0.00464514,0.07304607,0.05445348,0.02264385,-0.00224418,0.231029,-0.00856573,0.04567886,-0.02155234,-0.03386653,0.04242394,0.06876898,0.00110386,0.008862,-0.0187646,0.04511371,-0.05145471,0.01640429,0.10138272,0.01665696,-0.01553405,0.03435432,-0.01495436,-0.03432488,-0.01065433,-0.12420429,0.00017496,0.08763789,-0.02758267,-0.02953602,-0.1116876,-0.03253784,0.01669173,-0.05098449,0.02799832,-0.01739158,0.01654455,0.05019052,0.0180935,0.03219448,-0.04536009,-0.00092592,-0.02646433,0.04238897,-0.05295119,0.10740882,0.10174098,0.00558762],"last_embed":{"hash":"44b5ee5bbbe3638208182cde8916dc3bf929b2f6007eea0a4ccdfe292d8083a4","tokens":372}}},"text":null,"length":0,"last_read":{"hash":"44b5ee5bbbe3638208182cde8916dc3bf929b2f6007eea0a4ccdfe292d8083a4","at":1757414817275},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.1　创建](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)#{1}","lines":[28,100],"size":6224,"outlinks":[{"title":"首先需要创建数组才能对其进行其它操作。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":1},{"title":"我们可以通过给array函数传递Python的序列对象创建数组，如果传递的是多层嵌套的序列，将创建多维数组(下例中的变量c):","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":3},{"title":"**>>>** a = np.array(1, 2, 3, 4)**>>>** b = np.array((5, 6, 7, 8))**>>>** c = np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10)**>>>** barray(5, 6, 7, 8)**>>>** carray(1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)**>>>** c.dtypedtype('int32')","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":5},{"title":"数组的大小可以通过其shape属性获得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":7},{"title":"**>>>** a.shape(4,)**>>>** c.shape(3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":9},{"title":"数组a的shape只有一个元素，因此它是一维数组。而数组c的shape有两个元素，因此它是二维数组，其中第0轴的长度为3，第1轴的长度为4。还可以通过修改数组的shape属性，在保持数组元素个数不变的情况下，改变数组每个轴的长度。下面的例子将数组c的shape改为(4,3)，注意从(3,4)改为(4,3)并不是对数组进行转置，而只是改变每个轴的大小，数组元素在内存中的位置并没有改变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":11},{"title":"**>>>** c.shape = 4,3**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":13},{"title":"当某个轴的元素为-1时，将根据数组元素的个数自动计算此轴的长度，因此下面的程序将数组c的shape改为了(2,6)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":15},{"title":"**>>>** c.shape = 2,-1**>>>** carray( 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":17},{"title":"使用数组的reshape方法，可以创建一个改变了尺寸的新数组，原数组的shape保持不变：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":19},{"title":"**>>>** d = a.reshape((2,2))**>>>** darray(1, 2, 3, 4)**>>>** aarray(1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":21},{"title":"数组a和d其实共享数据存储内存区域，因此修改其中任意一个数组的元素都会同时修改另外一个数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":23},{"title":"**>>>** a1 = 100 _# 将数组a的第一个元素改为100_**>>>** d _# 注意数组d中的2也被改变了_array( 1, 100, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":25},{"title":"数组的元素类型可以通过dtype属性获得。上面例子中的参数序列的元素都是整数，因此所创建的数组的元素类型也是整数，并且是32bit的长整型。可以通过dtype参数在创建时指定元素类型:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":27},{"title":"**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.float)array( 1., 2., 3., 4., 4., 5., 6., 7., 7., 8., 9., 10.)**>>>** np.array(1, 2, 3, 4,4, 5, 6, 7, 7, 8, 9, 10, dtype=np.complex)array( 1.+0.j, 2.+0.j, 3.+0.j, 4.+0.j, 4.+0.j, 5.+0.j, 6.+0.j, 7.+0.j, 7.+0.j, 8.+0.j, 9.+0.j, 10.+0.j)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":29},{"title":"上面的例子都是先创建一个Python序列，然后通过array函数将其转换为数组，这样做显然效率不高。因此NumPy提供了很多专门用来创建数组的函数。下面的每个函数都有一些关键字参数，具体用法请查看函数说明。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":31},{"title":"arange函数类似于python的range函数，通过指定开始值、终值和步长来创建一维数组，注意数组不包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":33},{"title":"**>>>** np.arange(0,1,0.1)array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":35},{"title":"linspace函数通过指定开始值、终值和元素个数来创建一维数组，可以通过endpoint关键字指定是否包括终值，缺省设置是包括终值:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":37},{"title":"**>>>** np.linspace(0, 1, 12)array( 0. , 0.09090909, 0.18181818, 0.27272727, 0.36363636, 0.45454545, 0.54545455, 0.63636364, 0.72727273, 0.81818182, 0.90909091, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":39},{"title":"logspace函数和linspace类似，不过它创建等比数列，下面的例子产生1(10^0)到100(10^2)、有20个元素的等比数列:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":41},{"title":"**>>>** np.logspace(0, 2, 20)array( 1. , 1.27427499, 1.62377674, 2.06913808, 2.6366509 , 3.35981829, 4.2813324 , 5.45559478, 6.95192796, 8.8586679 , 11.28837892, 14.38449888, 18.32980711, 23.35721469, 29.76351442, 37.92690191, 48.32930239, 61.58482111, 78.47599704, 100. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":43},{"title":"此外，使用frombuffer, fromstring, fromfile等函数可以从字节序列创建数组，下面以fromstring为例:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":46},{"title":"**>>>** s = \"abcdefgh\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":48},{"title":"Python的字符串实际上是字节序列，每个字符占一个字节，因此如果从字符串s创建一个8bit的整数数组的话，所得到的数组正好就是字符串中每个字符的ASCII编码:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":50},{"title":"**>>>** np.fromstring(s, dtype=np.int8)array( 97, 98, 99, 100, 101, 102, 103, 104, dtype=int8)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":52},{"title":"如果从字符串s创建16bit的整数数组，那么两个相邻的字节就表示一个整数，把字节98和字节97当作一个16位的整数，它的值就是98*256+97 = 25185。可以看出内存中是以little endian(低位字节在前)方式保存数据的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":54},{"title":"**>>>** np.fromstring(s, dtype=np.int16)array(25185, 25699, 26213, 26727, dtype=int16)**>>>** 98*256+9725185","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":56},{"title":"如果把整个字符串转换为一个64位的双精度浮点数数组，那么它的值是:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":58},{"title":"**>>>** np.fromstring(s, dtype=np.float)array( 8.54088322e+194)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":60},{"title":"显然这个例子没有什么意义，但是可以想象如果我们用C语言的二进制方式写了一组double类型的数值到某个文件中，那们可以从此文件读取相应的数据，并通过fromstring函数将其转换为float64类型的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":62},{"title":"我们可以写一个Python的函数，它将数组下标转换为数组中对应的值，然后使用此函数创建数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":64},{"title":"**>>>** **def** func(i):**...** **return** i%4+1**...****>>>** np.fromfunction(func, (10,))array( 1., 2., 3., 4., 1., 2., 3., 4., 1., 2.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":66},{"title":"fromfunction函数的第一个参数为计算每个数组元素的函数，第二个参数为数组的大小(shape)，因为它支持多维数组，所以第二个参数必须是一个序列，本例中用(10,)创建一个10元素的一维数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":68},{"title":"下面的例子创建一个二维数组表示九九乘法表，输出的数组a中的每个元素ai, j都等于func2(i, j)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":70},{"title":"**>>>** **def** func2(i, j):**...** **return** (i+1) * (j+1)**...****>>>** a = np.fromfunction(func2, (9,9))**>>>** aarray( 1., 2., 3., 4., 5., 6., 7., 8., 9., 2., 4., 6., 8., 10., 12., 14., 16., 18., 3., 6., 9., 12., 15., 18., 21., 24., 27., 4., 8., 12., 16., 20., 24., 28., 32., 36., 5., 10., 15., 20., 25., 30., 35., 40., 45., 6., 12., 18., 24., 30., 36., 42., 48., 54., 7., 14., 21., 28., 35., 42., 49., 56., 63., 8., 16., 24., 32., 40., 48., 56., 64., 72., 9., 18., 27., 36., 45., 54., 63., 72., 81.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":72}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.2　存取元素](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.13045055,-0.03947614,0.01013572,-0.02932537,0.06999752,-0.00438155,-0.01643165,-0.05459503,0.02261218,0.00655948,0.0767729,-0.07370274,0.02593567,-0.00442032,-0.00968508,-0.03604597,-0.01311133,-0.01420332,-0.02552181,-0.00246671,0.12446815,-0.01244165,0.0517449,-0.0509568,0.01629113,0.0773383,-0.02024934,-0.01713203,-0.00748085,-0.18471421,0.0607757,0.02009266,-0.011971,-0.00970031,0.07838392,0.00105203,0.00051587,0.03616074,-0.00039918,0.04348712,0.00842577,-0.00260899,0.00740936,0.02213812,0.01256949,-0.07680422,-0.02329172,-0.01559398,0.00634062,-0.02348688,-0.06842039,-0.02039715,-0.03421569,-0.01841309,0.0479958,0.00328828,0.08406509,0.05573839,0.00948093,0.03576618,-0.00222582,0.028441,-0.19463557,0.04899342,0.08201133,-0.01474845,-0.0373881,0.02721132,0.03895233,0.00539863,-0.0524125,0.06321437,-0.01684276,0.09819999,0.01129014,-0.02831679,0.04819279,-0.00135367,-0.0424728,-0.05089895,-0.06677239,0.07093083,-0.03945512,0.00075122,-0.02869185,0.02753733,0.00566674,-0.0012957,0.04299645,-0.02331452,0.03999213,0.00056932,0.01954972,0.09841306,-0.02300143,-0.01904805,0.09582908,0.07216636,0.01418675,0.08415819,-0.04897342,-0.00053371,0.0330826,0.00758136,0.01194143,-0.06272645,-0.02877006,-0.0295321,0.01692962,0.03380524,0.00745519,0.00050325,0.02415492,-0.04011081,0.04201352,-0.00753804,-0.0595468,-0.01937233,-0.07801932,-0.00146841,-0.00431935,-0.0111052,0.03958006,-0.02285794,0.01890874,-0.03477454,-0.01585587,0.02814971,0.06190113,0.02063246,0.08420384,-0.01613987,-0.08707507,-0.02137195,0.01515957,-0.01768885,-0.04514115,0.02176468,0.01281009,-0.05992412,0.02105255,-0.1194533,0.00360631,-0.03340207,-0.10143543,0.08113385,-0.05777897,0.01200953,0.00069786,-0.0357263,-0.02186477,0.06777287,-0.03116217,-0.04467647,0.03321791,-0.04203361,0.07030441,0.07478,-0.03074187,-0.02282148,-0.01976655,-0.07067847,-0.03006267,0.0744388,-0.03441494,-0.07368301,-0.04766576,0.03118038,-0.03731313,-0.03976215,0.03556396,-0.01679127,-0.01359505,0.01704159,0.07825182,-0.01757941,0.00213906,-0.06748969,0.021306,0.01418184,-0.03334084,-0.06001649,-0.02503742,-0.00180519,-0.0008629,-0.06720074,0.0121999,-0.01585294,0.02890479,0.01620013,-0.01663022,-0.01439557,0.00926922,-0.06881498,-0.0381106,0.02118466,-0.01196892,-0.02171444,0.06830106,-0.07905054,0.10652073,0.00505491,0.01564463,0.05067172,-0.01346841,-0.02689685,0.01127282,-0.02933061,0.03989786,0.03397483,0.00125274,-0.04580756,-0.00868124,-0.02199779,-0.01460738,0.00224451,0.05385825,0.05077085,0.03875586,0.04122123,-0.0024123,-0.09247495,-0.1151012,-0.18963106,0.01568314,0.01417355,-0.07621014,0.00515462,-0.04599023,0.04545018,0.01595743,0.02987272,0.07059456,0.07525548,0.01449763,-0.03540717,-0.02161783,0.00175302,0.0271932,0.0723454,-0.01862662,-0.01330696,0.02873875,0.02930012,0.01458989,-0.01855549,0.01747261,-0.0255246,-0.03159325,0.11899509,0.02607377,0.06309781,0.01893342,0.02460656,0.02357984,-0.04948638,-0.11862372,0.05499718,0.01839067,-0.05543948,0.04512767,-0.04044877,0.00906045,0.01022524,0.02949017,0.01988174,-0.03099479,-0.02681698,0.00583076,-0.02212245,-0.02136095,-0.02771275,0.01047398,-0.00351883,0.05961959,0.00667247,0.05720615,-0.02159979,-0.02152847,-0.0518547,0.02095213,-0.03029103,0.01859734,-0.00104654,-0.03467624,0.0068331,-0.07004829,0.00742277,-0.05935866,-0.02185393,-0.02542329,0.03847855,0.00459913,-0.02811671,0.14882678,0.03056375,-0.00921023,0.02483451,0.00628862,0.0167961,-0.02315093,0.01691403,-0.05337447,0.02215819,0.02883445,0.10434698,0.02343254,0.02497349,-0.04448291,0.00352254,-0.03210732,0.06061381,0.00232387,-0.05869988,-0.01609297,0.01712664,0.0510202,0.12466582,0.02471884,-0.292276,0.03482125,-0.00667168,0.00835222,-0.00431203,0.00194918,0.03247904,0.00341924,-0.02345419,0.03112427,-0.0423939,0.00755937,-0.01056013,-0.07793526,-0.01506731,0.00974256,0.0863874,-0.00151866,0.07452841,0.05387646,0.0237114,-0.00189484,0.23143229,-0.00155746,0.04177091,-0.02062992,-0.02861024,0.04353196,0.07238754,-0.0009652,0.0085969,-0.01975529,0.04789659,-0.04483427,0.01556075,0.09243314,0.01678791,-0.01349931,0.03635132,-0.00899881,-0.03511149,-0.00546581,-0.12623075,-0.00529191,0.09011234,-0.02191283,-0.0330525,-0.10916882,-0.0298925,0.01796341,-0.05447145,0.02949591,-0.024906,0.01332302,0.05144271,0.02677621,0.03687656,-0.04842857,-0.00204517,-0.01988113,0.04777694,-0.05431234,0.10234638,0.10292278,0.00613073],"last_embed":{"hash":"1edb97e53522186251adfe76dd706013fa69125f79a3f2725e4794a13116ec38","tokens":351}}},"text":null,"length":0,"last_read":{"hash":"1edb97e53522186251adfe76dd706013fa69125f79a3f2725e4794a13116ec38","at":1757414817323},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.2　存取元素](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)","lines":[101,128],"size":3581,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"2.1.2　存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":1},{"title":"数组元素的存取方法和Python的标准方法相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":3},{"title":"**>>>** a = np.arange(10)**>>>** a5 _# 用整数作为下标可以获取数组中的某个元素_5**>>>** a3:5 _# 用范围作为下标获取数组的一个切片，包括a3不包括a5_array(3, 4)**>>>** a:5 _# 省略开始下标，表示从a0开始_array(0, 1, 2, 3, 4)**>>>** a:-1 _# 下标可以使用负数，表示从数组后往前数_array(0, 1, 2, 3, 4, 5, 6, 7, 8)**>>>** a2:4 = 100,101 _# 下标还可以用来修改元素的值_**>>>** aarray( 0, 1, 100, 101, 4, 5, 6, 7, 8, 9)**>>>** a1:-1:2 _# 范围中的第三个参数表示步长，2表示隔一个元素取一个元素_array( 1, 101, 5, 7)**>>>** a::-1 _# 省略范围的开始下标和结束下标，步长为-1，整个数组头尾颠倒_array( 9, 8, 7, 6, 5, 4, 101, 100, 1, 0)**>>>** a5:1:-2 _# 步长为负数时，开始下标必须大于结束下标_array( 5, 101)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":5},{"title":"和Python的列表序列不同，通过下标范围获取的新的数组是原始数组的一个视图。它与原始数组共享同一块数据空间：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":7},{"title":"**>>>** b = a3:7 _# 通过下标范围产生一个新的数组b，b和a共享同一块数据空间_**>>>** barray(101, 4, 5, 6)**>>>** b2 = -10 _# 将b的第2个元素修改为-10_**>>>** barray(101, 4, -10, 6)**>>>** a _# a的第5个元素也被修改为10_array( 0, 1, 100, 101, 4, -10, 6, 7, 8, 9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":9},{"title":"除了使用下标范围存取元素之外，NumPy还提供了两种存取元素的高级方法。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":11},{"title":"**使用整数序列**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":13},{"title":"当使用整数序列对数组元素进行存取时，将使用整数序列中的每个元素作为下标，整数序列可以是列表或者数组。使用整数序列作为下标获得的数组不和原始数组共享数据空间。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":15},{"title":"**>>>** x = np.arange(10,1,-1)**>>>** xarray(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3, 3, 1, 8 _# 获取x中的下标为3, 3, 1, 8的4个元素，组成一个新的数组_array(7, 7, 9, 2)**>>>** b = xnp.array(3,3,-3,8) _#下标可以是负数_**>>>** b2 = 100**>>>** barray(7, 7, 100, 2)**>>>** x _# 由于b和x不共享数据空间，因此x中的值并没有改变_array(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3,5,1 = -1, -2, -3 _# 整数序列下标也可以用来修改元素的值_**>>>** xarray(10, -3, 8, -1, 6, -2, 4, 3, 2)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":17},{"title":"**使用布尔数组**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":19},{"title":"当使用布尔数组b作为下标存取数组x中的元素时，将收集数组x中所有在数组b中对应下标为True的元素。使用布尔数组作为下标获得的数组不和原始数组共享数据空间，注意这种方式只对应于布尔数组，不能使用布尔列表。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":21},{"title":"**>>>** x = np.arange(5,0,-1)**>>>** xarray(5, 4, 3, 2, 1)**>>>** xnp.array(True, False, True, False, False)**>>>** _# 布尔数组中下标为0，2的元素为True，因此获取x中下标为0,2的元素_array(5, 3)**>>>** xTrue, False, True, False, False**>>>** _# 如果是布尔列表，则把True当作1, False当作0，按照整数序列方式获取x中的元素_array(4, 5, 4, 5, 5)**>>>** xnp.array(True, False, True, True)**>>>** _# 布尔数组的长度不够时，不够的部分都当作False_array(5, 3, 2)**>>>** xnp.array(True, False, True, True) = -1, -2, -3**>>>** _# 布尔数组下标也可以用来修改元素_**>>>** xarray(-1, 4, -2, -3, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":23},{"title":"布尔数组一般不是手工产生，而是使用布尔运算的ufunc函数产生，关于ufunc函数请参照 ufunc运算 一节。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":25},{"title":"**>>>** x = np.random.rand(10) _# 产生一个长度为10，元素值为0-1的随机数的数组_**>>>** xarray( 0.72223939, 0.921226 , 0.7770805 , 0.2055047 , 0.17567449, 0.95799412, 0.12015178, 0.7627083 , 0.43260184, 0.91379859)**>>>** x>0.5**>>>** _# 数组x中的每个元素和0.5进行大小比较，得到一个布尔数组，True表示x中对应的值大于0.5_array( True, True, True, False, False, True, False, True, False, True, dtype=bool)**>>>** xx>0.5**>>>** _# 使用x>0.5返回的布尔数组收集x中的元素，因此得到的结果是x中所有大于0.5的元素的数组_array( 0.72223939, 0.921226 , 0.7770805 , 0.95799412, 0.7627083 , 0.91379859)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":27}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.2　存取元素](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12935492,-0.04473151,0.00845978,-0.02934868,0.07077991,-0.00649291,-0.00953413,-0.06087727,0.02090489,0.00460434,0.07672623,-0.07200237,0.02791095,-0.0077504,-0.01459246,-0.03583144,-0.0080048,-0.01278836,-0.02713087,-0.00114537,0.11681233,-0.01276143,0.0470689,-0.05431947,0.01337813,0.08470887,-0.01755643,-0.01681947,-0.01221828,-0.18582974,0.06057593,0.01619324,-0.01668151,-0.00818247,0.07351034,-0.00476759,-0.00058457,0.03642245,-0.00675514,0.03770676,0.0105861,-0.00296028,0.01416245,0.02561188,0.00749795,-0.07878419,-0.0191731,-0.01709002,0.00359689,-0.01910693,-0.06937252,-0.01720267,-0.03181595,-0.01688226,0.04424668,0.00361224,0.08679247,0.05412063,0.00989707,0.03588209,-0.00275711,0.02585001,-0.1889347,0.04927644,0.08217971,-0.01315236,-0.03101261,0.0233234,0.04392872,0.00143711,-0.05537797,0.06533832,-0.0185198,0.09945662,0.00977474,-0.02680842,0.0522293,0.00086118,-0.04202822,-0.05242079,-0.07129944,0.06795858,-0.03762963,0.00115024,-0.02664101,0.03231387,0.00925641,-0.00375925,0.04551182,-0.01899939,0.0392943,0.00096875,0.0189101,0.09546632,-0.01851949,-0.0192275,0.09464669,0.0751268,0.01009069,0.08018813,-0.0524122,-0.00041883,0.03049588,0.00784299,0.01285043,-0.06341684,-0.03797667,-0.02657884,0.01331724,0.0345169,0.01152759,-0.00585546,0.0262295,-0.03845283,0.04062064,0.00035713,-0.06230526,-0.01523723,-0.07946374,-0.00313882,-0.0061864,-0.0128844,0.04142074,-0.02367118,0.01729462,-0.03605131,-0.01924361,0.02760201,0.0608074,0.02449111,0.08742521,-0.0216887,-0.08816458,-0.02065539,0.01514074,-0.01595775,-0.04454287,0.02604676,0.0130023,-0.0648519,0.02129042,-0.12053182,0.00129248,-0.03139678,-0.10475664,0.08204966,-0.05539455,0.0129899,-0.00218533,-0.03812847,-0.01786643,0.06378108,-0.03997553,-0.04474954,0.0322241,-0.03788286,0.07388368,0.07715335,-0.029286,-0.01733807,-0.01711942,-0.07086203,-0.02830136,0.07498786,-0.03875444,-0.0784269,-0.04818904,0.02688346,-0.03492165,-0.03880787,0.03520955,-0.01446866,-0.01271646,0.01700976,0.06887977,-0.01835661,0.00054177,-0.06615829,0.02141877,0.01931716,-0.02851308,-0.05460486,-0.02211243,-0.0055943,-0.00568468,-0.06754516,0.00491124,-0.01450764,0.02905417,0.01703703,-0.02295167,-0.00988104,0.01083871,-0.07251212,-0.03677119,0.02367429,-0.01006097,-0.01575864,0.07303987,-0.08023278,0.10620663,0.01120071,0.01622387,0.05477796,-0.00999079,-0.02821873,0.01284767,-0.0302774,0.03312255,0.0400888,0.00607136,-0.04798192,-0.01151119,-0.01702438,-0.02110193,-0.00055181,0.05447703,0.05427352,0.03677341,0.03796884,-0.00062135,-0.09335901,-0.11276946,-0.18913056,0.01729433,0.00960172,-0.07162059,0.00598505,-0.04775777,0.04577486,0.01821199,0.02135042,0.0680369,0.07672424,0.01801283,-0.03814821,-0.0235888,-0.00036913,0.03496559,0.0684104,-0.01700607,-0.01343779,0.03195401,0.02563238,0.01316701,-0.01780898,0.02194311,-0.02528275,-0.02832931,0.1147282,0.02202115,0.06564363,0.02415691,0.02688355,0.03024096,-0.04939965,-0.12422912,0.05935236,0.0128331,-0.05558364,0.04497609,-0.03148789,0.010166,0.02120681,0.0254814,0.02626092,-0.02943976,-0.02349153,0.01141101,-0.01931178,-0.02525416,-0.02715812,0.00430388,0.00232983,0.06215503,0.00048225,0.05384183,-0.02038186,-0.01678088,-0.05085089,0.02560342,-0.02831482,0.01133125,0.00241356,-0.03828692,0.00705813,-0.064298,0.00398807,-0.06536058,-0.02060342,-0.02287015,0.03605886,-0.00114589,-0.02963863,0.15082972,0.03215975,-0.01408031,0.02035014,0.00737567,0.01471802,-0.02434639,0.01746816,-0.05602187,0.02846645,0.03588049,0.10675722,0.02167495,0.02803094,-0.04469003,-0.00208333,-0.03206791,0.06002929,-0.00026676,-0.05776904,-0.01716752,0.01075347,0.05016473,0.12216152,0.02473393,-0.29011652,0.03483881,-0.01345311,0.00706694,-0.00783681,0.00108326,0.03867921,0.00447714,-0.02690331,0.02759159,-0.0362963,0.00978731,-0.01161794,-0.07500535,-0.0150048,0.00999311,0.08936659,-0.00126732,0.07437851,0.05651693,0.02271059,0.00038094,0.22984141,-0.00196495,0.04722836,-0.02218222,-0.02372831,0.04007886,0.06908849,0.00396112,0.01036252,-0.02506069,0.04682047,-0.05113693,0.02020606,0.0916574,0.01475067,-0.01701314,0.03489322,-0.0055597,-0.03315488,-0.01393961,-0.12043171,-0.00609941,0.08778903,-0.01797816,-0.03014367,-0.11237787,-0.0282964,0.01888658,-0.05272636,0.03107037,-0.02413252,0.01850599,0.05189273,0.02179612,0.03753068,-0.04499769,-0.00443118,-0.03000435,0.04794028,-0.05461659,0.10460198,0.10701411,0.01082584],"last_embed":{"hash":"14977b91984c6230b22c8794fa9dc713e6a0fb9da820a8b11dcecd9f0245db16","tokens":347}}},"text":null,"length":0,"last_read":{"hash":"14977b91984c6230b22c8794fa9dc713e6a0fb9da820a8b11dcecd9f0245db16","at":1757414817370},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.2　存取元素](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)#{1}","lines":[103,128],"size":3370,"outlinks":[{"title":"数组元素的存取方法和Python的标准方法相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":1},{"title":"**>>>** a = np.arange(10)**>>>** a5 _# 用整数作为下标可以获取数组中的某个元素_5**>>>** a3:5 _# 用范围作为下标获取数组的一个切片，包括a3不包括a5_array(3, 4)**>>>** a:5 _# 省略开始下标，表示从a0开始_array(0, 1, 2, 3, 4)**>>>** a:-1 _# 下标可以使用负数，表示从数组后往前数_array(0, 1, 2, 3, 4, 5, 6, 7, 8)**>>>** a2:4 = 100,101 _# 下标还可以用来修改元素的值_**>>>** aarray( 0, 1, 100, 101, 4, 5, 6, 7, 8, 9)**>>>** a1:-1:2 _# 范围中的第三个参数表示步长，2表示隔一个元素取一个元素_array( 1, 101, 5, 7)**>>>** a::-1 _# 省略范围的开始下标和结束下标，步长为-1，整个数组头尾颠倒_array( 9, 8, 7, 6, 5, 4, 101, 100, 1, 0)**>>>** a5:1:-2 _# 步长为负数时，开始下标必须大于结束下标_array( 5, 101)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":3},{"title":"和Python的列表序列不同，通过下标范围获取的新的数组是原始数组的一个视图。它与原始数组共享同一块数据空间：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":5},{"title":"**>>>** b = a3:7 _# 通过下标范围产生一个新的数组b，b和a共享同一块数据空间_**>>>** barray(101, 4, 5, 6)**>>>** b2 = -10 _# 将b的第2个元素修改为-10_**>>>** barray(101, 4, -10, 6)**>>>** a _# a的第5个元素也被修改为10_array( 0, 1, 100, 101, 4, -10, 6, 7, 8, 9)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":7},{"title":"除了使用下标范围存取元素之外，NumPy还提供了两种存取元素的高级方法。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":9},{"title":"**使用整数序列**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":11},{"title":"当使用整数序列对数组元素进行存取时，将使用整数序列中的每个元素作为下标，整数序列可以是列表或者数组。使用整数序列作为下标获得的数组不和原始数组共享数据空间。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":13},{"title":"**>>>** x = np.arange(10,1,-1)**>>>** xarray(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3, 3, 1, 8 _# 获取x中的下标为3, 3, 1, 8的4个元素，组成一个新的数组_array(7, 7, 9, 2)**>>>** b = xnp.array(3,3,-3,8) _#下标可以是负数_**>>>** b2 = 100**>>>** barray(7, 7, 100, 2)**>>>** x _# 由于b和x不共享数据空间，因此x中的值并没有改变_array(10, 9, 8, 7, 6, 5, 4, 3, 2)**>>>** x3,5,1 = -1, -2, -3 _# 整数序列下标也可以用来修改元素的值_**>>>** xarray(10, -3, 8, -1, 6, -2, 4, 3, 2)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":15},{"title":"**使用布尔数组**","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":17},{"title":"当使用布尔数组b作为下标存取数组x中的元素时，将收集数组x中所有在数组b中对应下标为True的元素。使用布尔数组作为下标获得的数组不和原始数组共享数据空间，注意这种方式只对应于布尔数组，不能使用布尔列表。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":19},{"title":"**>>>** x = np.arange(5,0,-1)**>>>** xarray(5, 4, 3, 2, 1)**>>>** xnp.array(True, False, True, False, False)**>>>** _# 布尔数组中下标为0，2的元素为True，因此获取x中下标为0,2的元素_array(5, 3)**>>>** xTrue, False, True, False, False**>>>** _# 如果是布尔列表，则把True当作1, False当作0，按照整数序列方式获取x中的元素_array(4, 5, 4, 5, 5)**>>>** xnp.array(True, False, True, True)**>>>** _# 布尔数组的长度不够时，不够的部分都当作False_array(5, 3, 2)**>>>** xnp.array(True, False, True, True) = -1, -2, -3**>>>** _# 布尔数组下标也可以用来修改元素_**>>>** xarray(-1, 4, -2, -3, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":21},{"title":"布尔数组一般不是手工产生，而是使用布尔运算的ufunc函数产生，关于ufunc函数请参照 ufunc运算 一节。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":23},{"title":"**>>>** x = np.random.rand(10) _# 产生一个长度为10，元素值为0-1的随机数的数组_**>>>** xarray( 0.72223939, 0.921226 , 0.7770805 , 0.2055047 , 0.17567449, 0.95799412, 0.12015178, 0.7627083 , 0.43260184, 0.91379859)**>>>** x>0.5**>>>** _# 数组x中的每个元素和0.5进行大小比较，得到一个布尔数组，True表示x中对应的值大于0.5_array( True, True, True, False, False, True, False, True, False, True, dtype=bool)**>>>** xx>0.5**>>>** _# 使用x>0.5返回的布尔数组收集x中的元素，因此得到的结果是x中所有大于0.5的元素的数组_array( 0.72223939, 0.921226 , 0.7770805 , 0.95799412, 0.7627083 , 0.91379859)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":25}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12944137,-0.04020466,0.00842601,-0.02798281,0.0711642,-0.00468034,-0.01861522,-0.05573242,0.02300713,0.0072795,0.07610416,-0.07495245,0.02517643,-0.00449228,-0.01115889,-0.0354627,-0.01500074,-0.0146828,-0.02636072,-0.0016282,0.12351424,-0.01136818,0.05234986,-0.05089613,0.01311648,0.07961431,-0.02058408,-0.01695269,-0.00933312,-0.18486592,0.06098126,0.01855973,-0.01291461,-0.0114334,0.07893164,0.00190615,0.00061782,0.03598057,0.00038674,0.0437848,0.0081479,-0.00215846,0.00776533,0.021638,0.01302132,-0.07787595,-0.0251678,-0.01726549,0.00617338,-0.0239103,-0.06860976,-0.0208878,-0.03414433,-0.01801408,0.04772862,0.00369171,0.08430111,0.05609912,0.00921839,0.03453928,-0.00181585,0.03066636,-0.19505601,0.04858631,0.08160257,-0.01272734,-0.03768042,0.02676386,0.03793519,0.00369853,-0.05363181,0.06348573,-0.01906535,0.09851279,0.01256859,-0.02857587,0.04964405,-0.0010613,-0.0409973,-0.05122961,-0.06639633,0.07225095,-0.04096711,0.00060076,-0.0274235,0.02567587,0.00562917,-0.00131212,0.04211425,-0.02326176,0.04158989,-0.00043469,0.02134179,0.09869373,-0.02133615,-0.01798533,0.09394518,0.07193102,0.0138728,0.08406749,-0.04920826,-0.00061365,0.03197608,0.00813062,0.01332785,-0.06351476,-0.02927649,-0.03046918,0.01749213,0.03417256,0.00661159,0.00223205,0.0260085,-0.03977157,0.04219661,-0.00471917,-0.05972344,-0.01690592,-0.0778512,-0.00208546,-0.00587985,-0.0116774,0.04095282,-0.02369899,0.0189593,-0.03564003,-0.01590391,0.02878516,0.06200824,0.02136639,0.08292883,-0.01543146,-0.08623073,-0.02007058,0.01348022,-0.01832251,-0.04629932,0.02061163,0.01242209,-0.0591705,0.02178808,-0.11787287,0.00427003,-0.03361877,-0.09951673,0.08291676,-0.05671398,0.01258303,-0.00067372,-0.03636026,-0.02180396,0.067299,-0.03173112,-0.04766158,0.03256685,-0.04043075,0.07052173,0.07308222,-0.0331875,-0.02180127,-0.01845615,-0.07175086,-0.0304869,0.07370597,-0.03500707,-0.07325977,-0.04740125,0.03205539,-0.03845063,-0.03738853,0.03683683,-0.01666595,-0.01310297,0.01668466,0.07894713,-0.01836523,0.00146973,-0.06463512,0.02232702,0.01494613,-0.03307576,-0.06091724,-0.02547682,-0.00238876,-0.00302061,-0.06821229,0.01075478,-0.01618239,0.0294902,0.01707107,-0.01707035,-0.01430629,0.00877689,-0.06990569,-0.03672012,0.02194002,-0.01008338,-0.02163977,0.06808248,-0.0773127,0.10547706,0.00649546,0.01572942,0.0491894,-0.01480347,-0.02730839,0.00986944,-0.02837259,0.03847759,0.03437008,0.00239382,-0.04708477,-0.00920912,-0.02212246,-0.0159122,0.00011306,0.05438206,0.05087205,0.03913309,0.04213925,-0.00293445,-0.09300893,-0.11373484,-0.19001336,0.01648428,0.01303224,-0.07620784,0.00632792,-0.04633745,0.04491274,0.01706785,0.02988875,0.07216496,0.07666159,0.01554734,-0.03432265,-0.01795031,0.00244532,0.02758222,0.07236831,-0.01780804,-0.01619105,0.02996597,0.02856834,0.01310787,-0.01850008,0.01404146,-0.02469561,-0.02985427,0.11941566,0.02708547,0.06097502,0.01721322,0.025048,0.02623294,-0.04963178,-0.12343153,0.0563748,0.01980481,-0.05427269,0.0468555,-0.03874948,0.0084745,0.01088016,0.02898127,0.02029338,-0.02906766,-0.02460294,0.00722746,-0.02207245,-0.02193481,-0.02907545,0.00949887,-0.00314916,0.06202943,0.00720612,0.05580433,-0.02156907,-0.02114028,-0.05256266,0.01993703,-0.02944086,0.01831168,-0.00038252,-0.0358411,0.00558489,-0.06992108,0.00732267,-0.06079196,-0.02018052,-0.02635153,0.03797806,0.0046649,-0.02682302,0.14800839,0.02989628,-0.00897229,0.02616849,0.00420949,0.01695094,-0.02372333,0.01670758,-0.05412798,0.02558464,0.02827596,0.10095864,0.02313162,0.02588419,-0.04514077,0.00396733,-0.03304796,0.0611478,0.00166215,-0.05677925,-0.0161682,0.01767769,0.05121436,0.12708941,0.02624071,-0.29104382,0.03422049,-0.00604655,0.00645252,-0.00132645,0.0016287,0.03344574,0.00300486,-0.02253436,0.02911632,-0.0414872,0.00906297,-0.01212176,-0.07579771,-0.01614438,0.01027297,0.08773145,-0.00264129,0.07427581,0.05505902,0.02102577,-0.00254971,0.23128404,-0.00101991,0.03888966,-0.02163873,-0.02842667,0.04582344,0.07309678,-0.00132096,0.00832523,-0.01964086,0.04763665,-0.04609826,0.01480587,0.09251191,0.01698869,-0.01320332,0.03764478,-0.00832993,-0.03515136,-0.00617293,-0.1248004,-0.00393354,0.08948735,-0.02422895,-0.03237573,-0.1090505,-0.02996872,0.01757264,-0.05324769,0.02849207,-0.02527143,0.01466231,0.05328952,0.02542778,0.03780173,-0.04773643,-0.00220028,-0.0211214,0.04674234,-0.05479322,0.10114125,0.10261966,0.00567307],"last_embed":{"hash":"ae4b02075a0603d15877868b7619ad2b750e7529d7d1676590d1206d1d13b754","tokens":355}}},"text":null,"length":0,"last_read":{"hash":"ae4b02075a0603d15877868b7619ad2b750e7529d7d1676590d1206d1d13b754","at":1757414817420},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)","lines":[129,157],"size":1475,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"2.1.3　多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":1},{"title":"图2.1","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro02","line":3},{"title":"多维数组的存取和一维数组类似，因为多维数组有多个轴，因此它的下标需要用多个值来表示，NumPy采用组元(tuple)作为数组的下标。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":3},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","line":9},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","line":21}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11912261,-0.04379736,0.00939504,-0.02294503,0.06561319,-0.00654383,-0.01380591,-0.05579954,0.01970761,0.00177126,0.07072257,-0.07364311,0.01954062,-0.0118541,-0.01220988,-0.03528666,-0.01287528,-0.0060194,-0.03752846,-0.00414466,0.11770132,-0.01163465,0.04501563,-0.04520109,0.01950264,0.08103612,-0.02002956,-0.01470181,-0.0161387,-0.18806449,0.06515751,0.01398633,-0.01114093,-0.016266,0.07311293,0.00431288,0.00112636,0.04245231,-0.00047269,0.04203322,0.0088348,-0.00694681,0.01004829,0.0230084,-0.00071258,-0.07797538,-0.02060101,-0.01968581,0.0160284,-0.02650202,-0.06734638,-0.02192136,-0.04092398,-0.0149243,0.04214684,-0.00313494,0.07920974,0.05100917,0.00120059,0.03607991,0.00208023,0.02780934,-0.19117662,0.04704695,0.08506955,-0.0135527,-0.03400613,0.02004394,0.03430906,-0.00020843,-0.06078083,0.06382444,-0.01713875,0.1067267,0.01376534,-0.03428761,0.05152294,-0.00089829,-0.04157875,-0.04705581,-0.06902092,0.0680131,-0.04343917,-0.00182546,-0.03465108,0.02276613,0.01024279,-0.00637708,0.03749766,-0.01712346,0.03753208,-0.00066857,0.01728628,0.10174895,-0.01206413,-0.01758745,0.09540973,0.07626222,0.01050889,0.07916971,-0.05341035,0.00746501,0.03630581,0.01120263,0.01945871,-0.05379878,-0.03204624,-0.02190025,0.01157731,0.03519005,0.01696138,-0.00966128,0.0270718,-0.04131223,0.03704429,0.00270337,-0.06215223,-0.02283137,-0.07639512,-0.00561556,-0.00137358,-0.01237369,0.04561202,-0.02557136,0.01991336,-0.02723224,-0.01813356,0.03953061,0.05375634,0.03183758,0.0837676,-0.02055928,-0.08495515,-0.01660256,0.0155051,-0.01732683,-0.04973188,0.01664171,0.00699065,-0.06382289,0.02006826,-0.12082444,0.00287453,-0.02806751,-0.10142446,0.08076708,-0.05770299,0.0190101,-0.01019497,-0.03984312,-0.02673224,0.06549619,-0.03533769,-0.04696213,0.03095441,-0.03465645,0.0711842,0.07066073,-0.03340912,-0.01601205,-0.02594033,-0.07978053,-0.0216262,0.07258436,-0.03687743,-0.07735559,-0.04656171,0.03603225,-0.0386469,-0.03009755,0.03376876,-0.01279423,-0.01478633,0.02002644,0.0675175,-0.02112789,-0.00426228,-0.05849905,0.03922835,0.0122578,-0.03547854,-0.05775717,-0.02519431,-0.00406452,-0.00462998,-0.06439757,0.01432843,-0.00642917,0.02597759,0.01947548,-0.01933088,-0.01664722,0.00906645,-0.07172464,-0.03608535,0.02849529,-0.00683905,-0.01272612,0.07506817,-0.06603481,0.10558274,0.01639511,0.02505957,0.05932717,-0.009107,-0.02232877,0.0072519,-0.02644809,0.03920335,0.03287257,0.01221698,-0.05734812,-0.0090124,-0.02875511,-0.02759258,-0.00911163,0.06012458,0.04778532,0.03822291,0.04282099,0.00336719,-0.0986442,-0.11205275,-0.18746537,0.02013783,0.02003536,-0.07737266,0.00694957,-0.05109444,0.04264866,0.01728234,0.01707006,0.06150751,0.07550989,0.01047351,-0.03227333,-0.016671,-0.01004185,0.03276781,0.06361862,-0.01342268,-0.01919173,0.02951375,0.02312565,0.01039979,-0.01352689,0.0149096,-0.02845229,-0.03192407,0.12561557,0.02585631,0.06554059,0.02084971,0.01886487,0.0250152,-0.05917007,-0.12832923,0.05562793,0.01936195,-0.05697221,0.04561567,-0.03471207,0.01159982,0.01102665,0.02485252,0.03024714,-0.02842816,-0.01534979,0.00897999,-0.01797067,-0.01921278,-0.01598887,0.01040109,0.01308617,0.06293554,0.00006757,0.05552311,-0.01617864,-0.01784844,-0.05215835,0.02297003,-0.02671793,0.01703331,0.00590766,-0.04201005,0.00493928,-0.07030968,0.00265302,-0.05919551,-0.01755429,-0.01785035,0.03241432,-0.00455045,-0.02457981,0.15030354,0.03449955,-0.00878825,0.01571103,0.00741474,0.01819696,-0.0161712,0.02060267,-0.05671144,0.02866255,0.03645872,0.10219616,0.01497976,0.02375744,-0.04456159,0.00274408,-0.02767145,0.06269305,-0.00002919,-0.05126127,-0.0178997,0.01909629,0.05949755,0.12931748,0.0273743,-0.29323176,0.03368941,-0.0192233,-0.00442094,0.00725282,0.00598531,0.03485467,0.00370162,-0.02060904,0.0208307,-0.03423502,0.00509815,-0.0271477,-0.07530583,-0.01612495,0.02050007,0.08389983,-0.00368002,0.08147114,0.05941605,0.02753727,-0.0014403,0.22851232,-0.00767185,0.04609166,-0.01300201,-0.03127186,0.04554021,0.06699448,0.00080873,0.01838855,-0.01865585,0.04464858,-0.05261097,0.01507187,0.10084305,0.01789509,-0.0120842,0.02942791,-0.01032108,-0.03176355,-0.0160528,-0.11919086,-0.00545584,0.08428354,-0.02657379,-0.02755705,-0.11158526,-0.0357953,0.0176529,-0.05130385,0.02084109,-0.02576528,0.0183173,0.06072743,0.01876087,0.03504802,-0.04419009,0.00088631,-0.0278003,0.0306638,-0.06130716,0.10282994,0.10441653,0.00489343],"last_embed":{"hash":"95938f1ca46ec6820f8847dc425c841336475e5b01ea7d481529011fbc3a088a","tokens":402}}},"text":null,"length":0,"last_read":{"hash":"95938f1ca46ec6820f8847dc425c841336475e5b01ea7d481529011fbc3a088a","at":1757414817467},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{1}","lines":[131,152],"size":985,"outlinks":[{"title":"图2.1","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro02","line":1},{"title":"多维数组的存取和一维数组类似，因为多维数组有多个轴，因此它的下标需要用多个值来表示，NumPy采用组元(tuple)作为数组的下标。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":1},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.png","line":7},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.2.png","line":19}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{2}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12058009,-0.04342368,0.00418217,-0.02607673,0.06309322,-0.00656345,-0.00955903,-0.05193256,0.01882826,0.01106581,0.07572487,-0.06545062,0.02301899,-0.0150218,-0.01540966,-0.03845862,-0.01210178,0.00197324,-0.03527328,0.00120897,0.11393656,-0.00907616,0.04902,-0.04462933,0.01688927,0.08445593,-0.017722,-0.0066745,-0.0154535,-0.19221109,0.06182327,0.01730486,-0.00260332,-0.02095208,0.07436909,-0.0022786,-0.0033302,0.0366098,-0.00788151,0.04546532,0.01220372,-0.01466793,0.00180527,0.02382245,-0.00263528,-0.0775956,-0.01681669,-0.02072764,0.01691308,-0.02620744,-0.07098835,-0.02562788,-0.03954882,-0.01253467,0.04448708,-0.00278353,0.07839829,0.04778368,0.00523943,0.03973068,0.00224836,0.02944414,-0.1950215,0.04737497,0.09028405,-0.02089286,-0.03349358,0.0242363,0.03176744,-0.00341449,-0.06466817,0.05812005,-0.02027721,0.10133471,0.01768344,-0.02470332,0.05132361,-0.0010877,-0.03705935,-0.04511116,-0.0712097,0.05966628,-0.04355097,0.00101592,-0.02517948,0.02651996,0.01330373,0.00055919,0.04053103,-0.01529201,0.03401027,-0.000696,0.0259057,0.09563606,-0.01631431,-0.01669711,0.09244825,0.07779524,0.01614621,0.08144399,-0.04671244,0.00531478,0.03473217,0.01156463,0.01348399,-0.06085238,-0.02884458,-0.02534974,0.01559849,0.03260104,0.02046636,-0.010161,0.02867821,-0.04064407,0.0420687,-0.00847109,-0.06023978,-0.01747431,-0.07792343,-0.00365736,-0.0027965,-0.01894788,0.04411791,-0.0252473,0.02544482,-0.02658685,-0.02142485,0.04182265,0.05349346,0.02802702,0.08513907,-0.0170513,-0.08577292,-0.01393856,0.02479469,-0.01430805,-0.04531157,0.02909949,0.01057925,-0.06559632,0.01885175,-0.12122536,0.0038655,-0.02821053,-0.10640122,0.07953262,-0.06066826,0.00989754,-0.0109376,-0.04056093,-0.02495446,0.06542127,-0.04334937,-0.04490265,0.02865258,-0.03387259,0.07546009,0.06672169,-0.03248357,-0.01571195,-0.02334306,-0.0752724,-0.01754995,0.07621115,-0.04215068,-0.08034118,-0.04882275,0.0313019,-0.04081641,-0.03093462,0.03200765,-0.01803801,-0.01406256,0.02269245,0.06480542,-0.02335603,-0.00272899,-0.05569174,0.03949596,0.01652555,-0.03426455,-0.05945741,-0.02768701,-0.0051422,-0.006131,-0.06691884,0.01121681,-0.00695258,0.026098,0.02011601,-0.01633091,-0.01513839,0.00447996,-0.07242794,-0.03517962,0.02989708,-0.00782187,-0.01169148,0.07364039,-0.07039064,0.10517702,0.01149217,0.01932434,0.06164576,-0.00194186,-0.02520865,0.00645873,-0.02145291,0.04874147,0.02319096,0.00621508,-0.05360015,-0.01719452,-0.0300369,-0.02551468,-0.00179949,0.05511283,0.0513173,0.03900486,0.04469829,-0.00026003,-0.09846128,-0.10795532,-0.18463926,0.02450368,0.01868426,-0.07473899,0.0018009,-0.04351272,0.0451414,0.01090981,0.01963926,0.06540325,0.07501837,0.01447495,-0.0314998,-0.0255948,-0.01278589,0.03126998,0.06824684,-0.01504346,-0.01697353,0.03044456,0.02347947,0.00714262,-0.01139613,0.02030027,-0.03086068,-0.03832601,0.12814939,0.01754124,0.06347816,0.02494113,0.01920815,0.02906996,-0.05339693,-0.12093291,0.05721836,0.02473126,-0.05206291,0.04472246,-0.03172305,0.00768491,0.01045906,0.03126306,0.03338874,-0.02134603,-0.02298021,0.01216264,-0.02027341,-0.01736702,-0.01700912,0.00923323,0.00882002,0.06236824,0.00370818,0.04859273,-0.01891019,-0.01988872,-0.0512425,0.01954334,-0.03433203,0.01639199,0.00288168,-0.04035503,-0.00022698,-0.0702039,0.0025625,-0.0612926,-0.01764123,-0.02343338,0.02915891,-0.00779342,-0.02767043,0.14859794,0.03799751,-0.00974762,0.01539862,0.00272262,0.01897956,-0.01930076,0.01699856,-0.05979022,0.02995699,0.03701073,0.10764233,0.01125983,0.0260713,-0.04373178,0.00152773,-0.02823699,0.05604188,0.0031861,-0.05266412,-0.01356772,0.01824116,0.06505033,0.13093035,0.03021867,-0.29493237,0.02929197,-0.01902746,-0.00494228,0.00864187,0.0024462,0.0403463,0.00904065,-0.02489966,0.02101464,-0.03154583,0.00471441,-0.02313757,-0.06955422,-0.01332359,0.01893872,0.07850617,-0.00329454,0.07427485,0.05130028,0.02678889,-0.00070233,0.22522257,-0.00719504,0.04002751,-0.01475237,-0.03531105,0.04428966,0.06841703,-0.0022387,0.0180084,-0.01765488,0.05414649,-0.05104256,0.0158307,0.10236689,0.01400975,-0.01601038,0.03020697,-0.01693424,-0.03181568,-0.01088861,-0.1163898,0.00081195,0.08872277,-0.02843784,-0.02976354,-0.11677495,-0.03543373,0.01982524,-0.04702586,0.02405916,-0.02433969,0.01477994,0.05365341,0.02130565,0.02729486,-0.03981576,-0.00136913,-0.0330253,0.03318956,-0.06279296,0.10810433,0.10413992,0.01377068],"last_embed":{"hash":"b52223402ffa9b3f8d4175fcb0221cd7982a8ea756dc35b71113ea0907464b0b","tokens":422}}},"text":null,"length":0,"last_read":{"hash":"b52223402ffa9b3f8d4175fcb0221cd7982a8ea756dc35b71113ea0907464b0b","at":1757414817517},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{2}","lines":[153,154],"size":144,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{3}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12200372,-0.04081006,0.00339775,-0.02395646,0.0650573,-0.00683281,-0.01130785,-0.05628074,0.02117473,0.01016364,0.08046913,-0.07074499,0.02504997,-0.01067468,-0.01389496,-0.03402442,-0.01296493,-0.0088018,-0.03476885,-0.00164429,0.11298168,-0.01264187,0.04820335,-0.04625887,0.01522587,0.08647456,-0.01842329,-0.01525329,-0.01338672,-0.19106916,0.06159827,0.01713962,-0.00891728,-0.01892529,0.07683298,0.00181476,-0.00110494,0.03821851,-0.0071009,0.04426578,0.01508222,-0.00550368,0.00752746,0.02620992,0.00368237,-0.07973032,-0.02180596,-0.02030806,0.01561854,-0.02265686,-0.07150102,-0.02496131,-0.03461326,-0.01517917,0.04564349,-0.00157661,0.08099978,0.05133357,0.00417997,0.03517397,-0.00145999,0.02791356,-0.19289465,0.04955845,0.08723792,-0.01745117,-0.03362482,0.02311406,0.03446247,0.00229615,-0.06484172,0.06328527,-0.02119973,0.10053117,0.01548482,-0.02571251,0.05062819,-0.00047354,-0.04006876,-0.04819975,-0.06946621,0.06588459,-0.04348179,0.00121081,-0.02758935,0.02878864,0.00899507,-0.00083501,0.03857427,-0.01870615,0.03590392,-0.00137371,0.02063804,0.09680714,-0.01623725,-0.01695611,0.09378576,0.07693893,0.01072642,0.0804162,-0.04440298,0.00404494,0.03331478,0.01003029,0.01386467,-0.05922101,-0.03276105,-0.03058605,0.01268499,0.03282909,0.01529288,-0.00542814,0.0301551,-0.04009978,0.04007094,-0.00392572,-0.05923961,-0.02009846,-0.07867984,-0.00635624,-0.00241107,-0.01206022,0.04454857,-0.02435103,0.02201535,-0.03368265,-0.01794766,0.03859784,0.0532928,0.02855604,0.08598468,-0.01973906,-0.08943294,-0.01603873,0.01490399,-0.01798721,-0.04802346,0.03068277,0.01014883,-0.06157336,0.01698418,-0.11570465,0.00567034,-0.03051121,-0.10375746,0.07898138,-0.05623534,0.01336423,-0.00778943,-0.0431351,-0.02068811,0.06622479,-0.04023956,-0.04620105,0.02856675,-0.03638351,0.06910811,0.07239159,-0.03505513,-0.01789576,-0.02238103,-0.07212617,-0.02509059,0.0770429,-0.03937943,-0.07691074,-0.04587413,0.03138726,-0.03891086,-0.0315511,0.03173622,-0.01472104,-0.01698194,0.01793572,0.0686784,-0.02002808,-0.0022777,-0.06027402,0.03318566,0.01879321,-0.03066334,-0.05877173,-0.02630188,-0.00635466,-0.00896095,-0.0687233,0.00985458,-0.00708903,0.02609009,0.01462466,-0.02139441,-0.01050571,0.00997648,-0.06952657,-0.03630178,0.02683783,-0.00811491,-0.01462148,0.07364553,-0.07570174,0.10892499,0.00972654,0.02099372,0.05889716,-0.00931014,-0.02650053,0.0051387,-0.0247023,0.04568646,0.03214919,0.0076775,-0.05023346,-0.0116464,-0.02583488,-0.01944655,-0.00352298,0.05245889,0.05177754,0.03964169,0.04512626,0.00248023,-0.09354521,-0.11092713,-0.18673626,0.01905973,0.01453918,-0.0741989,0.00472034,-0.04433599,0.04790881,0.01650072,0.02468158,0.06938053,0.07383929,0.01338607,-0.02969209,-0.02323321,-0.00489752,0.0314275,0.06789187,-0.0124853,-0.01467086,0.03178118,0.0269988,0.00849681,-0.01828383,0.01553379,-0.02880817,-0.03756136,0.12189985,0.0234675,0.06510643,0.01929305,0.02346236,0.02883101,-0.05451149,-0.12480488,0.06118741,0.02171957,-0.04994807,0.04571835,-0.03733971,0.00651508,0.01322329,0.0267588,0.02782243,-0.02526921,-0.02344018,0.00697401,-0.01904789,-0.02391792,-0.02093469,0.00899487,0.00781324,0.06736125,-0.00032694,0.05150053,-0.01827663,-0.0198129,-0.05413274,0.02456462,-0.03314665,0.01317184,0.00215028,-0.03659582,0.00030512,-0.06489621,0.0010089,-0.06426408,-0.01582667,-0.02241309,0.03416651,-0.00104049,-0.02579045,0.14579275,0.03428572,-0.01565978,0.01573914,0.00427554,0.01481961,-0.02332582,0.01872533,-0.05913373,0.03243913,0.03379268,0.10474025,0.01421236,0.02813584,-0.04325311,-0.00081923,-0.02715133,0.05825488,0.00247584,-0.0545014,-0.01422173,0.01665766,0.0552892,0.13142844,0.02470677,-0.2930159,0.03223013,-0.01646752,0.00028695,0.00655126,0.00402846,0.03827131,0.00693608,-0.02355107,0.02522504,-0.03581724,0.00725236,-0.02185391,-0.07400307,-0.01108822,0.01447458,0.08227134,-0.00441203,0.07411165,0.05747316,0.02225867,0.00038371,0.22937918,-0.00209164,0.04202328,-0.01994966,-0.02982456,0.04411047,0.06563446,-0.00096598,0.01588224,-0.02140595,0.05018824,-0.05107331,0.01947047,0.09936099,0.01438033,-0.01908998,0.03286851,-0.01048137,-0.03111289,-0.00832516,-0.1171978,-0.00400208,0.08754798,-0.0245196,-0.02988,-0.1132714,-0.03326305,0.01703732,-0.0517826,0.02811148,-0.02316301,0.0139815,0.05528315,0.0234623,0.02915369,-0.04364569,-0.00814578,-0.02816161,0.03978449,-0.05920661,0.10534854,0.10574816,0.01134578],"last_embed":{"hash":"f1ffa3012bab120a80f568424e9290aa386a00f193bf6daceabd8140c9fd5710","tokens":352}}},"text":null,"length":0,"last_read":{"hash":"f1ffa3012bab120a80f568424e9290aa386a00f193bf6daceabd8140c9fd5710","at":1757414817569},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{3}","lines":[155,155],"size":74,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{4}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12070711,-0.04084236,0.00278687,-0.02679289,0.06196316,-0.00372844,-0.01380832,-0.05992777,0.016049,0.00556291,0.07663859,-0.07672802,0.02373091,-0.01029149,-0.00954161,-0.03607934,-0.01481967,-0.00739464,-0.02879488,-0.0017073,0.12010293,-0.01377603,0.04841402,-0.04963183,0.01354122,0.08588148,-0.01945728,-0.01523778,-0.01121727,-0.19019456,0.0603963,0.0057668,-0.00818563,-0.01842008,0.07314508,0.00010905,-0.0038403,0.04166805,-0.00594202,0.04492116,0.00947822,-0.01243372,0.0027621,0.02019317,0.00468422,-0.07926735,-0.02496942,-0.01998352,0.01757361,-0.02712168,-0.07392637,-0.02529467,-0.03725506,-0.01221007,0.04270863,-0.00093593,0.07623952,0.05389861,0.00398258,0.0344209,-0.00387249,0.0278814,-0.19077,0.05098648,0.08290976,-0.01577345,-0.03577493,0.0211769,0.03618329,0.00795098,-0.06645717,0.0625488,-0.02239959,0.09831546,0.01309523,-0.02381364,0.04922119,-0.00093817,-0.03403318,-0.04721616,-0.07086468,0.06493559,-0.04432056,-0.00139076,-0.0293729,0.0257454,0.01229378,0.00323258,0.0372883,-0.01573643,0.03678376,-0.00106889,0.02241452,0.09598479,-0.01599525,-0.01976161,0.09250279,0.08466356,0.01056661,0.0820298,-0.0479792,-0.00044703,0.02684665,0.00881744,0.0180333,-0.05939983,-0.02939268,-0.02811372,0.01634935,0.03173729,0.0177569,-0.00794346,0.0211356,-0.04315398,0.0403883,-0.00026915,-0.06067511,-0.01594091,-0.07781679,-0.00975506,0.00100477,-0.01862575,0.04528124,-0.02441977,0.02019051,-0.03180656,-0.0143781,0.03961,0.05287798,0.0349617,0.08001114,-0.01977165,-0.0884087,-0.01993715,0.02040026,-0.01298353,-0.04857839,0.03745423,0.00807736,-0.06748547,0.0151526,-0.10955665,0.00438582,-0.02662633,-0.10126673,0.08113726,-0.05890337,0.01322134,-0.01002461,-0.0425426,-0.02292225,0.06618563,-0.04107789,-0.04376232,0.0330805,-0.03661428,0.06461577,0.06896372,-0.03265666,-0.02177338,-0.01758629,-0.07318007,-0.02178718,0.07171701,-0.04077873,-0.08027864,-0.04882352,0.02998126,-0.03783889,-0.03058119,0.02928815,-0.01443508,-0.01003348,0.02197944,0.06781848,-0.02077164,-0.00297668,-0.05991165,0.02748476,0.01490477,-0.03602774,-0.05919837,-0.03052984,-0.00553942,-0.00957842,-0.06779055,0.01170809,-0.00904289,0.02592938,0.01429251,-0.02488578,-0.00499105,0.00436546,-0.07222018,-0.03515005,0.02762863,-0.00524306,-0.01279116,0.0682734,-0.07916848,0.10714145,0.00887188,0.02117644,0.06011831,-0.00594299,-0.02471377,0.00437765,-0.02654174,0.04737104,0.03193574,0.00362386,-0.05641537,-0.01345613,-0.02763393,-0.01451077,-0.00200798,0.05347609,0.04936501,0.04366348,0.03892514,0.00260921,-0.09645469,-0.1077603,-0.18930914,0.02726421,0.00837004,-0.07648253,0.00398288,-0.04594113,0.04866895,0.02278799,0.02347268,0.06982458,0.07649083,0.0116701,-0.03309486,-0.01843889,-0.00617809,0.02811877,0.06769188,-0.01194552,-0.01044667,0.03066587,0.02953836,0.00598258,-0.01178109,0.01054027,-0.03430485,-0.03317812,0.12675732,0.02311304,0.06962255,0.02026791,0.01750298,0.03339934,-0.05513246,-0.12678929,0.0613331,0.01675002,-0.05247932,0.05056343,-0.03730724,0.00717498,0.01218919,0.02476957,0.03443762,-0.02113517,-0.0173053,0.00911688,-0.02307174,-0.01834399,-0.0218249,0.00757753,0.01056462,0.0647696,0.00399659,0.05562799,-0.02144508,-0.02460486,-0.05355871,0.01691754,-0.0294396,0.01731845,0.00415609,-0.03473452,-0.00400961,-0.06652225,0.00401114,-0.05509933,-0.02053984,-0.02336654,0.03869082,-0.00099282,-0.0259069,0.14935888,0.03244558,-0.0221289,0.02284489,0.00476429,0.02276496,-0.02005544,0.01796845,-0.06188658,0.03828286,0.03092868,0.10365275,0.01424529,0.03159783,-0.03833141,0.00411738,-0.02137371,0.05915102,-0.00231452,-0.05561591,-0.01405683,0.02064908,0.05768514,0.12834598,0.02130661,-0.29591715,0.03222857,-0.01541919,0.00820272,0.00615495,0.00080111,0.03665486,0.0066947,-0.02258828,0.01940535,-0.03897361,0.00919776,-0.014233,-0.0663398,-0.01269671,0.01709799,0.08232927,-0.00481647,0.07920222,0.05818625,0.02132591,0.00215556,0.2306184,-0.00557057,0.03653987,-0.01791624,-0.02741976,0.04445972,0.07465418,-0.00015992,0.02253423,-0.02326046,0.05193976,-0.0501933,0.01805975,0.09716121,0.01650603,-0.01556446,0.03504696,-0.01028009,-0.03376162,-0.01140039,-0.11678267,0.00275893,0.08383439,-0.02820207,-0.02580381,-0.10863201,-0.03053197,0.01618754,-0.04380933,0.02708021,-0.02231834,0.01238304,0.05492176,0.027358,0.0281383,-0.04507862,-0.01100173,-0.02711259,0.03792139,-0.05387928,0.10605478,0.10046104,0.00761219],"last_embed":{"hash":"58806e624849ab8f7a36621a8a01cb9cd123d7f6a10d1bd4c3de70afcf6de36e","tokens":336}}},"text":null,"length":0,"last_read":{"hash":"58806e624849ab8f7a36621a8a01cb9cd123d7f6a10d1bd4c3de70afcf6de36e","at":1757414817609},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.3　多维数组](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3)#{4}","lines":[156,157],"size":58,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12173076,-0.04044314,0.00544866,-0.02519313,0.06489839,-0.01592601,-0.01865806,-0.05710635,0.02760722,0.01304519,0.06989865,-0.07227691,0.02605967,-0.00940865,-0.01397874,-0.03763019,-0.0298151,0.00031427,-0.0293392,0.01137344,0.11771754,-0.01427667,0.0547209,-0.04493965,0.02460888,0.09403592,-0.0296087,-0.02196729,-0.00969071,-0.19875214,0.06266844,0.02198593,-0.01294525,-0.01668517,0.07116059,-0.00344405,0.00122735,0.03570236,-0.01251473,0.05375744,0.01946465,0.00110371,0.00635143,0.02242628,0.00354691,-0.07757309,-0.02556364,-0.01849791,0.01691585,-0.02785936,-0.07002506,-0.02374991,-0.04277389,-0.0095933,0.04154148,0.00605291,0.08017653,0.05069742,0.00804047,0.03160203,0.0002147,0.02767557,-0.19450437,0.05333237,0.0892489,-0.01980649,-0.03393068,0.02789042,0.0318705,0.00228157,-0.0584288,0.05793406,-0.02130299,0.10004028,0.01889203,-0.02836725,0.04968983,-0.00439297,-0.03885363,-0.04490874,-0.07091586,0.06827365,-0.03934775,0.0053203,-0.03020867,0.03148214,0.00712888,-0.00259658,0.03521242,-0.01643189,0.0318469,-0.01076519,0.02256857,0.10709397,-0.02264115,-0.01826475,0.08882336,0.07217572,0.01475147,0.07637791,-0.05204605,0.01086836,0.02892453,0.01910564,0.01615181,-0.05134444,-0.02321183,-0.02198234,0.01167807,0.02798159,0.02271268,-0.00862682,0.02105323,-0.0445224,0.03970303,-0.0148807,-0.0716666,-0.01843467,-0.08207838,-0.00133705,-0.00754849,-0.01341013,0.03673339,-0.01260038,0.03042592,-0.03187134,-0.02690047,0.03709535,0.05906443,0.02616382,0.09084284,-0.00872778,-0.07888956,-0.01729739,0.01830543,-0.0143372,-0.05415574,0.01707144,0.01758101,-0.06369644,0.01417451,-0.11709074,0.00756415,-0.02960219,-0.10686824,0.07634634,-0.06152635,0.00694118,-0.0149822,-0.03304266,-0.02169725,0.06305378,-0.02828157,-0.0515519,0.02720529,-0.03211974,0.05426319,0.06580633,-0.03279578,-0.02005479,-0.03192199,-0.07256185,-0.02845296,0.0670891,-0.04272472,-0.07293641,-0.04102111,0.03064142,-0.04199822,-0.02850708,0.04495635,-0.01950952,-0.01333968,0.02046041,0.06482901,-0.01091062,-0.00713703,-0.05700456,0.03508397,0.0203002,-0.0296328,-0.0537966,-0.03369832,-0.00885231,0.00765535,-0.06230475,0.00873403,-0.01216991,0.03292501,0.01406506,-0.01796336,-0.00580407,0.00515023,-0.06547431,-0.04547228,0.02579175,-0.00971577,-0.01057329,0.06457549,-0.06738381,0.10432813,0.01504518,0.01069291,0.05455672,-0.01630549,-0.02959901,0.00425266,-0.01895031,0.04052217,0.03676024,0.00935047,-0.05794613,-0.01418092,-0.03119997,-0.0197323,-0.00994101,0.05875821,0.05663246,0.0392096,0.04634647,0.00055801,-0.09735451,-0.10810773,-0.18243286,0.02973551,0.0140491,-0.07318178,0.01087774,-0.04880906,0.04091646,0.01875055,0.02365137,0.06233511,0.07665138,0.0159076,-0.03061653,-0.0302933,-0.00683071,0.03013763,0.06720879,-0.02054948,-0.02232544,0.03324561,0.02237495,0.0114412,-0.01080437,0.02234505,-0.02589352,-0.03159222,0.11970566,0.01690649,0.05820681,0.03312828,0.02566031,0.02679158,-0.05373724,-0.11960837,0.04985561,0.03228516,-0.04776369,0.05283803,-0.03695254,0.017915,0.01403738,0.03305933,0.03268618,-0.02351204,-0.01872253,0.00933257,-0.01848401,-0.01787068,-0.02782195,0.00982314,0.0057606,0.06449635,0.00389126,0.05622717,-0.01755424,-0.02305404,-0.04404624,0.01330777,-0.03126085,0.0162993,0.00741044,-0.03617502,0.00704771,-0.06869023,0.00189005,-0.06408128,-0.0197168,-0.02142058,0.0278757,-0.00581092,-0.02756244,0.14784579,0.03048654,-0.01014385,0.01291215,0.00198514,0.01399655,-0.01797565,0.01410702,-0.05678943,0.03523847,0.02961433,0.10201465,0.01424277,0.02651139,-0.05047024,0.00388454,-0.02550029,0.05834341,0.00097427,-0.05305103,-0.01351773,0.01973685,0.06415239,0.12742335,0.03117943,-0.29588643,0.03198829,-0.00987463,-0.00669077,0.00056213,0.00239931,0.04230774,-0.00191131,-0.01865263,0.03067712,-0.03447841,0.00540127,-0.01580917,-0.07661535,-0.01823652,0.02634102,0.08652859,-0.00787731,0.07676,0.04913676,0.01768735,0.00163254,0.23143713,-0.01773003,0.05248554,-0.02335658,-0.03612472,0.03750274,0.06924151,0.00024143,0.01310579,-0.01568565,0.05304722,-0.0537692,0.00716697,0.10267329,0.01544362,-0.0211347,0.04539852,-0.01674718,-0.02066709,-0.00430756,-0.11894372,-0.00080116,0.0883813,-0.02816343,-0.02861067,-0.11635943,-0.02084294,0.01714549,-0.05237456,0.03091126,-0.0233809,0.01386947,0.04352205,0.01353502,0.0247501,-0.04006073,-0.0003802,-0.02553358,0.02899481,-0.05806567,0.09923036,0.10599797,0.01002273],"last_embed":{"hash":"a002a364c2198d67b967a9b892ec17c873bb2839def3420eb485368067f5bcba","tokens":388}}},"text":null,"length":0,"last_read":{"hash":"a002a364c2198d67b967a9b892ec17c873bb2839def3420eb485368067f5bcba","at":1757414817653},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)","lines":[158,223],"size":4979,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"在C语言中我们可以通过struct关键字定义结构类型，结构中的字段占据连续的内存空间，每个结构体占用的内存大小都相同，因此可以很容易地定义结构数组。和C语言一样，在NumPy中也很容易对这种结构数组进行操作。只要NumPy中的结构定义和C语言中的定义相同，NumPy就可以很方便地读取C语言的结构数组的二进制数据，转换为NumPy的结构数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":3},{"title":"假设我们需要定义一个结构数组，它的每个元素都有name, age和weight字段。在NumPy中可以如下定义：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":5},{"title":"**import** **numpy** **as** **np**persontype = np.dtype({ 'names':'name', 'age', 'weight', 'formats':'S32','i', 'f'})a = np.array((\"Zhang\",32,75.5),(\"Wang\",24,65.2), dtype=persontype)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":7},{"title":"我们先创建一个dtype对象persontype，通过其字典参数描述结构类型的各个字段。字典有两个关键字：names，formats。每个关键字对应的值都是一个列表。names定义结构中的每个字段名，而formats则定义每个字段的类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":9},{"title":"**S32** : 32个字节的字符串类型，由于结构中的每个元素的大小必须固定，因此需要指定字符串的长度","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":11},{"title":"**i** : 32bit的整数类型，相当于np.int32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":13},{"title":"**f** : 32bit的单精度浮点数类型，相当于np.float32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":14},{"title":"然后我们调用array函数创建数组，通过关键字参数 dtype=persontype， 指定所创建的数组的元素类型为结构persontype。运行上面程序之后，我们可以在IPython中执行如下的语句查看数组a的元素类型","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":16},{"title":"**>>>** a.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":18},{"title":"这里我们看到了另外一种描述结构类型的方法： 一个包含多个组元的列表，其中形如 (字段名, 类型描述) 的组元描述了结构中的每个字段。类型描述前面为我们添加了 '|', '<' 等字符，这些字符用来描述字段值的字节顺序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":20},{"title":"**|** : 忽视字节顺序","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":22},{"title":"**<** : 低位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":24},{"title":"**>** : 高位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":25},{"title":"结构数组的存取方式和一般数组相同，通过下标能够取得其中的元素，注意元素的值看上去像是组元，实际上它是一个结构：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":27},{"title":"**>>>** a0('Zhang', 32, 75.5)**>>>** a0.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":29},{"title":"a0是一个结构元素，它和数组a共享内存数据，因此可以通过修改它的字段，改变原始数组中的对应字段：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":31},{"title":"**>>>** c = a1**>>>** c\"name\" = \"Li\"**>>>** a1\"name\"\"Li\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":33},{"title":"结构像字典一样可以通过字符串下标获取其对应的字段值：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":35},{"title":"**>>>** a0\"name\"'Zhang'","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":37},{"title":"我们不但可以获得结构元素的某个字段，还可以直接获得结构数组的字段，它返回的是原始数组的视图，因此可以通过修改b0改变a0\"age\"：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":39},{"title":"**>>>** b=a:\"age\" _# 或者a\"age\"_**>>>** barray(32, 24)**>>>** b0 = 40**>>>** a0\"age\"40","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":41},{"title":"通过调用a.tostring或者a.tofile方法，可以直接输出数组a的二进制形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":43},{"title":"**>>>** a.tofile(\"test.bin\")","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":45},{"title":"利用下面的C语言程序可以将test.bin文件中的数据读取出来。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":47},{"title":"内存对齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":49},{"title":"C语言的结构体为了内存寻址方便，会自动的添加一些填充用的字节，这叫做内存对齐。例如如果把下面的name32改为name30的话，由于内存对齐问题，在name和age中间会填补两个字节，最终的结构体大小不会改变。因此如果numpy中的所配置的内存大小不符合C语言的对齐规范的话，将会出现数据错位。为了解决这个问题，在创建dtype对象时，可以传递参数align=True，这样numpy的结构数组的内存对齐和C语言的结构体就一致了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":51},{"title":"#include <stdio.h> **struct** person{ char name32; int age; float weight;}; **struct** person p2; void main (){ FILE *fp; int i; fp=fopen(\"test.bin\",\"rb\"); fread(p, **sizeof**(**struct** person), 2, fp); fclose(fp); **for**(i=0;i<2;i++) printf(\"%s %d %f**n**\", pi.name, pi.age, pi.weight); getchar();}","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":53},{"title":"结构类型中可以包括其它的结构类型，下面的语句创建一个有一个字段f1的结构，f1的值是另外一个结构，它有字段f2，其类型为16bit整数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":55},{"title":"**>>>** np.dtype(('f1', ('f2', np.int16)))dtype(('f1', ('f2', '<i2')))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":57},{"title":"当某个字段类型为数组时，用组元的第三个参数表示，下面描述的f1字段是一个shape为(2,3)的双精度浮点数组:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":59},{"title":"**>>>** np.dtype(('f0', 'i4'), ('f1', 'f8', (2, 3)))dtype(('f0', '<i4'), ('f1', '<f8', (2, 3)))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":61},{"title":"用下面的字典参数也可以定义结构类型，字典的关键字为结构中字段名，值为字段的类型描述，但是由于字典的关键字是没有顺序的，因此字段的顺序需要在类型描述中给出，类型描述是一个组元，它的第二个值给出字段的字节为单位的偏移量，例如age字段的偏移量为25个字节：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":63},{"title":"**>>>** np.dtype({'surname':('S25',0),'age':(np.uint8,25)})dtype(('surname', '|S25'), ('age', '|u1'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":65}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11613891,-0.03275024,-0.00185444,-0.02126216,0.0607143,-0.01303838,-0.00737101,-0.05807073,0.03191897,0.01229208,0.06982309,-0.06815421,0.02728346,-0.00782639,-0.02047662,-0.02925411,-0.02487957,-0.00120959,-0.03421967,0.00964435,0.11523588,-0.02163181,0.04664456,-0.04914046,0.03029265,0.09339767,-0.02694466,-0.02577164,-0.00861604,-0.19909024,0.05960999,0.02686936,-0.0148352,-0.01802906,0.07205091,0.00172286,0.0012143,0.02482108,-0.0166327,0.04809393,0.01976731,-0.00012447,0.01279052,0.01620518,0.00601478,-0.07482964,-0.02532458,-0.0191456,0.02084954,-0.02600705,-0.06523871,-0.02582761,-0.04956613,-0.00376552,0.02938575,0.0084564,0.07449605,0.04371342,0.00034685,0.03453247,0.0104408,0.03275141,-0.19277586,0.05315088,0.08314913,-0.02475304,-0.0283339,0.02014317,0.0317782,0.00687704,-0.06650704,0.0536338,-0.02146029,0.10030992,0.01733657,-0.02559058,0.05168885,-0.00344489,-0.03721044,-0.04357168,-0.07672215,0.06141401,-0.04546799,0.00701256,-0.0310326,0.03687517,0.00768189,-0.00316296,0.03427052,-0.01079779,0.02513932,-0.00972432,0.01799422,0.10146745,-0.02604892,-0.02391624,0.0822463,0.07656731,0.00859959,0.0775995,-0.0518507,0.01202074,0.01622515,0.02073576,0.01586841,-0.04525542,-0.02462236,-0.01586867,0.00894614,0.02773005,0.0239807,-0.02236549,0.02614677,-0.04619009,0.03084756,-0.01062634,-0.06232093,-0.00845851,-0.07750115,-0.01065664,-0.00420454,-0.01378651,0.04033297,-0.01592641,0.03371323,-0.03228825,-0.02238547,0.04512931,0.05819782,0.02989878,0.09271926,-0.01418647,-0.06794555,-0.01113733,0.02271114,-0.01523694,-0.053382,0.022086,0.01242742,-0.07059585,0.01405775,-0.1083365,0.00289819,-0.02423226,-0.11155985,0.07079574,-0.06489306,0.00572631,-0.01473477,-0.04402971,-0.01479701,0.06593095,-0.03085957,-0.04529921,0.02889342,-0.02148395,0.05777074,0.06622458,-0.04271876,-0.01326787,-0.03603859,-0.07589397,-0.02291431,0.06821293,-0.04550575,-0.07252106,-0.0420543,0.03100831,-0.0441946,-0.02479478,0.03410513,-0.02524981,-0.013587,0.02512705,0.06415766,-0.01085718,-0.00419433,-0.04312967,0.03289677,0.01514459,-0.03259999,-0.04927542,-0.03974852,-0.01090221,-0.00598758,-0.06812157,0.00410363,-0.00467904,0.03167789,0.00189822,-0.0188143,0.00236681,0.01285885,-0.05961629,-0.04663008,0.0288971,-0.00604871,-0.01645537,0.0686816,-0.07176884,0.10586011,0.01273744,0.01243732,0.06166151,-0.00702182,-0.03627895,0.00081677,-0.01581118,0.04317997,0.03693967,0.01639429,-0.05103809,-0.0183556,-0.03926946,-0.02000819,-0.00630048,0.05877123,0.05898194,0.03544512,0.04969361,0.0083342,-0.09960645,-0.11098841,-0.19019386,0.02881677,0.01213704,-0.07173471,0.01806277,-0.04690628,0.03581532,0.02393586,0.02365736,0.05854519,0.07508349,0.01833077,-0.03757533,-0.02107717,-0.00673407,0.03161133,0.08038771,-0.02074297,-0.0222561,0.02713591,0.02980432,0.00400986,-0.01103081,0.02445431,-0.03578402,-0.03617404,0.11199258,0.01217523,0.06590457,0.03157166,0.02482832,0.02808202,-0.04801555,-0.12656806,0.05988836,0.02378292,-0.0483437,0.05288251,-0.03508595,0.01521891,0.01586903,0.02701578,0.02970618,-0.02317245,-0.0117026,0.01436635,-0.025986,-0.00793418,-0.02569516,0.00812186,0.00713847,0.06322804,-0.00744757,0.05189755,-0.01451322,-0.02567914,-0.04182458,0.01166033,-0.02466666,0.01454545,0.00366114,-0.03998002,0.01063242,-0.06071121,-0.00041263,-0.06667653,-0.01742158,-0.01778222,0.02274876,-0.00799157,-0.03880332,0.1529554,0.032789,-0.00469916,0.01174592,-0.00219601,0.01156495,-0.01862164,0.01791951,-0.05745121,0.04972966,0.04216808,0.09567492,-0.00034978,0.02530771,-0.04628333,0.01029072,-0.02421903,0.0540146,-0.00005564,-0.042124,-0.01026384,0.0171915,0.05541955,0.12783433,0.02489055,-0.30152884,0.03760711,-0.0077349,-0.01090602,0.00427755,-0.00649095,0.04317331,0.00473711,-0.01813449,0.02274741,-0.03378978,0.00604981,-0.01716659,-0.08433019,-0.01525255,0.02565159,0.07785351,-0.00831994,0.07571202,0.05273835,0.01542612,0.00482347,0.2416188,-0.01365345,0.05603982,-0.01729835,-0.03429834,0.04220775,0.07283369,-0.00193784,0.01875577,-0.01909603,0.05111688,-0.05078733,0.005568,0.1044473,0.01463172,-0.0109568,0.03957306,-0.02142701,-0.0277923,-0.00227132,-0.11998472,-0.0024805,0.0856714,-0.02693733,-0.02870285,-0.11390783,-0.02582673,0.01399198,-0.04713426,0.02993911,-0.01945832,0.01680489,0.04573917,0.01293969,0.01915339,-0.03456634,0.00164519,-0.02826997,0.02838331,-0.04923149,0.10106207,0.11102051,0.01959412],"last_embed":{"hash":"0ee1c0df03181756666a3627334494935f51b3467561f26831685e2c2d5adb5b","tokens":464}}},"text":null,"length":0,"last_read":{"hash":"0ee1c0df03181756666a3627334494935f51b3467561f26831685e2c2d5adb5b","at":1757414817709},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{1}","lines":[160,167],"size":800,"outlinks":[{"title":"在C语言中我们可以通过struct关键字定义结构类型，结构中的字段占据连续的内存空间，每个结构体占用的内存大小都相同，因此可以很容易地定义结构数组。和C语言一样，在NumPy中也很容易对这种结构数组进行操作。只要NumPy中的结构定义和C语言中的定义相同，NumPy就可以很方便地读取C语言的结构数组的二进制数据，转换为NumPy的结构数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1},{"title":"假设我们需要定义一个结构数组，它的每个元素都有name, age和weight字段。在NumPy中可以如下定义：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":3},{"title":"**import** **numpy** **as** **np**persontype = np.dtype({ 'names':'name', 'age', 'weight', 'formats':'S32','i', 'f'})a = np.array((\"Zhang\",32,75.5),(\"Wang\",24,65.2), dtype=persontype)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":5},{"title":"我们先创建一个dtype对象persontype，通过其字典参数描述结构类型的各个字段。字典有两个关键字：names，formats。每个关键字对应的值都是一个列表。names定义结构中的每个字段名，而formats则定义每个字段的类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":7}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{2}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.1195657,-0.04368781,0.00485516,-0.02689731,0.0675922,-0.01052407,-0.00887535,-0.05765509,0.02207007,0.01386454,0.07957798,-0.06453468,0.0270134,-0.00826797,-0.02183184,-0.03278264,-0.01381262,-0.00317527,-0.02915513,0.01046803,0.11889735,-0.01424916,0.05201416,-0.05237121,0.0196899,0.08969357,-0.02091139,-0.02424452,-0.02006879,-0.19444759,0.05632675,0.01947274,-0.01038705,-0.01730432,0.0769251,-0.00214961,-0.00151051,0.03808777,-0.01076691,0.04393893,0.0094754,-0.00759077,0.01381682,0.02240959,0.0001273,-0.07947452,-0.02208403,-0.01688381,0.02115265,-0.02442982,-0.07482802,-0.02372712,-0.04382012,-0.01138757,0.04345065,0.00005975,0.0804574,0.05317096,0.00748717,0.03544878,0.00074111,0.02839588,-0.19388989,0.05266536,0.0821318,-0.02244162,-0.03122386,0.02387917,0.03713221,0.00374624,-0.06177523,0.06380539,-0.01438945,0.1001485,0.01426036,-0.0204065,0.04940143,0.00166341,-0.03771863,-0.0479129,-0.07828274,0.06322414,-0.03777855,0.00050522,-0.03019364,0.03259781,0.0082525,0.00141836,0.04533181,-0.01504088,0.02631462,-0.00100737,0.01890433,0.09567756,-0.03080246,-0.02388516,0.09506781,0.07753588,0.00674826,0.07933424,-0.04317833,0.00850276,0.02572112,0.01468116,0.00905155,-0.0588909,-0.0336282,-0.02247304,0.00794765,0.03012992,0.01719731,-0.00727025,0.02517543,-0.03892299,0.03939585,-0.00934863,-0.05747073,-0.02349256,-0.08046425,-0.00273908,-0.00738679,-0.01069816,0.041054,-0.01873221,0.02578611,-0.03500797,-0.01997672,0.03114398,0.05864503,0.02929468,0.08668143,-0.02167425,-0.08531199,-0.01450226,0.02000733,-0.01187312,-0.04678732,0.02535609,0.01620398,-0.06645133,0.02004728,-0.11353518,0.0013979,-0.01995741,-0.10892763,0.0781742,-0.05903016,0.00964523,-0.00976576,-0.03545506,-0.01955245,0.06966722,-0.03544801,-0.03938857,0.02985873,-0.03245956,0.07280413,0.07168973,-0.03401822,-0.01548739,-0.0249645,-0.07544285,-0.02211769,0.07257706,-0.04363751,-0.07568835,-0.04865344,0.02883405,-0.04058138,-0.03317199,0.03760024,-0.01894416,-0.01293272,0.02408505,0.06801412,-0.01546154,0.0017434,-0.05275296,0.0278946,0.01235527,-0.03095915,-0.05222142,-0.03134663,-0.00883804,0.00115427,-0.06677572,0.00584957,-0.01030621,0.03264762,0.01375267,-0.02281936,-0.0090558,0.00926869,-0.0666107,-0.03395003,0.02269258,-0.01575932,-0.01694462,0.0725265,-0.07565466,0.11456902,0.01537617,0.01678519,0.0668984,-0.00397024,-0.02701019,0.00307649,-0.02242238,0.04268926,0.03350499,0.00419805,-0.05446237,-0.006861,-0.02750273,-0.02355824,-0.00045641,0.05545722,0.0501907,0.03685117,0.04721791,0.001363,-0.10077602,-0.11186153,-0.1887528,0.02818377,0.0108689,-0.07350663,0.00814628,-0.04186079,0.04585789,0.01685292,0.02398406,0.0660408,0.06888516,0.00862817,-0.03240392,-0.02910975,-0.00673693,0.03224161,0.06978885,-0.02314366,-0.01661872,0.02755668,0.02492333,0.00979773,-0.01562559,0.0259628,-0.02990723,-0.03782834,0.11896819,0.02153115,0.06537473,0.02102964,0.02225261,0.03503879,-0.04951858,-0.11532463,0.05310236,0.02215717,-0.05330554,0.05059923,-0.03342468,0.01012106,0.01602324,0.02566261,0.02784515,-0.02905461,-0.01599554,0.00492186,-0.01493192,-0.01981409,-0.01654205,0.00830401,0.0041136,0.0651824,-0.00251006,0.05116377,-0.02173352,-0.01589214,-0.04644615,0.02223417,-0.03164532,0.01416583,-0.0009464,-0.03920003,0.00480034,-0.0660221,-0.00109493,-0.06330629,-0.01999475,-0.02182234,0.03070339,-0.00175052,-0.03040227,0.14348911,0.03253207,-0.0156661,0.0146016,0.00655907,0.01396731,-0.0216098,0.01599602,-0.05922761,0.03810903,0.03833329,0.10888457,0.01398267,0.02517895,-0.04026062,0.00397343,-0.01980354,0.05455893,0.00186792,-0.05289204,-0.0086698,0.01132842,0.06073894,0.12765267,0.01899295,-0.29427093,0.03651096,-0.01116284,0.00313235,-0.000162,-0.00306404,0.03825393,0.00385967,-0.02345364,0.02850639,-0.03906637,0.00471846,-0.01503962,-0.0835152,-0.01716916,0.02359734,0.07798319,-0.00178856,0.07205792,0.04839661,0.01757342,0.00235012,0.23005931,-0.00302812,0.04932366,-0.01347619,-0.02968776,0.03723668,0.06742032,0.00225264,0.0150029,-0.02062894,0.0477469,-0.05062759,0.01422229,0.10079777,0.0096897,-0.01766271,0.03333725,-0.01542633,-0.02358488,-0.01045435,-0.11972286,-0.0022644,0.09007451,-0.02628279,-0.02668736,-0.11584562,-0.0311184,0.01878527,-0.05012454,0.02910705,-0.0240765,0.01900176,0.0498884,0.01956538,0.02374042,-0.0446013,-0.00713809,-0.03087298,0.03739782,-0.05817525,0.10199595,0.10424801,0.01414078],"last_embed":{"hash":"863f9fd1d14cbfd9e833f6e5295421b24d935b7da5161f264bf1919e2a2d8b2a","tokens":335}}},"text":null,"length":0,"last_read":{"hash":"863f9fd1d14cbfd9e833f6e5295421b24d935b7da5161f264bf1919e2a2d8b2a","at":1757414817770},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{2}","lines":[168,169],"size":121,"outlinks":[{"title":"**S32** : 32个字节的字符串类型，由于结构中的每个元素的大小必须固定，因此需要指定字符串的长度","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{3}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12470022,-0.04359651,0.00432594,-0.03117955,0.0691158,-0.01054281,-0.00773032,-0.05792235,0.02157956,0.01160605,0.07857385,-0.07197821,0.02616398,-0.00514658,-0.01935949,-0.02945058,-0.01896919,-0.01316285,-0.02409794,0.00748814,0.11845253,-0.01767387,0.05313126,-0.04914874,0.00861291,0.09185214,-0.01855547,-0.02339104,-0.00794892,-0.19037667,0.0643655,0.02492584,-0.01166027,-0.02031856,0.0772823,-0.00189174,-0.00220721,0.03556758,-0.00385642,0.04446909,0.00645935,-0.00514251,0.01063411,0.02502244,0.00702158,-0.07625887,-0.0281318,-0.01285531,0.01434522,-0.02219062,-0.07100984,-0.01754147,-0.03381211,-0.0119659,0.04090048,0.00149217,0.08155289,0.05381861,0.00781397,0.04016434,0.00279884,0.02562138,-0.19332437,0.05083035,0.08265273,-0.01577001,-0.03488477,0.02411604,0.0392402,0.00700802,-0.06137478,0.06318264,-0.01970276,0.09542345,0.0142859,-0.02340625,0.05073667,0.00095529,-0.03525008,-0.04808499,-0.07507431,0.06929871,-0.03845538,0.00110521,-0.02711733,0.02522369,0.0082247,0.00307981,0.04183489,-0.01656861,0.02991373,-0.00054566,0.01646709,0.09420789,-0.01831862,-0.02197932,0.09849455,0.06709749,0.01189429,0.07842579,-0.04566182,0.00294455,0.02382246,0.01211915,0.00804432,-0.05885558,-0.03715676,-0.02730349,0.0142315,0.02568081,0.00943692,-0.00214822,0.03540805,-0.0385734,0.03845746,-0.00574492,-0.05613159,-0.02543383,-0.08051321,0.00111576,-0.00636892,-0.00550334,0.0400129,-0.02221813,0.0224584,-0.03708517,-0.01611188,0.02760391,0.06032024,0.03221219,0.08646219,-0.02050757,-0.08437867,-0.01621763,0.01706341,-0.01590673,-0.04956026,0.02720831,0.01589988,-0.06152593,0.01603952,-0.11147694,0.00389154,-0.02237637,-0.10349397,0.07987709,-0.05620228,0.01302903,-0.00669322,-0.03882534,-0.01729986,0.07071687,-0.04037104,-0.04796978,0.02553457,-0.03506329,0.06920322,0.07374555,-0.0373789,-0.01643622,-0.02244169,-0.07210682,-0.02451254,0.06944034,-0.04248848,-0.07660266,-0.04281803,0.03279439,-0.03570785,-0.03764001,0.03714438,-0.01943765,-0.01242891,0.02441238,0.07241253,-0.02325222,0.00358921,-0.05694623,0.02510103,0.0181149,-0.03126958,-0.06075839,-0.03104881,-0.00781089,0.00049387,-0.06736118,0.00198165,-0.01484605,0.0262909,0.01454964,-0.01859014,-0.0100819,0.01016206,-0.06133945,-0.03328949,0.01954226,-0.00973942,-0.02305816,0.06706221,-0.07788111,0.11459371,0.01046965,0.01574379,0.05834236,-0.00994592,-0.02626392,0.00924033,-0.02221556,0.04173758,0.0366626,0.00796224,-0.05037131,-0.00834501,-0.0224776,-0.01988269,-0.00793775,0.05626939,0.05262387,0.03734744,0.04631478,-0.00642919,-0.09751207,-0.11036838,-0.18964367,0.02107137,0.00755246,-0.0721899,0.00327139,-0.04716288,0.0526516,0.02029053,0.0297692,0.0755492,0.07011749,0.01195692,-0.03360071,-0.02555631,-0.00265276,0.03048318,0.07371598,-0.01809587,-0.01862508,0.029606,0.02636088,0.01419489,-0.02328284,0.02083903,-0.03047344,-0.03349606,0.11986575,0.02661845,0.06331621,0.02420712,0.0218528,0.03710253,-0.05046779,-0.12315001,0.05623066,0.01828431,-0.05067743,0.05278596,-0.0331349,0.00662913,0.00938454,0.02632103,0.02611928,-0.02813437,-0.01940805,0.00716002,-0.02070079,-0.02663857,-0.02271638,0.0122131,-0.00008099,0.06427513,-0.00103336,0.05990372,-0.02053094,-0.01951935,-0.04864771,0.01862023,-0.03357034,0.01614499,0.00008582,-0.03865059,-0.00227614,-0.06206394,0.00291989,-0.06135236,-0.02033364,-0.02181431,0.03602175,0.00142269,-0.03180823,0.14636387,0.03026002,-0.01701698,0.02325164,0.00256378,0.01531526,-0.0232194,0.01857412,-0.06140237,0.03281463,0.03304653,0.10527725,0.01780572,0.02132809,-0.04514991,0.0052464,-0.0290728,0.05723556,-0.00224739,-0.05053293,-0.00669049,0.01661483,0.05193885,0.12350762,0.0185231,-0.29205397,0.03636798,-0.01077734,0.0004273,-0.00035454,-0.00211907,0.04083586,-0.00103518,-0.02777632,0.02510866,-0.04715066,0.00380687,-0.01590186,-0.07928514,-0.01735897,0.01724917,0.08099353,0.00036441,0.07122209,0.05337563,0.0213246,-0.00001561,0.22899829,0.00428841,0.04107428,-0.01694187,-0.02544308,0.04406693,0.07406082,-0.00052631,0.00991091,-0.02387859,0.04935329,-0.04929546,0.01655191,0.10238463,0.01684111,-0.01527339,0.03632221,-0.0087433,-0.02537882,-0.00921806,-0.11960901,-0.00272655,0.0876229,-0.0180237,-0.03395189,-0.11185382,-0.02567891,0.01221315,-0.05485211,0.03269163,-0.02381893,0.01471362,0.05261181,0.0230178,0.02825994,-0.04593911,-0.00938295,-0.03056408,0.04882508,-0.05813979,0.10310949,0.1038693,0.00287514],"last_embed":{"hash":"e3548f500facbf5eefcb65349955601ed4bb55d099f290cba72615480ea7562e","tokens":308}}},"text":null,"length":0,"last_read":{"hash":"e3548f500facbf5eefcb65349955601ed4bb55d099f290cba72615480ea7562e","at":1757414817818},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{3}","lines":[170,170],"size":98,"outlinks":[{"title":"**i** : 32bit的整数类型，相当于np.int32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{4}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.1178137,-0.04177781,-0.00050052,-0.03142314,0.06436429,-0.00753094,-0.01078473,-0.05883443,0.02672985,0.011983,0.07354496,-0.07969763,0.02477296,-0.009824,-0.02021194,-0.03327293,-0.01805933,-0.01243692,-0.02694611,0.0120264,0.11442491,-0.01492349,0.04634529,-0.0550895,0.00801395,0.09327321,-0.02315228,-0.02190085,-0.00883188,-0.19366699,0.06073217,0.02465662,-0.01481114,-0.02295603,0.07259331,0.00391264,0.00076118,0.0365518,-0.0006189,0.04350141,0.00271244,-0.0021742,0.00839066,0.02397959,0.01015415,-0.07545438,-0.02616766,-0.01139071,0.01318627,-0.02368514,-0.07274463,-0.02205511,-0.03035808,-0.01339413,0.03915567,0.00496229,0.07684036,0.05346489,0.00921264,0.03914397,0.00016422,0.026289,-0.19255257,0.04775027,0.08152586,-0.00966347,-0.03038353,0.02613084,0.04013755,0.0102271,-0.06074554,0.05963575,-0.024852,0.09139198,0.01858962,-0.02302437,0.0477344,-0.00266246,-0.04099986,-0.04616855,-0.06643413,0.06865764,-0.03833624,0.00221103,-0.02235225,0.03102829,0.01339345,0.00693719,0.04386767,-0.01772161,0.02586134,0.0068036,0.01568134,0.10268527,-0.01815866,-0.01840982,0.10178012,0.06341318,0.01372324,0.07662316,-0.03776348,0.00609596,0.0212463,0.01522278,0.01040759,-0.05721524,-0.03713406,-0.02865042,0.01627889,0.01974304,0.01089826,0.00112712,0.0343082,-0.04063625,0.0325253,-0.00639891,-0.05797633,-0.02963267,-0.08501349,0.00132568,-0.00878712,-0.00270614,0.04396465,-0.0242674,0.01886291,-0.03660924,-0.01841394,0.02947211,0.06228082,0.03270143,0.08562846,-0.02566732,-0.08666688,-0.01648112,0.01840406,-0.01071168,-0.04793675,0.02537985,0.0114452,-0.0605383,0.01452435,-0.11689605,0.00195225,-0.02523499,-0.10467725,0.08484858,-0.06140572,0.00831279,-0.00367441,-0.03594277,-0.01794247,0.06630468,-0.03664795,-0.04827207,0.02638713,-0.03660857,0.06849696,0.07737215,-0.04206174,-0.01540258,-0.02164317,-0.07458513,-0.02466287,0.06803979,-0.0423729,-0.07454245,-0.03896702,0.03379282,-0.03663371,-0.03468741,0.03810888,-0.02535094,-0.01559103,0.01992104,0.07454401,-0.02090224,0.00492612,-0.05443326,0.02569815,0.01552021,-0.03197204,-0.05745634,-0.03074568,-0.00870277,0.00182949,-0.06986269,0.00347975,-0.01431667,0.02596991,0.0151014,-0.02839349,-0.01733745,0.01059838,-0.06113078,-0.0330899,0.01712942,-0.00623718,-0.01688928,0.07264655,-0.0742331,0.11180672,0.01865813,0.01259556,0.05771312,-0.00545279,-0.02204526,0.01048414,-0.02295164,0.035762,0.03828872,0.00841941,-0.0512179,-0.00964174,-0.02275648,-0.02131569,-0.00566848,0.05731411,0.05077573,0.02707245,0.04818982,-0.00512756,-0.10310454,-0.11269394,-0.19129996,0.01893138,0.00965805,-0.07756662,0.0032652,-0.04975137,0.05033883,0.02494304,0.0295347,0.08123373,0.06785894,0.00731502,-0.0339477,-0.03192138,0.0006119,0.03116524,0.07076079,-0.01530094,-0.01609865,0.02592465,0.02466368,0.01794847,-0.02159962,0.02139222,-0.01930903,-0.03660525,0.12199591,0.02274407,0.0602388,0.02756082,0.02871708,0.03573097,-0.04996979,-0.11646915,0.05275551,0.01640574,-0.05326466,0.05312252,-0.03792651,0.00978295,0.01129251,0.02711857,0.02922436,-0.0281058,-0.01935082,0.00353875,-0.01555952,-0.02603933,-0.02198743,0.01881339,-0.00320833,0.06769914,-0.00164801,0.05467181,-0.02215269,-0.02654561,-0.04510557,0.01650243,-0.02935655,0.01382469,-0.00099671,-0.03779348,-0.00238493,-0.0610653,0.00047853,-0.06305083,-0.02010974,-0.02277886,0.03738971,0.00168576,-0.02731448,0.14656685,0.03494059,-0.01475962,0.02442878,0.00336595,0.02202445,-0.01993065,0.02279685,-0.05491491,0.03110009,0.03285456,0.10374406,0.02005008,0.02402239,-0.04405235,0.00451584,-0.02745538,0.0505636,-0.0029206,-0.05261459,-0.00614695,0.01537811,0.05794695,0.12434162,0.02010237,-0.29421845,0.03305813,-0.00895552,0.00204263,0.00260392,-0.004454,0.04292349,0.00633199,-0.03752086,0.02910663,-0.0516552,0.00373528,-0.01279841,-0.07734907,-0.01685118,0.01502597,0.08100366,-0.00458663,0.06931607,0.04809423,0.02378868,0.00121578,0.22979425,0.003576,0.03606224,-0.01585342,-0.022194,0.04237822,0.08233733,0.00631928,0.00079311,-0.02216376,0.04534477,-0.04987414,0.0144224,0.1079733,0.00834091,-0.01667416,0.03883925,-0.00624573,-0.01445448,-0.01001833,-0.11280762,-0.00146255,0.08545484,-0.01536107,-0.02995747,-0.11492602,-0.02050756,0.01088122,-0.05734914,0.02896289,-0.02536755,0.01529115,0.04988524,0.02620489,0.02413853,-0.04470707,-0.00739204,-0.03181488,0.04336238,-0.06467649,0.10221038,0.10614142,0.01076741],"last_embed":{"hash":"17b55eb50d13a709af02668dd3094733af6fa656471549599c9513518fc953a7","tokens":312}}},"text":null,"length":0,"last_read":{"hash":"17b55eb50d13a709af02668dd3094733af6fa656471549599c9513518fc953a7","at":1757414817860},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{4}","lines":[171,172],"size":105,"outlinks":[{"title":"**f** : 32bit的单精度浮点数类型，相当于np.float32","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{5}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12270219,-0.02585354,-0.00959417,-0.01289842,0.04879747,0.00147876,0.00634138,-0.06776092,0.00726919,0.00677803,0.08323067,-0.07613121,0.02870927,-0.00181807,-0.02437906,-0.00015719,-0.00744639,-0.00991135,-0.03437985,0.00722846,0.10530642,-0.0185114,0.02826232,-0.03389323,0.01648779,0.08756293,-0.02065425,-0.01629757,-0.0176421,-0.17923085,0.07156261,0.03213802,-0.01859032,-0.01164296,0.06341613,-0.01047322,-0.00705931,0.02211474,-0.02391394,0.03924348,0.0110293,-0.00452241,0.0146125,0.01421748,0.00588746,-0.08681706,-0.02713652,-0.00201853,0.01111376,-0.02178211,-0.07620032,-0.01829834,-0.03349043,-0.00374404,0.02048608,0.00330832,0.08371771,0.05622936,0.02463551,0.0315776,0.01298503,0.01751839,-0.19225477,0.05799703,0.07548319,-0.01182063,-0.03248617,0.0151523,0.02983247,-0.02039238,-0.06699217,0.06133676,-0.0110827,0.09964801,0.01549625,-0.02907484,0.04939594,-0.00446764,-0.03529267,-0.03656076,-0.06776517,0.05247715,-0.0368321,0.00639426,-0.01923398,0.04154797,0.00358684,0.00584782,0.03333344,-0.02058455,0.01971285,0.01988656,0.02109513,0.10432769,-0.01910967,-0.03195158,0.0947461,0.06453479,-0.01168041,0.07473575,-0.03807679,0.01638841,0.0204231,0.01136853,0.0138985,-0.04944111,-0.03302867,-0.02726116,0.01445335,0.01261885,-0.00153577,-0.00648369,0.0260624,-0.0386631,0.03141576,-0.00758567,-0.05567228,0.00042333,-0.07094262,0.00500068,0.00017205,-0.01829225,0.03220686,-0.02138188,0.02997024,-0.02673193,-0.02003484,0.0240327,0.06282771,0.0382107,0.09479813,-0.0019098,-0.08553711,-0.02097497,0.00538419,-0.01524462,-0.05512709,0.02023453,0.01692904,-0.08691569,0.00273461,-0.11797526,-0.00067462,-0.00641716,-0.11305485,0.0809541,-0.07206894,0.02559059,0.00501413,-0.01998497,-0.02724907,0.06297806,-0.03042824,-0.03465504,0.04167081,-0.01863095,0.0827634,0.06308207,-0.06309803,-0.01432883,-0.01357542,-0.0618563,-0.02697877,0.058801,-0.02897601,-0.07927207,-0.02978348,0.03878098,-0.02821661,-0.03618083,0.0457421,-0.03050549,-0.02332123,0.0394039,0.08149373,-0.01594155,0.00361755,-0.04061119,0.03270917,0.0145519,-0.01217569,-0.03110437,-0.03394345,-0.0138422,-0.00405143,-0.06401151,0.01005603,0.00052548,0.06802379,0.01678273,-0.0012641,-0.00283923,0.00558164,-0.08644321,-0.03582293,0.02588885,-0.01877913,-0.0184688,0.07177702,-0.06840104,0.10023461,0.02078577,0.0179,0.04356073,-0.0137412,-0.03476208,0.00248032,-0.02362281,0.04957231,0.02758381,0.01024423,-0.04048482,-0.0161546,-0.02139345,-0.02980245,-0.0020479,0.06192463,0.04503376,0.04486934,0.05059763,0.00055192,-0.10143092,-0.12522542,-0.19534275,0.00444396,0.02399707,-0.08515219,-0.00455327,-0.04247623,0.04024829,0.01918483,0.01641914,0.06229961,0.07711805,0.01344552,-0.02862966,-0.00798175,-0.00366237,0.03138701,0.07658228,-0.02473113,-0.01930301,0.02836826,0.0271067,0.01628919,-0.02164127,0.01213898,-0.02204106,-0.03988889,0.11702035,0.01630429,0.05463888,0.01770499,0.03569222,0.01571007,-0.05258914,-0.12426482,0.0591892,0.00948862,-0.05521787,0.03747607,-0.04568167,0.00446342,0.01430524,0.02038731,0.04448277,-0.02764856,-0.03705443,0.00050155,-0.00615839,-0.01501778,-0.03660164,0.02319317,0.0082557,0.0662348,-0.00762155,0.05555458,-0.02476618,-0.03558909,-0.05552551,0.03210222,-0.02531886,0.01185376,-0.00965539,-0.04344955,0.00713239,-0.0475018,-0.01680934,-0.08023863,-0.03430875,-0.02784648,0.01952192,-0.01548508,-0.02954005,0.15892191,0.01786089,-0.0052679,0.01200975,0.01152465,0.00119122,-0.02200915,0.02035838,-0.04906527,0.03237319,0.05654391,0.1010173,0.022203,0.02533284,-0.06577778,0.00735996,-0.01728595,0.05666239,0.00462897,-0.05142306,-0.00902777,-0.00486055,0.04901838,0.11951826,0.02911402,-0.30393347,0.04778416,-0.02510831,-0.00091373,0.0075015,-0.00578507,0.04551852,0.00144122,-0.03700894,0.02305746,-0.03396842,0.00208831,-0.01013815,-0.07663642,-0.02677505,0.01348827,0.06772459,-0.005689,0.06283469,0.04830966,0.015054,0.01550801,0.23235899,-0.00197121,0.062473,-0.01454577,-0.04105372,0.03275149,0.06243362,0.00038396,0.01701715,-0.02358904,0.05965235,-0.04134859,0.01513841,0.09576155,0.02590513,-0.02849545,0.03400856,-0.0211103,-0.01559539,-0.00691181,-0.12441429,-0.00417259,0.09412657,0.00073357,-0.03391708,-0.09369271,-0.02714526,0.01037058,-0.05358834,0.02403343,-0.02065973,0.03052486,0.06578594,0.02471004,0.02789221,-0.0318578,-0.00016745,-0.01095214,0.03973743,-0.04596221,0.08720209,0.10917681,0.02017601],"last_embed":{"hash":"082639647bac54c2545b2970b7bc57816c9d21cb79509c421264d1a157e3e82e","tokens":434}}},"text":null,"length":0,"last_read":{"hash":"082639647bac54c2545b2970b7bc57816c9d21cb79509c421264d1a157e3e82e","at":1757414817901},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{5}","lines":[173,178],"size":495,"outlinks":[{"title":"然后我们调用array函数创建数组，通过关键字参数 dtype=persontype， 指定所创建的数组的元素类型为结构persontype。运行上面程序之后，我们可以在IPython中执行如下的语句查看数组a的元素类型","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1},{"title":"**>>>** a.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":3},{"title":"这里我们看到了另外一种描述结构类型的方法： 一个包含多个组元的列表，其中形如 (字段名, 类型描述) 的组元描述了结构中的每个字段。类型描述前面为我们添加了 '|', '<' 等字符，这些字符用来描述字段值的字节顺序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":5}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{6}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12727739,-0.03857592,0.00792006,-0.02913297,0.06926555,-0.00498971,-0.01582702,-0.05512808,0.02118536,0.00971201,0.07370209,-0.07406004,0.02543844,-0.0048912,-0.01671389,-0.0306363,-0.01680893,-0.0106032,-0.02574226,0.00154221,0.12544169,-0.01258903,0.05328701,-0.05321666,0.0132463,0.08194783,-0.01902729,-0.01898665,-0.00819059,-0.18661095,0.06240105,0.01796134,-0.01409655,-0.01347753,0.0792855,0.00208303,-0.00067351,0.03543868,-0.00060956,0.04481054,0.00561786,-0.00566706,0.00782035,0.02310835,0.00939188,-0.07841672,-0.02639798,-0.01286043,0.00974444,-0.02149045,-0.06683835,-0.02342003,-0.03711635,-0.01462487,0.04548173,0.00183446,0.08321483,0.0521917,0.00871187,0.03363495,0.00050279,0.03111824,-0.1943509,0.04822466,0.07837692,-0.01426054,-0.03663594,0.02809338,0.03522067,0.00626243,-0.05887154,0.06234172,-0.02029073,0.10036501,0.01357051,-0.02511422,0.04725787,-0.00016204,-0.03826796,-0.05066031,-0.06574801,0.06864099,-0.03918876,-0.00202122,-0.02831276,0.02675849,0.00474823,0.00164781,0.04402645,-0.02227877,0.03728646,0.0025424,0.02321802,0.10030267,-0.02400342,-0.02067901,0.09486921,0.07068336,0.01410447,0.08425072,-0.04991218,0.00073892,0.03041227,0.01089127,0.00863592,-0.05967562,-0.03083315,-0.02809794,0.0154805,0.02973183,0.00751509,-0.00188711,0.02868353,-0.04076957,0.04012854,-0.00669634,-0.06007239,-0.01887593,-0.07815926,-0.00249386,-0.00420724,-0.0115231,0.03922114,-0.02076135,0.02336252,-0.03507316,-0.01684333,0.03114516,0.06462175,0.02611428,0.08600121,-0.01865914,-0.08212302,-0.01777388,0.01514098,-0.01652947,-0.04705557,0.02250697,0.01421679,-0.05993134,0.0209206,-0.116887,0.00360677,-0.02803044,-0.10209826,0.07902356,-0.05921909,0.01035468,-0.00029937,-0.03524371,-0.02271768,0.06768352,-0.03347543,-0.04369467,0.02988302,-0.03905154,0.06719071,0.07396515,-0.03737773,-0.02156304,-0.02172583,-0.07191168,-0.02942757,0.07401803,-0.03608312,-0.07364259,-0.04670639,0.03476241,-0.03643649,-0.03568981,0.03564149,-0.01656169,-0.01370415,0.01844583,0.07861233,-0.02047224,0.00572938,-0.06086875,0.02038735,0.01375343,-0.03031333,-0.06224953,-0.03065717,-0.00275767,-0.00190183,-0.06739656,0.00836642,-0.01605725,0.029539,0.01307572,-0.01685193,-0.01418109,0.01073861,-0.06874958,-0.03641305,0.01821847,-0.00933212,-0.02365978,0.07023803,-0.07667428,0.11166991,0.00965676,0.01790451,0.05423678,-0.01107829,-0.02783393,0.00972509,-0.02607218,0.03724018,0.03448924,0.00065633,-0.04807809,-0.00539593,-0.02168951,-0.01737682,-0.00190156,0.0519352,0.05242277,0.03824144,0.04216657,-0.0060569,-0.09503423,-0.11009248,-0.19276875,0.01867385,0.01292956,-0.07864081,0.00660323,-0.04784879,0.04579135,0.01950232,0.03295125,0.07162275,0.07415897,0.01348551,-0.03145173,-0.02218369,0.0019112,0.02940323,0.07288406,-0.01964407,-0.01560615,0.02842532,0.02585483,0.01190556,-0.01718427,0.02030367,-0.02591663,-0.03043067,0.11977462,0.03060511,0.06131167,0.02143092,0.02328553,0.02763182,-0.05096409,-0.11909676,0.05562815,0.01815836,-0.05256846,0.0480545,-0.0417296,0.00920635,0.01200067,0.0262252,0.02315214,-0.03208651,-0.02260599,0.0023433,-0.02136248,-0.02582276,-0.02568022,0.01226747,-0.00175899,0.06310745,0.0030841,0.05988394,-0.01972409,-0.02017332,-0.05223816,0.02141463,-0.02724632,0.01733114,-0.00139636,-0.03539067,0.00511282,-0.06760815,0.00500882,-0.06440812,-0.02127049,-0.02642321,0.04113879,0.00258186,-0.02898398,0.14502579,0.03216853,-0.01105399,0.02598424,0.00474391,0.01704045,-0.02481937,0.01861586,-0.05765104,0.02981375,0.02974491,0.10373738,0.01945844,0.02480527,-0.04446995,0.00241992,-0.02820276,0.05958065,-0.00025818,-0.05220981,-0.0114996,0.01574725,0.0506906,0.12300541,0.0219523,-0.29257679,0.03778005,-0.0044609,0.00947201,-0.00154025,0.00183649,0.03185493,-0.00016477,-0.02568889,0.03036192,-0.04549306,0.00789561,-0.01432171,-0.08031489,-0.01755399,0.01712149,0.084388,-0.00041481,0.07229235,0.0506448,0.01878133,-0.00318863,0.23131864,-0.00014602,0.04097432,-0.0173916,-0.02609486,0.04557422,0.07197028,-0.00076441,0.00961002,-0.02250161,0.04517122,-0.04367734,0.01801582,0.09663041,0.01922694,-0.01763401,0.03647111,-0.00988901,-0.03398477,-0.00776243,-0.12397183,-0.00588519,0.08760808,-0.02095317,-0.03473907,-0.10905065,-0.03143345,0.01471342,-0.05261329,0.02783129,-0.02348365,0.01478135,0.05043697,0.02889493,0.03499767,-0.04698842,-0.00385061,-0.02058076,0.04242429,-0.05846187,0.10553378,0.10362528,0.00776287],"last_embed":{"hash":"27301c2ab8d5a237260be8cbe49c89681985e94db9fcd7fcbf3f3985a898d179","tokens":299}}},"text":null,"length":0,"last_read":{"hash":"27301c2ab8d5a237260be8cbe49c89681985e94db9fcd7fcbf3f3985a898d179","at":1757414817960},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{6}","lines":[179,180],"size":83,"outlinks":[{"title":"**|** : 忽视字节顺序","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{7}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12638722,-0.03807595,0.00791183,-0.02875244,0.06986081,-0.00479949,-0.01583591,-0.05514951,0.02115244,0.00912467,0.07409173,-0.0743131,0.02484132,-0.00444152,-0.0172119,-0.03073489,-0.01695952,-0.01020394,-0.02478576,0.00098304,0.1250793,-0.01263458,0.05294966,-0.0531265,0.01320441,0.08162839,-0.01844861,-0.0195113,-0.00884728,-0.18687312,0.06261078,0.01707594,-0.01447317,-0.01325276,0.079411,0.00179848,-0.00086116,0.03513347,-0.00036268,0.0443574,0.00548534,-0.00513757,0.00793503,0.0229425,0.0090635,-0.07882347,-0.02632808,-0.01289771,0.00989764,-0.02250418,-0.06678902,-0.02273581,-0.03683956,-0.01458707,0.04514162,0.00234984,0.08334596,0.05167624,0.00815131,0.03431035,0.00039034,0.03097503,-0.19415563,0.04772347,0.07870658,-0.01379113,-0.03675628,0.02797525,0.03601877,0.00489953,-0.05838853,0.06228222,-0.01992436,0.10063986,0.01301061,-0.02541675,0.04734698,-0.00054325,-0.03825131,-0.05087212,-0.0662612,0.06846135,-0.03924702,-0.00149886,-0.02765023,0.02702894,0.00517937,0.00145767,0.0444258,-0.02195844,0.03679069,0.00300217,0.02297874,0.10069375,-0.02340421,-0.02055934,0.09520879,0.07075734,0.01360275,0.08404899,-0.05068489,0.0012889,0.03100388,0.01147908,0.00941205,-0.05981945,-0.03102721,-0.0277635,0.01619114,0.03006262,0.00751643,-0.00215078,0.02813923,-0.04089116,0.04038846,-0.00580938,-0.06030043,-0.01843933,-0.0782614,-0.0024103,-0.00365439,-0.01134565,0.03925988,-0.02048019,0.02392397,-0.0359418,-0.01658797,0.03060907,0.06469568,0.02637902,0.08712628,-0.01868426,-0.08264659,-0.01776344,0.01486826,-0.0160321,-0.04708447,0.02263857,0.01412957,-0.06003321,0.02061368,-0.11637957,0.00331351,-0.02740755,-0.10265059,0.07924516,-0.05879901,0.01097152,0.00049209,-0.03451553,-0.02292753,0.06739774,-0.03500623,-0.04308214,0.02981976,-0.03975111,0.06676158,0.07357827,-0.03727743,-0.02152293,-0.02211691,-0.0717027,-0.02970678,0.07430434,-0.03636441,-0.07357609,-0.04699098,0.03450989,-0.03620454,-0.03576668,0.03598181,-0.01644241,-0.01339003,0.0181731,0.0784813,-0.02063802,0.0057314,-0.06127043,0.0201109,0.01392006,-0.03034643,-0.0627882,-0.03026728,-0.00270248,-0.0021552,-0.06739511,0.0080226,-0.01605411,0.02893843,0.01393592,-0.01704017,-0.01458759,0.01055031,-0.06959946,-0.03620408,0.01930494,-0.00839116,-0.02396816,0.07091287,-0.07641702,0.11060289,0.00991801,0.01851214,0.05476641,-0.01140224,-0.02769386,0.00969328,-0.02618792,0.0370971,0.03467298,0.00044139,-0.04787238,-0.00543688,-0.02164812,-0.01754854,-0.00149076,0.05264164,0.05256411,0.03870898,0.0417092,-0.00581886,-0.09483413,-0.10972641,-0.19223922,0.01910476,0.01261578,-0.07939255,0.00615823,-0.04779053,0.04540971,0.01965085,0.03236474,0.07063033,0.07411971,0.01380171,-0.0317548,-0.02285732,0.00172046,0.02945155,0.07307294,-0.01962603,-0.01508575,0.0281502,0.02476605,0.01180819,-0.017171,0.02020227,-0.02632913,-0.03026893,0.11953342,0.03089221,0.06174191,0.02085524,0.02283475,0.02765848,-0.05093185,-0.11986739,0.05563674,0.01769935,-0.05254248,0.04799746,-0.04149078,0.00869226,0.0119397,0.02599378,0.02299222,-0.03210964,-0.02246493,0.00306608,-0.0210631,-0.02584623,-0.02553809,0.01316139,-0.00126372,0.06268424,0.00317668,0.06038835,-0.01930528,-0.01975424,-0.05137745,0.0212964,-0.02804251,0.01726601,-0.00137535,-0.03509224,0.00448146,-0.06785174,0.00494732,-0.06535389,-0.02164219,-0.0265248,0.04119493,0.00247626,-0.0290792,0.14504601,0.03306219,-0.01117012,0.02640588,0.00466803,0.01732954,-0.02504219,0.01847634,-0.0572811,0.0292316,0.02976615,0.10446289,0.01937466,0.02540615,-0.04382856,0.00212736,-0.02744615,0.05887271,0.0000805,-0.05276359,-0.01091033,0.01566833,0.05005984,0.12365816,0.02156191,-0.29249254,0.03853212,-0.00519855,0.00926153,-0.00191015,0.00181315,0.03235697,0.00007526,-0.02598693,0.03083286,-0.04490568,0.00781696,-0.01456782,-0.08066803,-0.01793285,0.01735887,0.0842962,0.0000763,0.07258137,0.05055147,0.01899873,-0.00325998,0.23100263,0.00023379,0.041053,-0.01749768,-0.02590538,0.04526513,0.07216721,-0.00112373,0.01026203,-0.02227653,0.04553649,-0.04361465,0.0182034,0.09626092,0.01984156,-0.018344,0.03636315,-0.0089173,-0.03423219,-0.00838302,-0.12333234,-0.00562733,0.08666832,-0.02217457,-0.03444136,-0.10922008,-0.03220341,0.01359236,-0.05223422,0.0280923,-0.02365671,0.01481983,0.050641,0.02869765,0.03496261,-0.04698815,-0.00343077,-0.02171372,0.04242897,-0.05892552,0.10524723,0.10328605,0.00860401],"last_embed":{"hash":"1a21defa3e9032803ffd95fe36c0c92d7ce02e2b36ab925ee654899d86955181","tokens":299}}},"text":null,"length":0,"last_read":{"hash":"1a21defa3e9032803ffd95fe36c0c92d7ce02e2b36ab925ee654899d86955181","at":1757414818006},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{7}","lines":[181,181],"size":82,"outlinks":[{"title":"**<** : 低位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{8}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12659337,-0.03835135,0.00799593,-0.0293937,0.06979018,-0.00395251,-0.01600688,-0.05485194,0.02184599,0.00912024,0.07399059,-0.07459164,0.02639427,-0.00384069,-0.01755964,-0.03045168,-0.01593139,-0.01170845,-0.02437891,0.00072928,0.12385117,-0.01206585,0.05156956,-0.05212088,0.01334255,0.08121359,-0.01889677,-0.02079036,-0.00838886,-0.18660863,0.06215024,0.01771631,-0.01550148,-0.01141822,0.07875957,0.00257402,-0.0002987,0.03445077,-0.00061406,0.04388264,0.00651831,-0.00385565,0.00777733,0.02290715,0.00980964,-0.07927089,-0.0255401,-0.01283614,0.00992065,-0.02192276,-0.06680814,-0.02398576,-0.03653213,-0.01457047,0.04496353,0.00250351,0.08272851,0.05151859,0.00885523,0.03411395,0.00039401,0.03040557,-0.1939712,0.04717751,0.07894132,-0.01366701,-0.03706251,0.02813407,0.0362486,0.00634978,-0.05894307,0.06254279,-0.01969367,0.09974644,0.01307406,-0.02508946,0.0469473,-0.00094222,-0.03864238,-0.05107738,-0.06535731,0.07012506,-0.03857756,-0.00113506,-0.02727518,0.02742468,0.00508802,0.00144278,0.04472124,-0.02263361,0.03734094,0.00297536,0.02319827,0.10186079,-0.02293051,-0.02010384,0.09554324,0.07097151,0.01322168,0.083322,-0.05009554,0.00074042,0.02997187,0.01132559,0.00961156,-0.05927588,-0.03041897,-0.02759537,0.01634216,0.0303371,0.00842288,-0.00213247,0.02892131,-0.04084489,0.04084633,-0.00620343,-0.06067365,-0.01898814,-0.07854831,-0.00277809,-0.00356039,-0.01110547,0.03888915,-0.02077796,0.02320995,-0.03620725,-0.01612382,0.03092195,0.06446987,0.02657848,0.08650722,-0.01948811,-0.08239137,-0.01799671,0.0158639,-0.01709415,-0.04701649,0.02353442,0.01442235,-0.05980222,0.0209455,-0.11617018,0.0033285,-0.02822119,-0.10304039,0.08020324,-0.05918609,0.01010679,0.00127182,-0.03483728,-0.02246956,0.06698366,-0.0337973,-0.04319498,0.02973817,-0.03981461,0.06643811,0.07530438,-0.03791129,-0.02095226,-0.02173149,-0.07161224,-0.03037344,0.07312415,-0.0364659,-0.07379949,-0.04734363,0.03537453,-0.03625202,-0.03518442,0.0362003,-0.01722859,-0.01321047,0.01801328,0.07830875,-0.01967387,0.00569294,-0.06159663,0.01999814,0.01337925,-0.02979608,-0.06215833,-0.03077012,-0.0029561,-0.00247485,-0.06776225,0.00849883,-0.01611786,0.02892905,0.01303924,-0.01851567,-0.01364602,0.01125565,-0.06882173,-0.03645898,0.01918842,-0.00877368,-0.02269419,0.07127361,-0.07684454,0.11106173,0.00892742,0.01855909,0.05391682,-0.01141894,-0.02757053,0.00918611,-0.02654784,0.03678464,0.0355773,0.0003547,-0.04772874,-0.00540942,-0.02059113,-0.01785569,-0.00049476,0.05262775,0.05339858,0.03806806,0.04272701,-0.00503761,-0.09574988,-0.1103817,-0.19254521,0.01920242,0.01279492,-0.07930592,0.0062634,-0.04831763,0.04539318,0.01982128,0.03270555,0.07090693,0.07334732,0.01391936,-0.03172855,-0.0244021,0.00185104,0.02998518,0.07250416,-0.01968925,-0.01570835,0.02832778,0.02582163,0.01181866,-0.01846357,0.02051299,-0.02515251,-0.03091866,0.1185844,0.02987578,0.06175215,0.01914391,0.02412277,0.02775058,-0.05159764,-0.11931982,0.05616543,0.01744441,-0.05361405,0.04798072,-0.04213032,0.00808354,0.01291537,0.02586066,0.02250195,-0.0323846,-0.02355991,0.00334645,-0.02040355,-0.02579507,-0.02670088,0.01355827,-0.00188359,0.06350135,0.00233621,0.06032276,-0.02001171,-0.02066167,-0.05190999,0.02246862,-0.02788088,0.01779532,-0.00099336,-0.03489951,0.00366542,-0.06695884,0.0037995,-0.06629903,-0.02159267,-0.02563387,0.0417814,0.00232848,-0.02869937,0.14521255,0.03168955,-0.01050678,0.02568855,0.00509168,0.01645569,-0.02390991,0.01874606,-0.05732493,0.02949097,0.029776,0.10455992,0.0197996,0.02403242,-0.04511882,0.00237291,-0.02702096,0.05921283,-0.00014761,-0.0537011,-0.01070057,0.01525169,0.04945502,0.12263123,0.02146189,-0.29279259,0.03774011,-0.00531767,0.00998428,-0.00193075,0.00210561,0.03209363,0.00095687,-0.02513281,0.03104889,-0.04487691,0.00789021,-0.01398249,-0.07918786,-0.01809504,0.01639164,0.08401045,0.00029341,0.07230924,0.05018177,0.01931877,-0.00348338,0.23092328,0.00062484,0.04049633,-0.01859537,-0.02607522,0.04582136,0.07125757,-0.00090581,0.01014616,-0.02304456,0.04580085,-0.04359046,0.01869269,0.09625848,0.0191364,-0.01878265,0.03619747,-0.00849719,-0.03379828,-0.00794306,-0.12343534,-0.00551456,0.08719224,-0.02086173,-0.03459501,-0.1093924,-0.03173653,0.01398749,-0.0533686,0.02877591,-0.02400268,0.01393919,0.05129457,0.02940766,0.03447513,-0.04810168,-0.00396955,-0.02066396,0.04340979,-0.0580346,0.10434853,0.10393509,0.007866],"last_embed":{"hash":"c937b05df911c5ef506dbe9c4af7e04f0ebd4606a3136d938cfb19966f05cbb9","tokens":299}}},"text":null,"length":0,"last_read":{"hash":"c937b05df911c5ef506dbe9c4af7e04f0ebd4606a3136d938cfb19966f05cbb9","at":1757414818052},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{8}","lines":[182,183],"size":83,"outlinks":[{"title":"**>** : 高位字节在前","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{9}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.1266498,-0.03630869,0.00132312,-0.02502946,0.06695296,0.00026104,-0.01555051,-0.06161722,0.01083939,0.00784424,0.08338197,-0.06164283,0.03201145,-0.00405283,-0.02004047,-0.02022959,-0.01036636,-0.00370575,-0.03494812,0.00489917,0.11491184,-0.01022277,0.04683317,-0.04767381,0.02526966,0.09121133,-0.01654755,-0.02075602,-0.02016293,-0.18680608,0.06227443,0.01647799,-0.01053543,-0.01654898,0.06984341,-0.01280197,-0.0000766,0.02956522,-0.01492412,0.03311182,0.00769864,0.00095808,0.01158756,0.02567554,-0.00257937,-0.07559019,-0.02739556,-0.01191519,0.00591133,-0.01812855,-0.0726418,-0.01533771,-0.03653944,-0.00512978,0.03275572,0.004166,0.08148632,0.05103268,0.01317273,0.03838005,0.0016734,0.02088023,-0.18930967,0.05111462,0.08103979,-0.01464208,-0.0250835,0.01772721,0.0386441,-0.00502871,-0.06249413,0.05538649,-0.01013688,0.10303056,0.01129167,-0.02063021,0.05004839,-0.004559,-0.03942554,-0.04585162,-0.07093471,0.06929512,-0.03247287,0.00053685,-0.02707081,0.0397085,0.00274686,-0.00073594,0.03649642,-0.01656506,0.02335953,0.01745552,0.01915714,0.09665871,-0.01699135,-0.03070478,0.09792092,0.07910415,-0.0022951,0.07599943,-0.04834251,0.01067921,0.02789566,0.01425243,0.00510375,-0.06246182,-0.03393157,-0.01820858,0.01025149,0.02774394,0.00646285,-0.0110487,0.0179793,-0.0319987,0.03732553,-0.0042113,-0.05335914,-0.00944185,-0.08288296,-0.00356882,-0.00177918,-0.0048511,0.03623399,-0.02034146,0.0209138,-0.03616597,-0.02035689,0.02943837,0.05831187,0.02528805,0.08047905,-0.01303419,-0.08772471,-0.01021535,0.01857735,-0.01273441,-0.05254546,0.02297221,0.01598006,-0.07969967,0.00859965,-0.1195519,0.00534745,-0.01615932,-0.11180462,0.07991196,-0.05593431,0.01455652,-0.00333575,-0.02751768,-0.01250193,0.06509947,-0.03079527,-0.03217458,0.02971048,-0.03568776,0.07526922,0.07534778,-0.03888563,-0.02333167,-0.02239069,-0.06693662,-0.02828101,0.07801558,-0.03654231,-0.07815766,-0.04509174,0.03502884,-0.03547226,-0.03516205,0.04479034,-0.01416329,-0.02117611,0.03464955,0.07371552,-0.01976796,0.00140012,-0.05624615,0.03171576,0.02647905,-0.02420527,-0.05408206,-0.03569984,-0.00416924,-0.00463962,-0.06563559,0.00201952,-0.00790249,0.04227465,0.01116579,-0.01308054,-0.00680306,0.00836618,-0.07139055,-0.03634556,0.01950421,-0.02421424,-0.00916925,0.07602997,-0.08086886,0.11401057,0.00859282,0.00920677,0.05460016,-0.00448474,-0.02973247,0.01588431,-0.02600058,0.04180735,0.0289847,0.00976436,-0.05072005,-0.00763508,-0.01369552,-0.02453525,0.01486066,0.04896269,0.04552754,0.02842169,0.04371558,0.00634527,-0.09205516,-0.11878355,-0.19126074,0.02102044,0.02020425,-0.07647824,-0.00005355,-0.0486189,0.04477919,0.01242236,0.02960544,0.06706593,0.07371635,0.02077863,-0.03614246,-0.03335939,-0.01009536,0.03396551,0.07099528,-0.01837745,-0.01415413,0.02687229,0.02782595,0.01418886,-0.01551811,0.02776712,-0.02183617,-0.03952662,0.12244194,0.0117171,0.04908895,0.0179404,0.03046871,0.02236279,-0.05008397,-0.11032592,0.05840126,0.01940518,-0.06012828,0.0406798,-0.04354775,0.00302259,0.01989714,0.02733495,0.0367599,-0.03069769,-0.02916005,0.00800105,-0.00686309,-0.01968745,-0.01271554,0.01494686,0.00356491,0.06588957,-0.00606959,0.05415401,-0.02087438,-0.02494972,-0.04604843,0.03219329,-0.03314224,0.00997492,-0.00683208,-0.0353194,0.01090393,-0.06044806,-0.00842781,-0.07489849,-0.02498423,-0.03028516,0.01783426,-0.01375887,-0.03233055,0.15400822,0.02708897,-0.01745628,0.01179008,0.01219908,0.00545189,-0.02008805,0.02965742,-0.05091463,0.0298084,0.03289563,0.11218871,0.02087526,0.02590338,-0.05361719,-0.00168182,-0.02316158,0.05560015,0.00058079,-0.05825954,-0.01435487,0.00846972,0.04932278,0.11857629,0.01861142,-0.2967698,0.03904315,-0.01605175,0.00105998,-0.00342536,-0.01156632,0.04263473,0.00770865,-0.02512125,0.03492237,-0.0398853,0.00782586,-0.02072258,-0.08176484,-0.01903531,0.01323945,0.07215124,-0.00055795,0.06833044,0.05521021,0.02565329,0.0101821,0.22847258,0.00192969,0.06141968,-0.01107947,-0.03169025,0.03851762,0.06945463,0.00159615,0.00916218,-0.0247907,0.05296756,-0.04587239,0.01897227,0.09969581,0.01088283,-0.0269345,0.02670893,-0.00654841,-0.02323602,-0.00905363,-0.12823327,-0.00706512,0.0966206,-0.0146122,-0.02775609,-0.10099081,-0.03163258,0.00921923,-0.04967275,0.02483233,-0.01922693,0.02638892,0.05245491,0.0291744,0.02627826,-0.045596,-0.00463349,-0.02506986,0.04163805,-0.06442583,0.09950724,0.10920328,0.01124865],"last_embed":{"hash":"281acf5c098b4a991feeb6e5e96271c125162ffbaf8d84959da0f29e82b18ff0","tokens":401}}},"text":null,"length":0,"last_read":{"hash":"281acf5c098b4a991feeb6e5e96271c125162ffbaf8d84959da0f29e82b18ff0","at":1757414818097},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#2.1.4　结构数组[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)#{9}","lines":[184,223],"size":2959,"outlinks":[{"title":"结构数组的存取方式和一般数组相同，通过下标能够取得其中的元素，注意元素的值看上去像是组元，实际上它是一个结构：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1},{"title":"**>>>** a0('Zhang', 32, 75.5)**>>>** a0.dtypedtype(('name', '|S32'), ('age', '<i4'), ('weight', '<f4'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":3},{"title":"a0是一个结构元素，它和数组a共享内存数据，因此可以通过修改它的字段，改变原始数组中的对应字段：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":5},{"title":"**>>>** c = a1**>>>** c\"name\" = \"Li\"**>>>** a1\"name\"\"Li\"","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":7},{"title":"结构像字典一样可以通过字符串下标获取其对应的字段值：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":9},{"title":"**>>>** a0\"name\"'Zhang'","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":11},{"title":"我们不但可以获得结构元素的某个字段，还可以直接获得结构数组的字段，它返回的是原始数组的视图，因此可以通过修改b0改变a0\"age\"：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":13},{"title":"**>>>** b=a:\"age\" _# 或者a\"age\"_**>>>** barray(32, 24)**>>>** b0 = 40**>>>** a0\"age\"40","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":15},{"title":"通过调用a.tostring或者a.tofile方法，可以直接输出数组a的二进制形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":17},{"title":"**>>>** a.tofile(\"test.bin\")","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":19},{"title":"利用下面的C语言程序可以将test.bin文件中的数据读取出来。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":21},{"title":"内存对齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":23},{"title":"C语言的结构体为了内存寻址方便，会自动的添加一些填充用的字节，这叫做内存对齐。例如如果把下面的name32改为name30的话，由于内存对齐问题，在name和age中间会填补两个字节，最终的结构体大小不会改变。因此如果numpy中的所配置的内存大小不符合C语言的对齐规范的话，将会出现数据错位。为了解决这个问题，在创建dtype对象时，可以传递参数align=True，这样numpy的结构数组的内存对齐和C语言的结构体就一致了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":25},{"title":"#include <stdio.h> **struct** person{ char name32; int age; float weight;}; **struct** person p2; void main (){ FILE *fp; int i; fp=fopen(\"test.bin\",\"rb\"); fread(p, **sizeof**(**struct** person), 2, fp); fclose(fp); **for**(i=0;i<2;i++) printf(\"%s %d %f**n**\", pi.name, pi.age, pi.weight); getchar();}","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":27},{"title":"结构类型中可以包括其它的结构类型，下面的语句创建一个有一个字段f1的结构，f1的值是另外一个结构，它有字段f2，其类型为16bit整数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":29},{"title":"**>>>** np.dtype(('f1', ('f2', np.int16)))dtype(('f1', ('f2', '<i2')))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":31},{"title":"当某个字段类型为数组时，用组元的第三个参数表示，下面描述的f1字段是一个shape为(2,3)的双精度浮点数组:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":33},{"title":"**>>>** np.dtype(('f0', 'i4'), ('f1', 'f8', (2, 3)))dtype(('f0', '<i4'), ('f1', '<f8', (2, 3)))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":35},{"title":"用下面的字典参数也可以定义结构类型，字典的关键字为结构中字段名，值为字段的类型描述，但是由于字典的关键字是没有顺序的，因此字段的顺序需要在类型描述中给出，类型描述是一个组元，它的第二个值给出字段的字节为单位的偏移量，例如age字段的偏移量为25个字节：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":37},{"title":"**>>>** np.dtype({'surname':('S25',0),'age':(np.uint8,25)})dtype(('surname', '|S25'), ('age', '|u1'))","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":39}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.5　内存结构](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12938669,-0.04154915,0.00931094,-0.03081526,0.07119974,-0.00418835,-0.01702752,-0.05492142,0.02118259,0.00538937,0.07518147,-0.07463762,0.0249516,-0.00420238,-0.01542985,-0.03494333,-0.01265932,-0.01706761,-0.02446235,-0.00037787,0.12607062,-0.0121343,0.05303601,-0.0510978,0.01471361,0.07941311,-0.01769611,-0.01905403,-0.00850103,-0.18396303,0.0603189,0.01853565,-0.01298834,-0.01096482,0.07771891,0.00272815,0.00017742,0.03426293,0.0017503,0.04418527,0.00773755,-0.00164539,0.0083283,0.02430331,0.01385529,-0.07845072,-0.02560118,-0.01491394,0.00664922,-0.02389287,-0.06994136,-0.02059844,-0.0363979,-0.01716053,0.04819044,0.00238819,0.08508299,0.05347189,0.00856415,0.03499438,0.00035485,0.03158928,-0.19490309,0.0504354,0.0801608,-0.01409496,-0.03816681,0.02922268,0.03874646,0.00401765,-0.05399399,0.06399366,-0.01835851,0.09880146,0.00983283,-0.02474776,0.05003182,-0.00268559,-0.0391004,-0.05258106,-0.06449413,0.06975831,-0.03975136,0.00098743,-0.02877205,0.02713442,0.00529311,-0.00171376,0.04296852,-0.02271698,0.03841442,-0.00041497,0.02066728,0.09677456,-0.02402221,-0.01974019,0.09320651,0.06941598,0.01487225,0.08272576,-0.04927356,-0.00091617,0.03144323,0.01009614,0.01144946,-0.06094502,-0.02900933,-0.0278008,0.01652667,0.03354026,0.00774695,0.00026952,0.02506705,-0.04143229,0.0420767,-0.00528675,-0.06112825,-0.01970584,-0.07930624,-0.00154707,-0.00435036,-0.00999061,0.04062174,-0.02059878,0.01970189,-0.03504535,-0.01498706,0.02871368,0.06260084,0.02248954,0.08504254,-0.01659336,-0.08484779,-0.02011688,0.01310446,-0.01798068,-0.04396218,0.02073928,0.01149233,-0.06033422,0.02045912,-0.11812142,0.00082053,-0.03150627,-0.10172428,0.08236616,-0.05794574,0.01052363,-0.00190552,-0.03590636,-0.02135262,0.06863029,-0.03179386,-0.04561168,0.03189706,-0.04204518,0.06657014,0.07362325,-0.03474346,-0.02173235,-0.01997318,-0.07304798,-0.03008626,0.07113545,-0.03717201,-0.07364,-0.04696336,0.03451964,-0.03779782,-0.04063796,0.03435071,-0.0187405,-0.01299084,0.01846968,0.07743716,-0.01705846,0.00285808,-0.06571728,0.02032102,0.01444473,-0.03136338,-0.06194057,-0.03026981,-0.00067056,-0.00264684,-0.06864265,0.01066765,-0.01753907,0.03092971,0.01373065,-0.01550222,-0.01512832,0.00969675,-0.06872316,-0.03684866,0.02203966,-0.01084941,-0.02457211,0.06852248,-0.07929695,0.1044903,0.00407713,0.01569982,0.05097605,-0.01294744,-0.02882956,0.00978628,-0.02791174,0.03944552,0.03632662,0.00127137,-0.04474366,-0.01002055,-0.02113694,-0.01512312,0.00021544,0.0566251,0.05310793,0.03865616,0.04113912,-0.00371013,-0.09440195,-0.11232807,-0.18806556,0.01640273,0.0136763,-0.0790611,0.00690603,-0.04803322,0.04702932,0.0199476,0.03089412,0.06962023,0.07639157,0.01575195,-0.03361282,-0.01892112,0.00390077,0.02884611,0.07360762,-0.01833615,-0.01661123,0.02829125,0.03036093,0.01257133,-0.02046242,0.01539762,-0.02395263,-0.03211899,0.11691993,0.02967231,0.06330498,0.02031895,0.02546091,0.02653537,-0.05029602,-0.12058408,0.05614393,0.01719936,-0.05304224,0.04719507,-0.04128759,0.00932842,0.01188178,0.02977416,0.02083293,-0.03162727,-0.02595586,0.00535676,-0.02414441,-0.0229434,-0.02918037,0.01081459,-0.00271765,0.06103711,0.0052785,0.05876687,-0.02127112,-0.02133895,-0.05171094,0.02027754,-0.02725161,0.01878429,-0.00093484,-0.03372362,0.00561513,-0.06976784,0.00638126,-0.06156357,-0.02077843,-0.0240226,0.04015991,0.0034617,-0.02845353,0.14726736,0.03141906,-0.00837161,0.02583956,0.00587142,0.01599236,-0.02491867,0.01800629,-0.05525615,0.02828643,0.02850864,0.10255571,0.02224238,0.02644523,-0.045912,0.00443852,-0.03188008,0.06259382,0.00101529,-0.05634126,-0.01407268,0.01712235,0.04936272,0.12410734,0.02383675,-0.29145527,0.03635668,-0.00578819,0.00731704,-0.00323636,0.00193184,0.03301323,0.00312722,-0.02248576,0.02921148,-0.04228884,0.00758108,-0.01387267,-0.07785718,-0.01487772,0.01425818,0.08473779,-0.00260581,0.07372609,0.05411951,0.02223364,-0.00135317,0.23077305,-0.00127425,0.03787143,-0.01905139,-0.03057755,0.0457378,0.0732326,-0.0017464,0.01102517,-0.02173507,0.04867915,-0.04348645,0.01771778,0.09362913,0.02069075,-0.01305106,0.03814689,-0.00750949,-0.03265351,-0.00721734,-0.12540872,-0.00654924,0.08841407,-0.02005478,-0.03521852,-0.10882862,-0.03095732,0.01664629,-0.05211123,0.03025033,-0.02347347,0.01387627,0.05363179,0.0269587,0.03597745,-0.04798429,-0.00192188,-0.02083497,0.04558833,-0.0544929,0.10257258,0.10453837,0.00640193],"last_embed":{"hash":"bdf67a070ede917dc5927551da550e6132d18502791a6e07859cc5d1a94b6c51","tokens":330}}},"text":null,"length":0,"last_read":{"hash":"bdf67a070ede917dc5927551da550e6132d18502791a6e07859cc5d1a94b6c51","at":1757414818160},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.5　内存结构](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5)","lines":[224,247],"size":1574,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"2.1.5　内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":1},{"title":"图2.3","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpymemorystruct","line":3},{"title":"下面让我们来看看ndarray数组对象是如何在内存中储存的。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":3},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","line":5}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.5　内存结构](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12881207,-0.03914302,0.00821395,-0.02994753,0.06987806,-0.00268731,-0.01438105,-0.0560513,0.02165436,0.00663634,0.08030085,-0.07455759,0.02415991,-0.0000633,-0.0179092,-0.0313284,-0.01181153,-0.01528311,-0.02679376,-0.00026057,0.11678132,-0.01401849,0.0486,-0.04748824,0.01386012,0.08074024,-0.0166785,-0.01468362,-0.00725961,-0.18861465,0.05845201,0.02450121,-0.02207777,-0.01477742,0.07894498,0.00128397,-0.00375393,0.03509733,-0.00592642,0.03835369,0.01722808,-0.00040918,0.01034075,0.02453991,0.01381774,-0.08309038,-0.02323295,-0.01368959,0.01270619,-0.01898374,-0.07156046,-0.02181133,-0.03509391,-0.01515735,0.04482689,0.00319031,0.08882118,0.0506012,0.00969724,0.03374535,0.00708372,0.02848906,-0.19445048,0.04946949,0.07970961,-0.01282967,-0.03690899,0.03039228,0.03261797,0.00435748,-0.05814785,0.0593408,-0.01431787,0.10011418,0.01408708,-0.02677251,0.04984822,-0.0032798,-0.04295316,-0.05332692,-0.06230617,0.06536522,-0.04740383,0.00161917,-0.02248813,0.03122399,0.00374974,0.00121573,0.04191114,-0.02395894,0.03543955,-0.00086316,0.02600451,0.09425215,-0.02812305,-0.02367143,0.09111117,0.06985118,0.00849308,0.08024032,-0.04595719,0.00058071,0.03099221,0.00566803,0.01404658,-0.05708789,-0.03245053,-0.0179331,0.01574335,0.03523898,0.01605396,-0.00431661,0.02676848,-0.04554424,0.03938105,-0.006135,-0.06002043,-0.01354131,-0.08287827,-0.00131251,-0.00454218,-0.01465865,0.04030366,-0.02237685,0.02332303,-0.03622174,-0.01993385,0.02999121,0.06408552,0.02661154,0.08916155,-0.02014516,-0.07725795,-0.02776549,0.01330511,-0.01795079,-0.04371674,0.02108071,0.00673456,-0.06385398,0.01664354,-0.11719983,0.00354523,-0.02645251,-0.10343665,0.0781679,-0.05549175,0.01463982,-0.00324908,-0.03903783,-0.01944222,0.06775645,-0.02582446,-0.04399532,0.03522374,-0.04017179,0.0684898,0.07338909,-0.0419097,-0.015423,-0.01717216,-0.07880636,-0.02701674,0.07347389,-0.0363556,-0.07403959,-0.04705774,0.03191293,-0.03142768,-0.03884298,0.03341824,-0.01870222,-0.01679198,0.02197776,0.07518355,-0.02222396,0.00045284,-0.06209655,0.02397119,0.01246007,-0.0284593,-0.05681728,-0.02611636,0.00137051,-0.00880447,-0.06942955,0.00288798,-0.01325114,0.04060626,0.00960244,-0.01374616,-0.01200718,0.01109246,-0.06811912,-0.03881168,0.02396986,-0.00827784,-0.02113855,0.06925772,-0.08278797,0.10818464,0.00810198,0.01564694,0.0536258,-0.00940363,-0.03033969,0.00296978,-0.0253171,0.03390105,0.03793828,0.0070257,-0.04491507,-0.01085268,-0.02026163,-0.01771254,-0.00246471,0.0548943,0.05404472,0.0421251,0.04056109,0.00464099,-0.09357754,-0.11222281,-0.19267038,0.01840973,0.01568285,-0.07617638,0.00663062,-0.04787217,0.04491961,0.02015533,0.02813462,0.07125801,0.07250893,0.01067411,-0.02939555,-0.01839398,0.00296921,0.03550981,0.07939851,-0.01365955,-0.01578455,0.0282936,0.02793241,0.01369807,-0.01887888,0.01859905,-0.02744732,-0.03017427,0.11474343,0.03112124,0.06244342,0.0205941,0.02841972,0.02819215,-0.05615916,-0.11999727,0.05772057,0.01326251,-0.04970502,0.04909095,-0.03920477,0.01189239,0.01870013,0.02395636,0.02158704,-0.03347564,-0.02493587,0.00450297,-0.02888466,-0.02474215,-0.02826541,0.00832274,0.00092995,0.06645815,-0.00061802,0.05642543,-0.01974608,-0.02519237,-0.05077925,0.02480873,-0.02663784,0.01252353,0.00185756,-0.03281558,0.00873064,-0.06768522,-0.00200876,-0.0619696,-0.02298815,-0.02167824,0.03427733,-0.00003233,-0.03109571,0.15030852,0.03401848,-0.01455344,0.03243656,0.00241203,0.01821002,-0.02785858,0.01700603,-0.05624554,0.03030166,0.03004348,0.0965783,0.01446447,0.03080406,-0.05134765,0.00655504,-0.02525682,0.05621552,0.00327253,-0.04902051,-0.01881491,0.01207992,0.04771209,0.1280013,0.02453559,-0.29035214,0.04121123,-0.00715953,0.00171597,-0.00327361,0.0001484,0.03752062,0.00500296,-0.02331451,0.03234105,-0.03916742,0.00759773,-0.01718471,-0.08071418,-0.01487303,0.01230868,0.0872363,-0.00662619,0.07338916,0.05748782,0.01555121,-0.00532796,0.23342083,-0.00273447,0.03793553,-0.02326855,-0.03583275,0.03953759,0.06837956,-0.0029524,0.00931519,-0.01820301,0.04256456,-0.04812008,0.01612733,0.09894311,0.02035823,-0.01707352,0.03611274,-0.0080021,-0.03467726,-0.00896889,-0.12734297,-0.00252623,0.08590057,-0.02029874,-0.03336175,-0.10727863,-0.02863324,0.01939126,-0.04823514,0.02810429,-0.01404556,0.01793012,0.05274005,0.02362723,0.03279224,-0.04587055,0.00063793,-0.02333537,0.04520808,-0.04849963,0.10477914,0.09775954,0.00981612],"last_embed":{"hash":"e59aef9116a6df4cadf1c1ea454e2a672d197c258039e1def7755dbd44dd8360","tokens":332}}},"text":null,"length":0,"last_read":{"hash":"e59aef9116a6df4cadf1c1ea454e2a672d197c258039e1def7755dbd44dd8360","at":1757414818213},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.1　ndarray对象[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray)#[2.1.5　内存结构](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5)#{1}","lines":[226,247],"size":1363,"outlinks":[{"title":"图2.3","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpymemorystruct","line":1},{"title":"下面让我们来看看ndarray数组对象是如何在内存中储存的。如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":1},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.3.png","line":3}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11330468,-0.04491828,0.01713717,-0.03898043,0.05046302,0.00049144,-0.00321939,-0.04410307,0.02192487,0.01616988,0.07538865,-0.06464218,0.02429941,-0.0261,-0.0044408,-0.02534913,-0.03057834,0.0148022,-0.06629035,-0.01708226,0.12734187,-0.01010443,0.03433745,-0.06151536,0.03084024,0.07830112,-0.03357861,-0.01499754,-0.00410891,-0.2062421,0.06171187,0.01579242,-0.02118687,-0.01493672,0.08339681,-0.03043645,0.01701009,0.02398569,-0.02061442,0.05632687,0.02051671,0.02124798,0.00124054,0.01267525,0.01546235,-0.08175594,-0.01569473,-0.03146171,-0.01109246,-0.00577659,-0.05276203,-0.01779464,-0.05036285,-0.01783618,0.03331878,-0.00375459,0.09111776,0.04089681,-0.01534153,0.04717086,-0.00429568,0.04107643,-0.19223933,0.05608037,0.08780768,-0.03187895,-0.02334861,0.00590994,0.0607519,0.00697101,-0.0815328,0.05752267,-0.02825156,0.11221701,0.01321139,-0.04520905,0.04166209,-0.02966888,-0.05247771,-0.0136518,-0.06619447,0.06423208,-0.06639057,-0.01231834,-0.00330918,0.0250387,0.00247982,-0.00490842,0.03605213,-0.01426178,0.02661274,-0.00645152,0.02774071,0.09986166,-0.01719093,-0.01554486,0.07890645,0.0626615,0.00032901,0.07603182,-0.05663799,0.00468063,0.03562829,-0.00252511,0.01652442,-0.02895922,-0.02705897,-0.04135926,-0.02487219,0.03441929,0.0087515,0.00069736,0.01990661,-0.03448536,0.0450363,0.02003614,-0.06075025,-0.0272571,-0.07955345,-0.00516346,-0.00814434,-0.01483169,0.04803649,-0.01400769,0.00448325,-0.03510338,0.0006458,0.02021908,0.05581141,0.02725251,0.09400011,0.00566857,-0.07761861,-0.01413314,0.00649366,-0.0107789,-0.05916446,0.01294949,0.02303788,-0.04775275,0.02259591,-0.10096625,-0.01477826,-0.03654775,-0.10336807,0.07514179,-0.05831497,0.0114187,-0.00327628,-0.04443971,-0.00459472,0.03966067,-0.02770502,-0.04440214,0.04393623,-0.00455918,0.07232749,0.06236489,-0.02935956,-0.03305748,-0.04937673,-0.06259727,-0.01718204,0.06562249,-0.04871883,-0.07366508,-0.02976845,0.03612587,-0.03096096,-0.04278769,0.0402457,-0.02533021,-0.01383817,-0.01123053,0.07415294,-0.00513282,-0.0048027,-0.05250996,0.02649721,0.01934457,-0.02684035,-0.05913826,-0.01356147,0.00999267,-0.01022831,-0.0740928,0.00656607,0.00607629,0.04340312,0.01496422,-0.03804255,0.01744223,0.01219607,-0.06313441,-0.05088791,0.03130202,-0.01994747,0.01070974,0.06512258,-0.0570633,0.12440654,0.0080045,0.01578101,0.04374227,-0.00889701,-0.00443049,-0.00233465,-0.01624504,0.04905131,0.03368212,0.00912381,-0.05473757,-0.01526275,-0.02570908,-0.02249235,-0.00472547,0.0550565,0.04835746,0.02726823,0.02502115,0.02404212,-0.07883479,-0.11177872,-0.17735445,0.00884347,0.01291189,-0.09230193,0.02567532,-0.05145573,0.00092688,0.02971192,0.00949157,0.06772768,0.07336544,0.03470829,-0.01065472,0.00393438,-0.00452523,0.03169155,0.05755106,-0.04102034,-0.00547826,0.03918939,0.01938339,0.004379,-0.02592692,0.00915228,-0.00982724,-0.00731065,0.12061244,0.01657922,0.0777778,0.01594685,0.0166156,0.00487898,-0.03967253,-0.11173539,0.04597558,0.02865011,-0.05724045,0.03836336,-0.02278631,-0.01202538,0.02394745,0.02686806,0.02275053,-0.00829373,-0.01109009,0.04327308,-0.01425354,-0.03513082,-0.02776901,0.00281484,0.01923185,0.05824234,0.00739687,0.04368463,-0.01698775,-0.01951894,-0.0341114,-0.01066453,-0.0350091,0.01061739,0.005308,-0.05648235,0.00406925,-0.06745132,0.02165269,-0.05822173,-0.02176744,-0.0280946,0.05080301,0.00319366,-0.0349159,0.14476672,0.02598702,-0.01324718,0.01979128,-0.01404904,0.04036927,-0.00432045,0.00380679,-0.05964801,0.05489246,0.05474913,0.09324047,-0.01143741,0.03284213,-0.05892164,0.00970884,-0.01329107,0.05468386,0.00765101,-0.06341717,-0.01463855,0.03447908,0.03415957,0.12285729,0.03703025,-0.28839308,0.00931467,-0.01858425,0.01564412,-0.01110039,-0.01066769,0.04913132,0.00329594,-0.04000616,0.01993118,-0.02619548,0.0126547,-0.00430055,-0.07515934,-0.00883167,0.02498361,0.07251435,0.00329158,0.08282078,0.04555435,0.04040518,0.02760393,0.24381778,-0.04135174,0.03828327,0.00344037,-0.04388833,0.04209107,0.07808271,-0.0100096,0.03205983,0.02096183,0.03513435,-0.06691326,0.00670567,0.09157517,0.02127488,-0.01285572,0.03859429,-0.00772072,-0.04082112,-0.01006454,-0.10501692,-0.01274558,0.07802465,-0.03276282,-0.00957531,-0.10756411,-0.05434888,0.007231,-0.04231339,0.03511289,-0.01994258,0.01343469,0.05030027,0.02970794,0.02502331,-0.05249241,0.00288989,-0.02460439,0.03257283,-0.04793341,0.11112817,0.10663825,0.00156703],"last_embed":{"hash":"3a5827c74b88f1e39c1aa5b6c4550ff50b17f5237da800253d654810e8d1f801","tokens":407}}},"text":null,"length":0,"last_read":{"hash":"3a5827c74b88f1e39c1aa5b6c4550ff50b17f5237da800253d654810e8d1f801","at":1757414818261},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)","lines":[248,461],"size":15101,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"ufunc是universal function的缩写，它是一种能对数组的每个元素进行操作的函数。NumPy内置的许多ufunc函数都是在C语言级别实现的，因此它们的计算速度非常快。让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":3},{"title":"**>>>** x = np.linspace(0, 2*np.pi, 10)# 对数组x中的每个元素进行正弦计算，返回一个同样大小的新数组**>>>** y = np.sin(x)**>>>** yarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":5},{"title":"先用linspace产生一个从0到2*PI的等距离的10个数，然后将其传递给sin函数，由于np.sin是一个ufunc函数，因此它对x中的每个元素求正弦值，然后将结果返回，并且赋值给y。计算之后x中的值并没有改变，而是新创建了一个数组保存结果。如果我们希望将sin函数所计算的结果直接覆盖到数组x上去的话，可以将要被覆盖的数组作为第二个参数传递给ufunc函数。例如：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":7},{"title":"**>>>** t = np.sin(x,x)**>>>** xarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)**>>>** id(t) == id(x)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":9},{"title":"sin函数的第二个参数也是x，那么它所做的事情就是对x中的每给值求正弦值，并且把结果保存到x中的对应的位置中。此时函数的返回值仍然是整个计算的结果，只不过它就是x，因此两个变量的id是相同的(变量t和变量x指向同一块内存区域)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":11},{"title":"我用下面这个小程序，比较了一下numpy.math和Python标准库的math.sin的计算速度：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":13},{"title":"**import** **time****import** **math****import** **numpy** **as** **np** x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = math.sin(t)**print** \"math.sin:\", time.clock() - start x = i * 0.001 **for** i **in** xrange(1000000)x = np.array(x)start = time.clock()np.sin(x,x)**print** \"numpy.sin:\", time.clock() - start _# 输出__# math.sin: 1.15426932753__# numpy.sin: 0.0882399858083_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":15},{"title":"在我的电脑上计算100万次正弦值，numpy.sin比math.sin快10倍多。这得利于numpy.sin在C语言级别的循环计算。numpy.sin同样也支持对单个数值求正弦，例如：numpy.sin(0.5)。不过值得注意的是，对单个数的计算math.sin则比numpy.sin快得多了，让我们看下面这个测试程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":17},{"title":"x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = np.sin(t)**print** \"numpy.sin loop:\", time.clock() - start _# 输出__# numpy.sin loop: 5.72166965355_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":19},{"title":"请注意numpy.sin的计算速度只有math.sin的1/5。这是因为numpy.sin为了同时支持数组和单个值的计算，其C语言的内部实现要比math.sin复杂很多，如果我们同样在Python级别进行循环的话，就会看出其中的差别了。此外，numpy.sin返回的数的类型和math.sin返回的类型有所不同，math.sin返回的是Python的标准float类型，而numpy.sin则返回一个numpy.float64类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":21},{"title":"**>>>** type(math.sin(0.5))<type 'float'>**>>>** type(np.sin(0.5))<type 'numpy.float64'>","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":23},{"title":"通过上面的例子我们了解了如何最有效率地使用math库和numpy库中的数学函数。因为它们各有长短，因此在导入时不建议使用*号全部载入，而是应该使用import numpy as np的方式载入，这样我们可以根据需要选择合适的函数调用。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":25},{"title":"NumPy中有众多的ufunc函数为我们提供各式各样的计算。除了sin这种单输入函数之外，还有许多多个输入的函数，add函数就是一个最常用的例子。先来看一个例子:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":27},{"title":"**>>>** a = np.arange(0,4)**>>>** aarray(0, 1, 2, 3)**>>>** b = np.arange(1,5)**>>>** barray(1, 2, 3, 4)**>>>** np.add(a,b)array(1, 3, 5, 7)**>>>** np.add(a,b,a)array(1, 3, 5, 7)**>>>** aarray(1, 3, 5, 7)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":29},{"title":"add函数返回一个新的数组，此数组的每个元素都为两个参数数组的对应元素之和。它接受第3个参数指定计算结果所要写入的数组，如果指定的话，add函数就不再产生新的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":31},{"title":"由于Python的操作符重载功能，计算两个数组相加可以简单地写为a+b，而np.add(a,b,a)则可以用a+=b来表示。下面是数组的运算符和其对应的ufunc函数的一个列表，注意除号\"/\"的意义根据是否激活__future__.division有所不同。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":33},{"title":"数组对象支持这些操作符，极大地简化了算式的编写，不过要注意如果你的算式很复杂，并且要运算的数组很大的话，会因为产生大量的中间结果而降低程序的运算效率。例如：假设a b c三个数组采用算式x=a*b+c计算，那么它相当于:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":47},{"title":"t = a * bx = t + c**del** t","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":49},{"title":"也就是说需要产生一个数组t保存乘法的计算结果，然后再产生最后的结果数组x。我们可以通过手工将一个算式分解为x = a*b; x += c，以减少一次内存分配。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":51},{"title":"通过组合标准的ufunc函数的调用，可以实现各种算式的数组计算。不过有些时候这种算式不易编写，而针对每个元素的计算函数却很容易用Python实现，这时可以用frompyfunc函数将一个计算单个元素的函数转换成ufunc函数。这样就可以方便地用所产生的ufunc函数对数组进行计算了。让我们来看一个例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":53},{"title":"图2.4","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro01","line":55},{"title":"我们想用一个分段函数描述三角波，三角波的样子如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":55},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","line":57},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":98},{"title":"当我们使用ufunc函数对两个数组进行计算时，ufunc函数会对这两个数组的对应元素进行计算，因此它要求这两个数组有相同的大小(shape相同)。如果两个数组的shape不同的话，会进行如下的广播(broadcasting)处理：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":100},{"title":"让所有输入数组都向其中shape最长的数组看齐，shape中不足的部分都通过在前面加1补齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":102},{"title":"输出数组的shape是输入数组shape的各个轴上的最大值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":104},{"title":"如果输入数组的某个轴和输出数组的对应轴的长度相同或者其长度为1时，这个数组能够用来计算，否则出错","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":105},{"title":"当输入数组的某个轴的长度为1时，沿着此轴运算时都用此轴上的第一组值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":106},{"title":"上述4条规则理解起来可能比较费劲，让我们来看一个实际的例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":108},{"title":"先创建一个二维数组a，其shape为(6,1)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":110},{"title":"**>>>** a = np.arange(0, 60, 10).reshape(-1, 1)**>>>** aarray( 0, 10, 20, 30, 40, 50)**>>>** a.shape(6, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":112},{"title":"再创建一维数组b，其shape为(5,)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":114},{"title":"**>>>** b = np.arange(0, 5)**>>>** barray(0, 1, 2, 3, 4)**>>>** b.shape(5,)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":116},{"title":"计算a和b的和，得到一个加法表，它相当于计算a,b中所有元素组的和，得到一个shape为(6,5)的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":118},{"title":"**>>>** c = a + b**>>>** carray( 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54)**>>>** c.shape(6, 5)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":120},{"title":"由于a和b的shape长度(也就是ndim属性)不同，根据规则1，需要让b的shape向a对齐，于是将b的shape前面加1，补齐为(1,5)。相当于做了如下计算：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":122},{"title":"**>>>** b.shape=1,5**>>>** barray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":124},{"title":"这样加法运算的两个输入数组的shape分别为(6,1)和(1,5)，根据规则2，输出数组的各个轴的长度为输入数组各个轴上的长度的最大值，可知输出数组的shape为(6,5)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":126},{"title":"由于b的第0轴上的长度为1，而a的第0轴上的长度为6，因此为了让它们在第0轴上能够相加，需要将b在第0轴上的长度扩展为6，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":128},{"title":"**>>>** b = b.repeat(6,axis=0)**>>>** barray(0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":130},{"title":"由于a的第1轴的长度为1，而b的第一轴长度为5，因此为了让它们在第1轴上能够相加，需要将a在第1轴上的长度扩展为5，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":132},{"title":"**>>>** a = a.repeat(5, axis=1)**>>>** aarray( 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":134},{"title":"经过上述处理之后，a和b就可以按对应元素进行相加运算了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":136},{"title":"当然，numpy在执行a+b运算时，其内部并不会真正将长度为1的轴用repeat函数进行扩展，如果这样做的话就太浪费空间了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":138},{"title":"由于这种广播计算很常用，因此numpy提供了一个快速产生如上面a,b数组的方法： ogrid对象：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":140},{"title":"**>>>** x,y = np.ogrid0:5,0:5**>>>** xarray(0, 1, 2, 3, 4)**>>>** yarray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":142},{"title":"ogrid是一个很有趣的对象，它像一个多维数组一样，用切片组元作为下标进行存取，返回的是一组可以用来广播计算的数组。其切片下标有两种形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":144},{"title":"开始值:结束值:步长，和np.arange(开始值, 结束值, 步长)类似","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":146},{"title":"开始值:结束值:长度j，当第三个参数为虚数时，它表示返回的数组的长度，和np.linspace(开始值, 结束值, 长度)类似：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":148},{"title":"**>>>** x, y = np.ogrid0:1:4j, 0:1:3j**>>>** xarray( 0. , 0.33333333, 0.66666667, 1. )**>>>** yarray( 0. , 0.5, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":150},{"title":"ogrid为什么不是函数","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":153},{"title":"根据Python的语法，只有在中括号中才能使用用冒号隔开的切片语法，如果ogrid是函数的话，那么这些切片必须使用slice函数创建，这显然会增加代码的长度。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":155},{"title":"利用ogrid的返回值，我能很容易计算x, y网格面上各点的值，或者x, y, z网格体上各点的值。下面是绘制三维曲面 x * exp(x**2 - y**2) 的程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":157},{"title":"**import** **numpy** **as** **np****from** **enthought.mayavi** **import** mlab x, y = np.ogrid-2:2:20j, -2:2:20jz = x * np.exp( - x**2 - y**2) pl = mlab.surf(x, y, z, warp_scale=\"auto\")mlab.axes(xlabel='x', ylabel='y', zlabel='z')mlab.outline(pl)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":159},{"title":"图2.5","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro04","line":161},{"title":"此程序使用mayavi的mlab库快速绘制如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":161},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","line":163},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":167},{"title":"ufunc函数本身还有些方法，这些方法只对两个输入一个输出的ufunc函数有效，其它的ufunc对象调用这些方法时会抛出ValueError异常。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":169},{"title":"**reduce** 方法和Python的reduce函数类似，它沿着axis轴对array进行操作，相当于将<op>运算符插入到沿axis轴的所有子数组或者元素当中。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":171},{"title":"<op>.reduce (array=, axis=0, dtype=None)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":173},{"title":"例如：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":175},{"title":"**>>>** np.add.reduce(1,2,3) _# 1 + 2 + 3_6**>>>** np.add.reduce(1,2,3,4,5,6, axis=1) _# 1,4 + 2,5 + 3,6_array( 6, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":177},{"title":"**accumulate** 方法和reduce方法类似，只是它返回的数组和输入的数组的shape相同，保存所有的中间计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":179},{"title":"**>>>** np.add.accumulate(1,2,3)array(1, 3, 6)**>>>** np.add.accumulate(1,2,3,4,5,6, axis=1)array( 1, 3, 6, 4, 9, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":181},{"title":"**reduceat** 方法计算多组reduce的结果，通过indices参数指定一系列reduce的起始和终了位置。reduceat的计算有些特别，让我们通过一个例子来解释一下：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":183},{"title":"**>>>** a = np.array(1,2,3,4)**>>>** result = np.add.reduceat(a,indices=0,1,0,2,0,3,0)**>>>** resultarray( 1, 2, 3, 3, 6, 4, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":185},{"title":"对于indices中的每个元素都会调用reduce函数计算出一个值来，因此最终计算结果的长度和indices的长度相同。结果result数组中除最后一个元素之外，都按照如下计算得出：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":187},{"title":"if indicesi < indicesi+1: resulti = np.reduce(aindicesi:indicesi+1) else: resulti = aindicesi","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":189},{"title":"而最后一个元素如下计算:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":191},{"title":"np.reduce(aindices-1:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":193},{"title":"因此上面例子中，结果的每个元素如下计算而得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":195},{"title":"1 : a0 = 1 2 : a1 = 2 3 : a0 + a1 = 1 + 2 3 : a2 = 3 6 : a0 + a1 + a2 = 1 + 2 + 3 = 6 4 : a3 = 4 10: a0 + a1 + a2 + a4 = 1+2+3+4 = 10","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":197},{"title":"可以看出result::2和a相等，而result1::2和np.add.accumulate(a)相等。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":199},{"title":"**outer** 方法，<op>.outer(a,b)方法的计算等同于如下程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":201},{"title":"**>>>** a.shape += (1,)*b.ndim**>>>** <op>(a,b)**>>>** a = a.squeeze()","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":203},{"title":"其中squeeze的功能是剔除数组a中长度为1的轴。如果你看不太明白这个等同程序的话，让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":205},{"title":"**>>>** np.multiply.outer(1,2,3,4,5,2,3,4)array( 2, 3, 4, 4, 6, 8, 6, 9, 12, 8, 12, 16, 10, 15, 20)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":207},{"title":"可以看出通过outer方法计算的结果是如下的乘法表：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":209},{"title":"_# 2, 3, 4__# 1__# 2__# 3__# 4__# 5_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":211},{"title":"如果将这两个数组按照等同程序一步一步的计算的话，就会发现乘法表最终是通过广播的方式计算出来的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":213}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11294151,-0.04662047,0.02183754,-0.04109224,0.0510047,-0.00100452,-0.0084644,-0.03832113,0.01734279,0.02087607,0.07068131,-0.06194778,0.02628571,-0.02823774,-0.01222939,-0.02659194,-0.03524371,0.00984006,-0.06026238,-0.00775606,0.12321034,-0.01031518,0.0336024,-0.05779864,0.03245002,0.08248329,-0.03137865,-0.01457287,-0.00476009,-0.20616187,0.06612178,0.02011527,-0.00839184,-0.01445063,0.08991753,-0.02748814,0.02022277,0.01179108,-0.01924761,0.06237261,0.0190375,0.02174309,-0.00938198,0.01440776,0.00787179,-0.07496464,-0.01807972,-0.03283569,-0.00756198,-0.00748316,-0.04711595,-0.02407254,-0.05843077,-0.01411096,0.03564653,-0.01103049,0.09486001,0.03717093,-0.02154949,0.0476364,-0.00666712,0.02979094,-0.19079474,0.05004358,0.09445712,-0.0390125,-0.01891058,-0.0011115,0.06553172,-0.00151847,-0.08427532,0.05455961,-0.03383181,0.11614643,0.0144662,-0.04048858,0.03345872,-0.03045738,-0.04531428,-0.00612692,-0.0677757,0.06545673,-0.06862496,-0.00923526,-0.0016866,0.02407934,-0.00109405,0.00402296,0.03806114,-0.012955,0.02213907,-0.00131332,0.02055539,0.10204827,-0.01211624,-0.01760867,0.08372886,0.05854389,0.00210828,0.07358592,-0.05238575,0.00588622,0.03770003,-0.00085004,0.01717845,-0.02025707,-0.02040167,-0.0437369,-0.02035647,0.02917818,0.00877808,0.00090916,0.02616359,-0.03741419,0.04892487,0.0204959,-0.05898776,-0.01898217,-0.08050249,-0.00691668,-0.01018488,-0.01489608,0.05000878,-0.01773278,0.00344171,-0.03367305,-0.00341776,0.02917519,0.04914903,0.0277131,0.09194557,0.01245369,-0.07533989,-0.01230677,0.00965277,-0.01357812,-0.05933663,0.011379,0.02209264,-0.04986452,0.01493709,-0.10169674,-0.01738553,-0.03251151,-0.0985043,0.06717681,-0.0653094,0.00900654,-0.00517453,-0.04465083,-0.00534935,0.03881706,-0.03527461,-0.0520696,0.03967566,-0.00908517,0.06750724,0.06574531,-0.02922315,-0.02790111,-0.04838926,-0.06487645,-0.01721198,0.06477588,-0.04592704,-0.07745073,-0.02321956,0.04642494,-0.03138886,-0.03869046,0.03680065,-0.03281704,-0.00551116,-0.0163152,0.07610577,-0.01101894,0.00055614,-0.04179342,0.03613042,0.01374024,-0.03100973,-0.06165145,-0.01797797,0.01900388,-0.01434304,-0.07429986,0.00834683,0.0087759,0.03876708,0.01164134,-0.03367226,0.01498657,0.00248293,-0.06213743,-0.04775458,0.03417735,-0.01511938,0.01453981,0.06338307,-0.05051189,0.12711214,0.00738016,0.01852213,0.04612498,-0.0098182,-0.00316018,-0.0051434,-0.01344095,0.05936711,0.02982557,0.01534804,-0.05690613,-0.00670133,-0.02675422,-0.01643234,-0.0017652,0.05567897,0.04335618,0.02829942,0.02760672,0.02492609,-0.0848378,-0.10452662,-0.18114695,0.01375377,0.01713081,-0.09532498,0.03039397,-0.05394246,0.00839014,0.02091151,0.01455136,0.06079291,0.07154878,0.04221497,-0.00431009,-0.00096602,-0.01184958,0.03103909,0.06301378,-0.04061604,-0.00032141,0.03737963,0.01621347,-0.00461548,-0.02840406,0.00702966,-0.00968946,-0.0177028,0.12630269,0.01794129,0.07471004,0.01317761,0.00978977,-0.00148561,-0.0394288,-0.10976908,0.0494227,0.03246822,-0.05135904,0.04648471,-0.02413651,-0.01349417,0.01131737,0.02603621,0.0282928,-0.00397107,-0.00953688,0.04475494,-0.01492041,-0.03274355,-0.02633692,0.0020557,0.02339564,0.05612346,0.01097081,0.04555476,-0.02111957,-0.02710816,-0.03931665,-0.01059973,-0.0274497,0.01857069,0.00899338,-0.05086518,-0.00374598,-0.06809469,0.02302262,-0.05850629,-0.01939953,-0.02628481,0.05373532,-0.0008361,-0.032665,0.14721984,0.0277331,-0.01083693,0.02278871,-0.01934329,0.04619059,0.00130708,0.00473912,-0.06001592,0.05348869,0.05652132,0.09103079,-0.0101354,0.02703117,-0.06697714,0.01819516,-0.00852583,0.05477348,0.00887618,-0.06506538,-0.01629141,0.03455333,0.03877191,0.11917542,0.03406781,-0.29230022,0.00437167,-0.02703637,0.01254902,-0.0116665,-0.00781438,0.05201945,0.01000531,-0.04312782,0.01007439,-0.02928372,0.01315971,-0.00538232,-0.07126517,-0.00271722,0.02865587,0.07060529,0.00025218,0.07568057,0.0399068,0.05258169,0.0262005,0.2342943,-0.04201536,0.02515082,0.00935454,-0.04648384,0.0467821,0.08403192,-0.02127611,0.02882804,0.02004651,0.03942004,-0.06407344,0.00148647,0.09503531,0.01932609,-0.01846767,0.03883577,-0.00957664,-0.03964039,-0.00370191,-0.0961317,-0.00819438,0.07603246,-0.04020588,-0.00822566,-0.10943016,-0.04977364,0.00468415,-0.03956011,0.03930158,-0.01586434,0.00475455,0.05292851,0.02926845,0.01083658,-0.05655976,0.00285528,-0.02947839,0.02478476,-0.04833196,0.11867702,0.10112894,-0.00106977],"last_embed":{"hash":"ebff5dc58834010cdf4e908e5d8bb4038e52e2de1cb055ccc38b1a18816717f3","tokens":417}}},"text":null,"length":0,"last_read":{"hash":"ebff5dc58834010cdf4e908e5d8bb4038e52e2de1cb055ccc38b1a18816717f3","at":1757414818341},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#{1}","lines":[250,344],"size":6841,"outlinks":[{"title":"ufunc是universal function的缩写，它是一种能对数组的每个元素进行操作的函数。NumPy内置的许多ufunc函数都是在C语言级别实现的，因此它们的计算速度非常快。让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":1},{"title":"**>>>** x = np.linspace(0, 2*np.pi, 10)# 对数组x中的每个元素进行正弦计算，返回一个同样大小的新数组**>>>** y = np.sin(x)**>>>** yarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":3},{"title":"先用linspace产生一个从0到2*PI的等距离的10个数，然后将其传递给sin函数，由于np.sin是一个ufunc函数，因此它对x中的每个元素求正弦值，然后将结果返回，并且赋值给y。计算之后x中的值并没有改变，而是新创建了一个数组保存结果。如果我们希望将sin函数所计算的结果直接覆盖到数组x上去的话，可以将要被覆盖的数组作为第二个参数传递给ufunc函数。例如：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":5},{"title":"**>>>** t = np.sin(x,x)**>>>** xarray( 0.00000000e+00, 6.42787610e-01, 9.84807753e-01, 8.66025404e-01, 3.42020143e-01, -3.42020143e-01, -8.66025404e-01, -9.84807753e-01, -6.42787610e-01, -2.44921271e-16)**>>>** id(t) == id(x)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":7},{"title":"sin函数的第二个参数也是x，那么它所做的事情就是对x中的每给值求正弦值，并且把结果保存到x中的对应的位置中。此时函数的返回值仍然是整个计算的结果，只不过它就是x，因此两个变量的id是相同的(变量t和变量x指向同一块内存区域)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":9},{"title":"我用下面这个小程序，比较了一下numpy.math和Python标准库的math.sin的计算速度：:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":11},{"title":"**import** **time****import** **math****import** **numpy** **as** **np** x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = math.sin(t)**print** \"math.sin:\", time.clock() - start x = i * 0.001 **for** i **in** xrange(1000000)x = np.array(x)start = time.clock()np.sin(x,x)**print** \"numpy.sin:\", time.clock() - start _# 输出__# math.sin: 1.15426932753__# numpy.sin: 0.0882399858083_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":13},{"title":"在我的电脑上计算100万次正弦值，numpy.sin比math.sin快10倍多。这得利于numpy.sin在C语言级别的循环计算。numpy.sin同样也支持对单个数值求正弦，例如：numpy.sin(0.5)。不过值得注意的是，对单个数的计算math.sin则比numpy.sin快得多了，让我们看下面这个测试程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":15},{"title":"x = i * 0.001 **for** i **in** xrange(1000000)start = time.clock()**for** i, t **in** enumerate(x): xi = np.sin(t)**print** \"numpy.sin loop:\", time.clock() - start _# 输出__# numpy.sin loop: 5.72166965355_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":17},{"title":"请注意numpy.sin的计算速度只有math.sin的1/5。这是因为numpy.sin为了同时支持数组和单个值的计算，其C语言的内部实现要比math.sin复杂很多，如果我们同样在Python级别进行循环的话，就会看出其中的差别了。此外，numpy.sin返回的数的类型和math.sin返回的类型有所不同，math.sin返回的是Python的标准float类型，而numpy.sin则返回一个numpy.float64类型：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":19},{"title":"**>>>** type(math.sin(0.5))<type 'float'>**>>>** type(np.sin(0.5))<type 'numpy.float64'>","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":21},{"title":"通过上面的例子我们了解了如何最有效率地使用math库和numpy库中的数学函数。因为它们各有长短，因此在导入时不建议使用*号全部载入，而是应该使用import numpy as np的方式载入，这样我们可以根据需要选择合适的函数调用。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":23},{"title":"NumPy中有众多的ufunc函数为我们提供各式各样的计算。除了sin这种单输入函数之外，还有许多多个输入的函数，add函数就是一个最常用的例子。先来看一个例子:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":25},{"title":"**>>>** a = np.arange(0,4)**>>>** aarray(0, 1, 2, 3)**>>>** b = np.arange(1,5)**>>>** barray(1, 2, 3, 4)**>>>** np.add(a,b)array(1, 3, 5, 7)**>>>** np.add(a,b,a)array(1, 3, 5, 7)**>>>** aarray(1, 3, 5, 7)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":27},{"title":"add函数返回一个新的数组，此数组的每个元素都为两个参数数组的对应元素之和。它接受第3个参数指定计算结果所要写入的数组，如果指定的话，add函数就不再产生新的数组。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":29},{"title":"由于Python的操作符重载功能，计算两个数组相加可以简单地写为a+b，而np.add(a,b,a)则可以用a+=b来表示。下面是数组的运算符和其对应的ufunc函数的一个列表，注意除号\"/\"的意义根据是否激活__future__.division有所不同。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":31},{"title":"数组对象支持这些操作符，极大地简化了算式的编写，不过要注意如果你的算式很复杂，并且要运算的数组很大的话，会因为产生大量的中间结果而降低程序的运算效率。例如：假设a b c三个数组采用算式x=a*b+c计算，那么它相当于:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":45},{"title":"t = a * bx = t + c**del** t","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":47},{"title":"也就是说需要产生一个数组t保存乘法的计算结果，然后再产生最后的结果数组x。我们可以通过手工将一个算式分解为x = a*b; x += c，以减少一次内存分配。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":49},{"title":"通过组合标准的ufunc函数的调用，可以实现各种算式的数组计算。不过有些时候这种算式不易编写，而针对每个元素的计算函数却很容易用Python实现，这时可以用frompyfunc函数将一个计算单个元素的函数转换成ufunc函数。这样就可以方便地用所产生的ufunc函数对数组进行计算了。让我们来看一个例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":51},{"title":"图2.4","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro01","line":53},{"title":"我们想用一个分段函数描述三角波，三角波的样子如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":53},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.5.png","line":55}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11665602,-0.04085226,0.02647997,-0.02255603,0.03648962,0.01137467,-0.01744218,-0.04721626,0.01915513,0.02045895,0.07810867,-0.0889944,0.02622102,-0.03038478,-0.00899675,-0.02274291,-0.03407097,0.00359341,-0.04556115,-0.00385796,0.12208705,-0.01344518,0.03531355,-0.03770349,0.01700788,0.08365087,-0.02357848,-0.01705423,-0.01033849,-0.19545779,0.0702252,0.02665348,-0.01844302,-0.02063659,0.0762898,-0.01450353,0.01986817,0.039582,-0.0312626,0.05961447,0.0166475,0.01007432,0.00061013,0.00538156,0.01585141,-0.0862271,-0.00760311,-0.01873844,0.00682899,-0.02949251,-0.05485886,-0.02940542,-0.03758854,-0.02823646,0.03716935,-0.00249786,0.09099374,0.04349873,-0.01563069,0.05419588,-0.00395361,0.03061139,-0.19446364,0.040379,0.08390103,-0.01868171,-0.03061485,0.00343364,0.03444207,0.00816134,-0.07083169,0.0529195,-0.03332965,0.10321254,0.01111832,-0.03720849,0.04701931,-0.01570417,-0.04034954,-0.03366577,-0.07790373,0.07198567,-0.05597678,0.0041696,-0.01142719,0.02461162,0.00742943,-0.0043658,0.0445735,-0.02456484,0.03438081,0.00439512,0.02409977,0.09591398,-0.02071723,-0.03992466,0.09099533,0.07538366,0.01685851,0.07531635,-0.06967182,0.00338865,0.03021616,0.0087616,0.02514304,-0.03880066,-0.02162061,-0.03972291,0.00843565,0.03671209,0.00009431,0.01225151,0.0171591,-0.03118679,0.04147425,-0.00350603,-0.05389439,-0.00699671,-0.07474532,-0.01881577,-0.01617808,-0.01255342,0.04883193,-0.02413584,0.02805673,-0.04203904,-0.01022789,0.01909713,0.06881179,0.02839894,0.08120764,-0.00169121,-0.07373402,-0.02815671,0.01766192,-0.0199266,-0.06272573,0.01192226,0.03351703,-0.05297581,0.02060874,-0.11422714,-0.00871311,-0.03161402,-0.10257564,0.08272151,-0.07107455,0.01483603,-0.01216157,-0.04340833,-0.02314447,0.0634235,-0.03039414,-0.06148222,0.03324871,-0.02048375,0.05749289,0.07563034,-0.02959504,-0.04213807,-0.03282966,-0.06687216,-0.02828844,0.06928286,-0.03115776,-0.07409196,-0.04118913,0.02953584,-0.03588955,-0.03889287,0.05308901,-0.03083092,-0.01308518,0.01017585,0.07638346,-0.00207481,-0.01737344,-0.05892574,0.02366722,0.01568983,-0.0131341,-0.04649006,-0.02016567,-0.00464006,-0.00155832,-0.08318708,0.00579364,-0.01250256,0.03802227,0.0174213,-0.02572157,0.00419696,0.00212158,-0.05997515,-0.03631591,0.02875022,-0.01973685,0.00389749,0.05766874,-0.06708854,0.10791308,0.00390332,0.01680989,0.02762743,-0.01869809,-0.02486014,-0.00445976,-0.00707405,0.04984206,0.02589889,0.0060677,-0.06554984,-0.01520521,-0.02121652,-0.01681019,0.00085245,0.04792292,0.04738029,0.01509544,0.03450155,0.00425168,-0.08740095,-0.11654605,-0.1705249,0.02632449,0.02336829,-0.0902809,0.02844544,-0.06223918,0.0186503,0.03129414,0.02641411,0.07383704,0.0718592,0.01593827,-0.03237017,-0.01117517,-0.01005028,0.01684395,0.06559943,-0.02308303,-0.0110543,0.03721835,0.02511485,0.0093827,-0.03806645,0.01585551,-0.01690822,-0.0085294,0.12929282,0.02495751,0.0559199,0.01886405,0.01374614,0.00782407,-0.04873647,-0.12534054,0.05962746,0.04267517,-0.04855427,0.0391431,-0.02687213,0.00114428,0.0115931,0.02781671,0.02993953,-0.01949384,-0.00725266,0.02403599,-0.02610806,-0.01822412,-0.01159599,0.00279854,0.0045571,0.06666458,0.00184097,0.06014962,-0.01192325,-0.01841581,-0.03753638,0.01422158,-0.02089648,0.01371513,0.00291038,-0.04911683,0.02238037,-0.06100214,0.01315902,-0.06365025,-0.03821015,-0.02306943,0.0317958,0.00271229,-0.03475857,0.15343647,0.02935842,0.00324824,0.01966717,-0.00724096,0.02737831,-0.00568386,0.01501173,-0.06011635,0.05674347,0.02944558,0.10428291,0.00254905,0.01509492,-0.05025046,0.00881939,-0.02987658,0.06853082,0.00462628,-0.04119921,-0.02243862,0.02308279,0.05319009,0.11724021,0.02896157,-0.2907677,0.02755578,-0.02028446,0.02239045,-0.00070656,0.00018048,0.03671023,0.00421225,-0.01789735,0.0103038,-0.0292304,-0.00513821,0.00081692,-0.08699373,-0.00709956,0.02002216,0.07841228,-0.00091093,0.0816584,0.05185275,0.01061411,0.00266312,0.23455194,-0.02250826,0.04611914,-0.0270007,-0.03682109,0.03429146,0.07454266,-0.00702827,0.03085066,-0.0006609,0.066301,-0.04758798,0.00097652,0.08663402,0.0114149,-0.01474376,0.03570365,0.00085404,-0.02947325,0.00635889,-0.12636416,0.00335358,0.07540622,-0.03433513,-0.01714492,-0.09795748,-0.03490915,-0.00169798,-0.03402742,0.02670344,-0.03488349,0.019834,0.05471551,0.02987201,0.0284238,-0.0513657,0.00988089,-0.01512402,0.03954985,-0.03024573,0.11380367,0.10508717,0.00177605],"last_embed":{"hash":"248da6b0da33f7a5f68e3ccd1dd6d7287ad9a01708cdd7b09836bd2d2eb9f01e","tokens":400}}},"text":null,"length":0,"last_read":{"hash":"248da6b0da33f7a5f68e3ccd1dd6d7287ad9a01708cdd7b09836bd2d2eb9f01e","at":1757414818408},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)","lines":[345,413],"size":4883,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"当我们使用ufunc函数对两个数组进行计算时，ufunc函数会对这两个数组的对应元素进行计算，因此它要求这两个数组有相同的大小(shape相同)。如果两个数组的shape不同的话，会进行如下的广播(broadcasting)处理：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":3},{"title":"让所有输入数组都向其中shape最长的数组看齐，shape中不足的部分都通过在前面加1补齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":5},{"title":"输出数组的shape是输入数组shape的各个轴上的最大值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":7},{"title":"如果输入数组的某个轴和输出数组的对应轴的长度相同或者其长度为1时，这个数组能够用来计算，否则出错","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":8},{"title":"当输入数组的某个轴的长度为1时，沿着此轴运算时都用此轴上的第一组值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":9},{"title":"上述4条规则理解起来可能比较费劲，让我们来看一个实际的例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":11},{"title":"先创建一个二维数组a，其shape为(6,1)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":13},{"title":"**>>>** a = np.arange(0, 60, 10).reshape(-1, 1)**>>>** aarray( 0, 10, 20, 30, 40, 50)**>>>** a.shape(6, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":15},{"title":"再创建一维数组b，其shape为(5,)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":17},{"title":"**>>>** b = np.arange(0, 5)**>>>** barray(0, 1, 2, 3, 4)**>>>** b.shape(5,)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":19},{"title":"计算a和b的和，得到一个加法表，它相当于计算a,b中所有元素组的和，得到一个shape为(6,5)的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":21},{"title":"**>>>** c = a + b**>>>** carray( 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54)**>>>** c.shape(6, 5)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":23},{"title":"由于a和b的shape长度(也就是ndim属性)不同，根据规则1，需要让b的shape向a对齐，于是将b的shape前面加1，补齐为(1,5)。相当于做了如下计算：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":25},{"title":"**>>>** b.shape=1,5**>>>** barray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":27},{"title":"这样加法运算的两个输入数组的shape分别为(6,1)和(1,5)，根据规则2，输出数组的各个轴的长度为输入数组各个轴上的长度的最大值，可知输出数组的shape为(6,5)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":29},{"title":"由于b的第0轴上的长度为1，而a的第0轴上的长度为6，因此为了让它们在第0轴上能够相加，需要将b在第0轴上的长度扩展为6，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":31},{"title":"**>>>** b = b.repeat(6,axis=0)**>>>** barray(0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":33},{"title":"由于a的第1轴的长度为1，而b的第一轴长度为5，因此为了让它们在第1轴上能够相加，需要将a在第1轴上的长度扩展为5，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":35},{"title":"**>>>** a = a.repeat(5, axis=1)**>>>** aarray( 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":37},{"title":"经过上述处理之后，a和b就可以按对应元素进行相加运算了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":39},{"title":"当然，numpy在执行a+b运算时，其内部并不会真正将长度为1的轴用repeat函数进行扩展，如果这样做的话就太浪费空间了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":41},{"title":"由于这种广播计算很常用，因此numpy提供了一个快速产生如上面a,b数组的方法： ogrid对象：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":43},{"title":"**>>>** x,y = np.ogrid0:5,0:5**>>>** xarray(0, 1, 2, 3, 4)**>>>** yarray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":45},{"title":"ogrid是一个很有趣的对象，它像一个多维数组一样，用切片组元作为下标进行存取，返回的是一组可以用来广播计算的数组。其切片下标有两种形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":47},{"title":"开始值:结束值:步长，和np.arange(开始值, 结束值, 步长)类似","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":49},{"title":"开始值:结束值:长度j，当第三个参数为虚数时，它表示返回的数组的长度，和np.linspace(开始值, 结束值, 长度)类似：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":51},{"title":"**>>>** x, y = np.ogrid0:1:4j, 0:1:3j**>>>** xarray( 0. , 0.33333333, 0.66666667, 1. )**>>>** yarray( 0. , 0.5, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":53},{"title":"ogrid为什么不是函数","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":56},{"title":"根据Python的语法，只有在中括号中才能使用用冒号隔开的切片语法，如果ogrid是函数的话，那么这些切片必须使用slice函数创建，这显然会增加代码的长度。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":58},{"title":"利用ogrid的返回值，我能很容易计算x, y网格面上各点的值，或者x, y, z网格体上各点的值。下面是绘制三维曲面 x * exp(x**2 - y**2) 的程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":60},{"title":"**import** **numpy** **as** **np****from** **enthought.mayavi** **import** mlab x, y = np.ogrid-2:2:20j, -2:2:20jz = x * np.exp( - x**2 - y**2) pl = mlab.surf(x, y, z, warp_scale=\"auto\")mlab.axes(xlabel='x', ylabel='y', zlabel='z')mlab.outline(pl)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":62},{"title":"图2.5","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro04","line":64},{"title":"此程序使用mayavi的mlab库快速绘制如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":64},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","line":66}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.1060394,-0.03865264,0.02876915,-0.0134394,0.03698534,0.0259617,-0.02636153,-0.05387642,0.01278872,0.01798688,0.08022197,-0.08991934,0.01334982,-0.02509613,-0.01512411,-0.02753158,-0.03866308,0.00961785,-0.04877521,0.00193257,0.10900597,-0.02009152,0.02663345,-0.04606465,0.02284233,0.07998967,-0.04475489,-0.00989978,-0.00563222,-0.20763096,0.06251279,0.04361349,-0.02936001,-0.01966601,0.08143861,-0.02660733,0.0191321,0.03454031,-0.03284838,0.05478084,0.02439015,0.02299539,0.00990006,-0.00350755,0.01557678,-0.09452174,0.00456972,-0.01155235,0.00531559,-0.0214592,-0.04382233,-0.03982481,-0.0264802,-0.0138172,0.03229853,0.00321712,0.08286852,0.04488133,-0.02012569,0.05563885,-0.00140298,0.01723799,-0.18934515,0.03924385,0.07388651,-0.01049029,-0.02374799,-0.00097284,0.04564172,0.00965863,-0.06560488,0.04898902,-0.03826278,0.09898193,0.00377533,-0.04441009,0.04667663,-0.00940515,-0.05278585,-0.01687067,-0.07695384,0.07332846,-0.05132936,-0.0048415,-0.01812221,0.02578312,0.00284279,-0.0080069,0.04260551,-0.02561503,0.02308298,0.00919481,0.01827478,0.09845082,-0.01188307,-0.04964983,0.08405576,0.06449188,0.00940844,0.06605304,-0.06898309,0.0053182,0.04676122,0.01351891,0.01439566,-0.0350687,-0.02201553,-0.03956695,-0.0085361,0.0350081,0.0056658,0.01029526,0.00959147,-0.02585611,0.04072646,0.00426204,-0.05398564,0.00718733,-0.08472386,-0.01767685,-0.01936545,0.00116545,0.04828829,-0.03053882,0.02062729,-0.04403634,-0.01165995,0.01334693,0.06364863,0.04191364,0.07346343,0.01140244,-0.07768463,-0.02875294,0.0155803,-0.01870021,-0.05919372,0.00795365,0.01828011,-0.05561252,0.02396991,-0.10568041,-0.00441257,-0.03709152,-0.09551152,0.08167344,-0.07137836,0.01255532,-0.01959332,-0.03986496,-0.01448716,0.04741535,-0.03108823,-0.06763423,0.03112642,-0.01138482,0.05763219,0.0724305,-0.03296492,-0.04212888,-0.03601282,-0.06276415,-0.02572588,0.05723137,-0.02876167,-0.07895435,-0.03300497,0.0276508,-0.02203645,-0.03301145,0.04628476,-0.02636683,-0.00361465,0.00914572,0.0768564,0.00946548,-0.00999899,-0.04655921,0.04142502,0.01680415,-0.00647366,-0.04544863,-0.00785802,-0.01020168,-0.00414134,-0.08392617,0.0124772,0.00341072,0.058296,0.01515688,-0.01563232,0.00545525,0.00448302,-0.05115476,-0.04328613,0.02044707,-0.01408957,0.02040002,0.05923599,-0.06274085,0.09753978,-0.00076374,0.02075172,0.03209029,-0.00404822,-0.01879579,-0.00435792,-0.00477806,0.0468508,0.03698725,0.00551336,-0.06073824,-0.01234133,-0.01525398,-0.02514979,-0.00457201,0.05774495,0.0552455,0.00809489,0.03114479,-0.00021477,-0.09250472,-0.11448775,-0.17460841,0.00722136,0.01279806,-0.09646346,0.02183421,-0.06543127,0.02067006,0.04089841,0.03350022,0.06796717,0.07876259,0.01978243,-0.02846606,-0.01257531,-0.0126803,0.02440006,0.06013547,-0.02408837,-0.00572449,0.02638025,0.01125153,0.00667281,-0.04670938,0.01946699,-0.01487917,0.00188796,0.13214296,0.01601113,0.06759892,0.03400015,0.00598583,0.01631037,-0.04903848,-0.11603557,0.05060319,0.03665197,-0.06150351,0.04418849,-0.03801849,-0.00302723,0.00079799,0.02346737,0.04469683,-0.01884863,-0.00598158,0.0217098,-0.01406734,-0.01983253,-0.02232463,0.00821524,-0.00482309,0.07766705,0.00336541,0.06717267,-0.00161043,-0.02070421,-0.03068931,-0.00028872,-0.00456822,0.02598104,0.00598744,-0.03982473,0.01442262,-0.07183137,-0.00831019,-0.05673786,-0.04016654,-0.02327931,0.0361802,-0.00616702,-0.03053298,0.15413627,0.03596819,-0.00647311,0.02003172,-0.00526735,0.03269056,-0.0024191,0.01266225,-0.05391994,0.0545245,0.0378701,0.09391388,-0.00873223,0.01315203,-0.05098061,0.0132239,-0.0329626,0.07095144,-0.0019295,-0.03224837,-0.01704716,0.03422639,0.04844191,0.10667739,0.01355633,-0.30099371,0.01982019,-0.02403917,0.02728803,-0.00374474,-0.00731213,0.03789201,0.00763146,-0.02766043,0.00886314,-0.04353046,-0.00680489,0.00096987,-0.09248497,-0.00431355,0.02400409,0.07066117,-0.00133352,0.08434013,0.0458473,0.02315587,0.01165869,0.24780303,-0.03336905,0.04673706,-0.02145885,-0.04588775,0.03939206,0.07869566,0.00587842,0.02140794,-0.00230097,0.05578662,-0.06295618,0.00104396,0.09130239,0.00767623,-0.01609034,0.04110562,-0.00785101,-0.0194924,-0.00014826,-0.12361706,0.00693221,0.07351901,-0.01309837,-0.01388336,-0.08419939,-0.01950805,-0.009818,-0.04445178,0.0336813,-0.03963865,0.01582095,0.05717377,0.04040642,0.02460332,-0.04403158,0.00776854,-0.01986641,0.02397826,-0.05531842,0.11667282,0.10639522,0.0091815],"last_embed":{"hash":"63d7f343982241f0e7775bf887dc2e75839a6bfb9ea800673da88227f5f8370b","tokens":376}}},"text":null,"length":0,"last_read":{"hash":"63d7f343982241f0e7775bf887dc2e75839a6bfb9ea800673da88227f5f8370b","at":1757414818469},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{1}","lines":[347,348],"size":182,"outlinks":[{"title":"当我们使用ufunc函数对两个数组进行计算时，ufunc函数会对这两个数组的对应元素进行计算，因此它要求这两个数组有相同的大小(shape相同)。如果两个数组的shape不同的话，会进行如下的广播(broadcasting)处理：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{2}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11039054,-0.03911964,0.02288859,-0.01358899,0.04265584,0.01805736,-0.02267269,-0.05764044,0.01310635,0.01149194,0.08157052,-0.08687697,0.01045611,-0.0253334,-0.0147974,-0.03479602,-0.03301206,0.00389005,-0.04044237,-0.003326,0.11484843,-0.01732584,0.04122775,-0.05003223,0.01560724,0.08330263,-0.03948359,-0.01582889,-0.01349197,-0.20325522,0.06634507,0.03312099,-0.0218439,-0.01745816,0.07391466,-0.01309998,0.01935885,0.03962417,-0.02059149,0.05613459,0.01822416,0.01459327,0.01281405,0.0111875,0.01275143,-0.09152985,-0.00240685,-0.01366585,0.01047437,-0.02981996,-0.04768245,-0.03784439,-0.0290661,-0.01692959,0.03938331,0.00436448,0.08316377,0.04529864,-0.01269614,0.05115641,-0.00630218,0.02464207,-0.18935698,0.0418449,0.07714372,-0.01366878,-0.02837955,0.00233508,0.0410432,0.00875217,-0.06491878,0.05553481,-0.03800209,0.09773376,0.00412222,-0.03753548,0.04719959,-0.00617315,-0.0474975,-0.03332743,-0.07284798,0.07420885,-0.03915163,-0.00420744,-0.02740151,0.02819629,0.01233083,-0.00896508,0.04396309,-0.02138048,0.03301134,0.00355251,0.01776092,0.09936865,-0.01151592,-0.03957058,0.09165687,0.06995488,0.01832783,0.07096021,-0.07165881,0.00412617,0.04193807,0.01628404,0.01234836,-0.04950118,-0.01877091,-0.03853831,0.00853145,0.02641566,0.00524226,0.00685951,0.01271394,-0.02971353,0.04329592,-0.00920848,-0.05861985,-0.00598716,-0.08143594,-0.01426629,-0.00933504,-0.00117706,0.04553325,-0.0222153,0.01851992,-0.03961111,-0.01119433,0.01993129,0.06311274,0.03924611,0.07871606,0.00229805,-0.08259112,-0.02481592,0.01441716,-0.01316157,-0.058225,0.01769014,0.0162067,-0.05554077,0.02183464,-0.10273977,-0.00488112,-0.03226985,-0.09853195,0.08652595,-0.07007469,0.0158296,-0.01830882,-0.03182093,-0.01785099,0.05778009,-0.03740678,-0.05717833,0.02723823,-0.02174419,0.06060572,0.06561258,-0.03325799,-0.03453031,-0.03421991,-0.06458611,-0.02443193,0.06816743,-0.0271478,-0.07816045,-0.0410051,0.02743082,-0.02637967,-0.0330414,0.04627725,-0.02642998,-0.00802576,0.01485455,0.07640494,0.00684405,-0.00570287,-0.05427247,0.03389097,0.02127442,-0.0143013,-0.05302823,-0.02043008,-0.01546195,-0.0028331,-0.07589982,0.01488677,-0.00292782,0.04201208,0.02279014,-0.0147294,0.0048754,0.00502356,-0.06511601,-0.04109768,0.02128363,-0.0163961,0.00979902,0.06435595,-0.06691295,0.09647544,0.00225959,0.02536274,0.03365852,-0.0085159,-0.01734463,0.00497056,-0.0091141,0.04642978,0.03157934,-0.0041135,-0.05980979,-0.00962108,-0.01837796,-0.02260865,-0.0039509,0.06134959,0.05154395,0.01212889,0.0325697,-0.0081775,-0.09616078,-0.11051926,-0.17738034,0.01417949,0.01298799,-0.09584735,0.02065043,-0.06353374,0.03424868,0.0327449,0.02775484,0.06444889,0.07575942,0.01869262,-0.03582339,-0.01161412,-0.0098774,0.02239865,0.06216742,-0.02884448,-0.00772718,0.02866191,0.01421255,0.00608813,-0.04420884,0.02175938,-0.02384932,-0.00714072,0.12894329,0.01892552,0.0668452,0.03314644,0.0035233,0.02491377,-0.05508972,-0.11786181,0.05823747,0.02688894,-0.05703668,0.04462456,-0.03083828,-0.00430835,0.00790677,0.02610247,0.03492661,-0.02163101,-0.01029623,0.02194704,-0.01742098,-0.01448105,-0.02322992,0.01431216,-0.00688141,0.07304821,0.00643532,0.06037209,-0.00914926,-0.02224639,-0.03524403,0.011724,-0.01504961,0.02826482,0.00236145,-0.04017819,0.01101818,-0.07512908,-0.00075088,-0.05915754,-0.03554206,-0.03101615,0.0437589,-0.01268258,-0.03262441,0.1456068,0.04161924,-0.0100861,0.015406,-0.00164825,0.02194207,-0.00089577,0.00810344,-0.05468303,0.04841687,0.03053464,0.09986812,0.00050161,0.0088872,-0.04208865,0.00589752,-0.03955133,0.07243969,-0.00625846,-0.04257121,-0.01614355,0.03221035,0.05830166,0.11991388,0.01529135,-0.29548252,0.02524982,-0.02120316,0.03098587,-0.00237383,0.00161739,0.03898437,0.00088133,-0.01639977,0.01251133,-0.04053905,0.0002418,-0.00271523,-0.08822876,-0.00392611,0.01611093,0.07202534,-0.00128722,0.08556066,0.04795449,0.0258758,0.00674335,0.24138243,-0.02033228,0.04432004,-0.02238664,-0.03583803,0.03518709,0.07600173,0.00714132,0.02446907,-0.01110056,0.05735902,-0.05523035,0.00658537,0.08788791,0.01556728,-0.0147842,0.04212414,-0.012883,-0.01752041,-0.00828389,-0.1260355,0.00372648,0.07602584,-0.02189114,-0.01329411,-0.09583018,-0.02716948,-0.00945631,-0.04334613,0.03132595,-0.04198589,0.01840414,0.05698968,0.03570225,0.03536868,-0.04262585,0.00695434,-0.01933644,0.02808861,-0.06059985,0.11651938,0.1065283,0.00746004],"last_embed":{"hash":"b99de0bf58dd55e15416058ce66e053b2840c07c4e5096ae561aa88da37334d9","tokens":323}}},"text":null,"length":0,"last_read":{"hash":"b99de0bf58dd55e15416058ce66e053b2840c07c4e5096ae561aa88da37334d9","at":1757414818516},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{2}","lines":[349,350],"size":115,"outlinks":[{"title":"让所有输入数组都向其中shape最长的数组看齐，shape中不足的部分都通过在前面加1补齐","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{3}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.10507545,-0.03887166,0.02582827,-0.00729108,0.04128972,0.02463385,-0.02043372,-0.06269682,0.01025313,0.00881746,0.07791547,-0.09290889,0.00814518,-0.02367404,-0.01931345,-0.03007624,-0.0338288,0.00312555,-0.04311084,-0.00013549,0.11944551,-0.02101336,0.03727483,-0.05310667,0.0154225,0.08389983,-0.04365657,-0.00910106,-0.01115543,-0.20584026,0.06676429,0.03700992,-0.02468509,-0.01953856,0.07062,-0.01993574,0.01922424,0.0416452,-0.02097214,0.04967127,0.0138143,0.01620603,0.01578758,0.00870158,0.01464246,-0.08969307,0.00073363,-0.00775236,0.00580491,-0.03198626,-0.04629624,-0.03779988,-0.02072114,-0.01671544,0.03890833,0.00366739,0.07831778,0.04642585,-0.01181301,0.05711241,-0.01093603,0.02158003,-0.1864122,0.04151803,0.07274579,-0.01223007,-0.01999971,-0.00225496,0.04203117,0.01311101,-0.06203708,0.05532946,-0.0406092,0.09200924,0.00139158,-0.03911205,0.04905862,-0.00820075,-0.04735148,-0.02844112,-0.07432596,0.07553835,-0.03796159,-0.00220002,-0.03026402,0.02744484,0.00871811,-0.01225656,0.04390094,-0.02153186,0.0296377,0.00555274,0.01528389,0.09235726,-0.0155066,-0.04344623,0.08592881,0.0678673,0.02054289,0.07148297,-0.0720877,0.00305766,0.04245039,0.01793595,0.0075,-0.04959287,-0.01674395,-0.03583333,0.00374943,0.02546727,0.00009868,0.01122245,0.00921274,-0.02460403,0.04496945,-0.00538557,-0.05574866,-0.00424356,-0.08321698,-0.01295393,-0.01040311,0.01391451,0.04312409,-0.02593269,0.02142236,-0.04275773,-0.00621075,0.01250406,0.06783254,0.04371014,0.07210877,0.00618109,-0.08150063,-0.03101621,0.01499733,-0.01395781,-0.05588133,0.01529924,0.0177991,-0.05374927,0.0215492,-0.09977128,-0.0086538,-0.03129528,-0.09637126,0.09088659,-0.07249632,0.01180356,-0.01837766,-0.02598474,-0.01684134,0.05763463,-0.04155969,-0.06624366,0.02783083,-0.0171405,0.05224786,0.06948999,-0.03482256,-0.04049167,-0.03820567,-0.05995428,-0.02266482,0.06093501,-0.02655567,-0.0772061,-0.03700135,0.02562234,-0.01704128,-0.03214056,0.04515759,-0.02371459,-0.0059825,0.01710397,0.07825235,0.01570482,-0.0102929,-0.05695272,0.02990322,0.01891815,-0.00166218,-0.05389988,-0.02010518,-0.02143761,-0.00004408,-0.08053777,0.00994922,-0.00190701,0.04846529,0.01941653,-0.00767438,0.00306917,0.00453226,-0.06372099,-0.04323557,0.01196625,-0.01267528,0.01607015,0.06076976,-0.066779,0.09442236,-0.00156368,0.02247024,0.02840203,0.00006166,-0.02187447,0.01025517,-0.00784882,0.03824417,0.03393583,-0.00229435,-0.06033286,-0.01170885,-0.0121322,-0.02010545,-0.00500313,0.06027107,0.05337779,0.0070007,0.03055418,-0.01024163,-0.10392526,-0.11221436,-0.17785077,0.01355627,0.01121442,-0.10073119,0.01859441,-0.06738306,0.03363299,0.04201433,0.03600958,0.06296167,0.07833099,0.01467094,-0.03756334,-0.0100162,-0.0064861,0.02263399,0.05774432,-0.02923115,-0.00849162,0.02826727,0.01379721,0.00731312,-0.04947561,0.02246834,-0.01517929,0.00096375,0.13390285,0.01981609,0.06664177,0.03904547,-0.0015644,0.02591358,-0.05357154,-0.11428915,0.05676752,0.02680431,-0.0613042,0.04731843,-0.03801347,-0.00233996,0.00617561,0.02473269,0.04081221,-0.02305577,-0.00700653,0.01845563,-0.0143013,-0.01054638,-0.02481444,0.01320628,-0.0058343,0.06957138,0.00939195,0.06031253,-0.00283203,-0.01968467,-0.02817597,0.00870963,-0.0125823,0.02720408,0.00731038,-0.04024026,0.01018821,-0.07674201,-0.00675619,-0.05592706,-0.04008839,-0.0310229,0.04369804,-0.01447321,-0.03602076,0.14779024,0.03976638,-0.00810554,0.02330727,0.0059889,0.01980375,-0.00135363,0.01131914,-0.05329072,0.05534583,0.03610529,0.10249101,-0.00387945,0.00315504,-0.04209251,0.0059682,-0.03956099,0.07686792,-0.00889877,-0.03193992,-0.0132571,0.02998144,0.05425557,0.10959017,0.01171499,-0.29895505,0.0217292,-0.02415168,0.03813705,0.00356357,-0.00344474,0.03575745,-0.00360488,-0.02184959,0.00764374,-0.04735589,-0.00400724,-0.00198515,-0.0913303,-0.00390859,0.01511734,0.06909355,0.00210967,0.0902194,0.04415538,0.02353174,0.00610243,0.24425189,-0.02155134,0.04677577,-0.02795452,-0.03548741,0.03530337,0.07578287,0.01588635,0.02755084,-0.01409138,0.05962432,-0.05251739,0.00456031,0.08826362,0.01282026,-0.01680851,0.04160461,-0.00961373,-0.00613355,-0.00801674,-0.1255701,0.00048599,0.0732964,-0.01332927,-0.01138868,-0.08298008,-0.0197591,-0.01392071,-0.04582744,0.03785311,-0.04650443,0.01598499,0.05532369,0.0394216,0.03214987,-0.04575991,0.00629229,-0.02286344,0.02833199,-0.05988288,0.11329529,0.10724802,0.01133663],"last_embed":{"hash":"61ad9c9df3cd9798c84b8b14ca249fa72a193e73b9c450d7ea806cb0c5753861","tokens":306}}},"text":null,"length":0,"last_read":{"hash":"61ad9c9df3cd9798c84b8b14ca249fa72a193e73b9c450d7ea806cb0c5753861","at":1757414818566},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{3}","lines":[351,351],"size":97,"outlinks":[{"title":"输出数组的shape是输入数组shape的各个轴上的最大值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{4}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11841533,-0.03980245,0.01289845,-0.03243244,0.05919253,-0.00452927,-0.01359251,-0.05150688,0.020567,0.01906914,0.07516318,-0.07626113,0.01696403,-0.02396976,-0.01129449,-0.02748017,-0.01612388,-0.0040386,-0.04018,-0.00242857,0.11721344,-0.01207251,0.04492889,-0.05525755,0.01884058,0.08608008,-0.03341465,-0.01585158,-0.00930667,-0.19298422,0.06057886,0.01288733,-0.01402359,-0.01549565,0.08613338,-0.01315211,0.00949924,0.03322645,-0.01446135,0.04598306,0.01527248,0.00541199,0.01203282,0.01991437,0.00243921,-0.07963738,-0.00569473,-0.02807507,0.00594354,-0.0144301,-0.06046155,-0.02564645,-0.04817384,-0.01908446,0.03300497,-0.00297423,0.0875212,0.04333628,-0.00910296,0.03562506,-0.00452517,0.03396017,-0.18993096,0.04987131,0.08154423,-0.02022572,-0.02806915,0.01842099,0.04824762,0.00101843,-0.07390239,0.05561588,-0.03460156,0.10340371,0.01718785,-0.02727601,0.04421793,-0.01036039,-0.04211701,-0.03802133,-0.06756014,0.06960431,-0.05149072,-0.00389026,-0.0266151,0.03104294,0.01036796,0.00185659,0.04173018,-0.01261167,0.03560083,-0.00475136,0.02540304,0.11120685,-0.01439667,-0.02496061,0.08460706,0.07682309,0.02029377,0.07889249,-0.06223797,0.00322123,0.03492406,0.00990484,0.01706304,-0.05323527,-0.03113886,-0.03593043,0.00352543,0.02652751,0.01263656,0.00897139,0.02453777,-0.03908207,0.04497503,0.00151006,-0.0561295,-0.0216835,-0.07853739,-0.00390694,-0.00690055,-0.01779027,0.04221329,-0.02171843,0.01786363,-0.03851164,-0.01078885,0.02979596,0.06105891,0.03348668,0.08251713,-0.00616579,-0.08184776,-0.01974285,0.01346922,-0.02013548,-0.0605651,0.0229824,0.02025841,-0.06375451,0.02298675,-0.11234317,-0.00660498,-0.03280463,-0.10880975,0.07656139,-0.06312058,0.01246777,-0.0139862,-0.0479575,-0.01940661,0.05128338,-0.03816512,-0.04643894,0.03996106,-0.02146323,0.06612102,0.0754431,-0.02622677,-0.03207958,-0.01793231,-0.06801824,-0.03126752,0.07181511,-0.03451534,-0.07462656,-0.05007606,0.03200585,-0.03700137,-0.04206698,0.03262514,-0.02081932,-0.00708996,0.00704439,0.06605089,-0.01398185,0.00712815,-0.05907761,0.02502462,0.02120097,-0.02824907,-0.05446086,-0.02210418,0.00158672,-0.00039614,-0.07748447,0.01129771,-0.00869619,0.0292182,0.02124598,-0.03034322,-0.00429196,0.01433136,-0.06130693,-0.03252809,0.03175116,-0.01145632,0.00473494,0.07588918,-0.07170685,0.11588605,0.0124555,0.01532455,0.04892781,-0.01088887,-0.01665629,0.00120875,-0.01221307,0.05405794,0.02000936,0.003189,-0.05323022,-0.01065588,-0.02530036,-0.03335254,0.0045097,0.05153272,0.04909306,0.02621824,0.0316845,0.01066402,-0.08529403,-0.10405266,-0.18385601,0.0122287,0.01570114,-0.08444206,0.01986297,-0.05433248,0.03164465,0.02290425,0.03030997,0.07005034,0.07779884,0.02288016,-0.02912078,-0.00867897,0.00163619,0.03114776,0.06282988,-0.02888284,-0.00895823,0.03543029,0.02412448,-0.00124717,-0.0269078,0.01884403,-0.01539646,-0.01909038,0.11994039,0.02341598,0.07235309,0.0178808,0.01547522,0.02666274,-0.04550873,-0.12838839,0.06085451,0.02710355,-0.05773147,0.03458205,-0.02350372,-0.00190397,0.01405158,0.02624196,0.02299825,-0.02089123,-0.01188884,0.02791229,-0.01974696,-0.03032736,-0.02426852,0.01550045,0.00039066,0.06944456,0.00565101,0.06296635,-0.01821125,-0.01830447,-0.05546038,0.01062486,-0.03006073,0.00890227,0.00029307,-0.04466668,0.00360515,-0.05732401,0.0144511,-0.06462516,-0.02550355,-0.02499634,0.04516727,0.00744375,-0.03074426,0.14698,0.02744705,-0.01315704,0.0089986,-0.00546574,0.0244778,-0.01751759,0.01087779,-0.06009813,0.04206541,0.0398357,0.10464244,0.0148537,0.01796592,-0.03881449,0.00610141,-0.03222115,0.06464077,0.00086241,-0.05834188,-0.01259899,0.02470019,0.04672424,0.12295935,0.02103945,-0.2928082,0.02779844,-0.00714115,0.01897475,-0.00141852,-0.00137387,0.04541081,0.00670947,-0.02694895,0.01938679,-0.03074845,0.00395083,-0.01278525,-0.07986488,-0.01478979,0.02286241,0.07664978,0.00042821,0.0736534,0.04802899,0.02487948,0.0098683,0.23011364,-0.01253981,0.03759547,-0.01637413,-0.02289905,0.04723904,0.07450171,-0.00415535,0.01839259,-0.005813,0.05283895,-0.05578331,0.01540456,0.0919509,0.01550359,-0.01599151,0.04159121,-0.00264322,-0.03813984,-0.00687077,-0.11672388,-0.01170511,0.08414503,-0.02615779,-0.0205614,-0.10995694,-0.04232937,0.00717184,-0.04796204,0.02875214,-0.02729992,0.01550022,0.05603783,0.02499635,0.03044381,-0.04641608,-0.00285103,-0.02539071,0.03950003,-0.05831066,0.11277644,0.10460188,-0.0038339],"last_embed":{"hash":"e861e138a3b9d173b3fa5e0c81efb2db3fabbaf5e31f88f725bf60933ffab292","tokens":333}}},"text":null,"length":0,"last_read":{"hash":"e861e138a3b9d173b3fa5e0c81efb2db3fabbaf5e31f88f725bf60933ffab292","at":1757414818611},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{4}","lines":[352,352],"size":116,"outlinks":[{"title":"如果输入数组的某个轴和输出数组的对应轴的长度相同或者其长度为1时，这个数组能够用来计算，否则出错","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{5}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11932631,-0.04144549,0.01349798,-0.03312597,0.05732732,-0.00387608,-0.01408963,-0.05311022,0.01779112,0.0167409,0.07627551,-0.07704534,0.01603739,-0.0230842,-0.01131097,-0.02411596,-0.0149769,-0.00564112,-0.04116702,-0.00462497,0.12022357,-0.01464534,0.04689714,-0.05443789,0.01846204,0.08519648,-0.03095685,-0.01795308,-0.00927105,-0.19100811,0.06054794,0.01385066,-0.0111514,-0.01829486,0.08310298,-0.01254129,0.00941152,0.03355426,-0.01390333,0.04882312,0.01221027,0.00328139,0.01150162,0.0217213,0.0051574,-0.07991946,-0.00823323,-0.02640386,0.00608149,-0.0120741,-0.05970501,-0.02239316,-0.04541329,-0.01776797,0.03617936,-0.00341465,0.08630258,0.04408308,-0.00693283,0.03555903,-0.00775221,0.03769861,-0.18931647,0.05103987,0.08269319,-0.01927398,-0.02718736,0.02155443,0.04831485,0.00332856,-0.07615485,0.05667891,-0.03270943,0.10470533,0.01783812,-0.03085968,0.04191841,-0.01084273,-0.03924795,-0.03779232,-0.06611046,0.07042391,-0.04783865,-0.00717194,-0.02778808,0.03010284,0.00835014,0.00211684,0.03993851,-0.01347915,0.03334339,-0.00366445,0.02418544,0.10997189,-0.01683064,-0.02323321,0.08339007,0.07432789,0.0221279,0.08194564,-0.06329793,0.00487563,0.03425326,0.00725363,0.01340513,-0.05161924,-0.03019223,-0.03605834,0.00541857,0.02638512,0.01056908,0.00775244,0.02332154,-0.03822802,0.04795557,-0.00199784,-0.05444698,-0.01946865,-0.07957537,-0.00623388,-0.00666005,-0.01778215,0.04353214,-0.0215199,0.01271815,-0.04137681,-0.0099833,0.03062123,0.05971639,0.03546679,0.08394066,-0.00637934,-0.07972476,-0.01961753,0.01504154,-0.01403241,-0.0587332,0.02301845,0.01553786,-0.06081268,0.02058442,-0.11130241,-0.00696392,-0.03001005,-0.10925039,0.07726713,-0.06312156,0.01480698,-0.01374685,-0.04686162,-0.01828178,0.05276711,-0.03546935,-0.04577354,0.038977,-0.02077241,0.06851957,0.07445501,-0.02594328,-0.03801208,-0.01972439,-0.06763783,-0.03033679,0.07804844,-0.03408165,-0.07526255,-0.04949933,0.03268572,-0.03530297,-0.04208852,0.03462933,-0.01901307,-0.01092135,0.01209016,0.07031375,-0.01465109,0.0088841,-0.05952471,0.024332,0.02111366,-0.02831031,-0.0581377,-0.02231642,0.00430142,-0.00434028,-0.07621537,0.00953404,-0.00853528,0.02893796,0.01962519,-0.0333325,-0.00245719,0.01298177,-0.06530945,-0.03386971,0.03103557,-0.01216089,-0.0014075,0.07649178,-0.07141684,0.11446345,0.00902306,0.01565367,0.04940032,-0.01628288,-0.01542828,0.00113882,-0.01058013,0.05520141,0.0213569,0.00248396,-0.05394585,-0.00681844,-0.02765265,-0.02986256,0.00136737,0.05455126,0.04383629,0.02677236,0.03030032,0.00675925,-0.08611357,-0.10350323,-0.18384154,0.01581172,0.01758925,-0.08715019,0.01896161,-0.0563403,0.03380381,0.02236581,0.03097632,0.07086824,0.07732405,0.01670906,-0.03077473,-0.00611278,-0.00192321,0.0311582,0.06231347,-0.02997425,-0.00972987,0.03513481,0.02445356,0.00013974,-0.02825027,0.01904701,-0.01827101,-0.01974658,0.11948729,0.02332489,0.07017739,0.01746018,0.01751366,0.02396813,-0.04767073,-0.12679948,0.06142647,0.02506985,-0.05797176,0.03843544,-0.02435393,-0.00010006,0.01499834,0.02755333,0.01966175,-0.02176904,-0.01189116,0.0263312,-0.02241396,-0.02898999,-0.02131721,0.01530367,-0.00158515,0.07047217,0.00335126,0.0625849,-0.02118237,-0.02025955,-0.05437002,0.01079464,-0.03228654,0.01216839,-0.00285275,-0.0438295,0.00339138,-0.05960635,0.01832719,-0.06308868,-0.02504134,-0.0293442,0.04887189,0.0044596,-0.03205512,0.14339188,0.02912918,-0.01257108,0.00913819,-0.00291295,0.02368386,-0.01705872,0.0113165,-0.05796768,0.04090793,0.03678756,0.10496767,0.01508518,0.02197572,-0.03876354,0.005123,-0.03111428,0.06639784,0.00321309,-0.05879527,-0.01245835,0.02326051,0.04847978,0.12383062,0.01944604,-0.29212701,0.0318811,-0.00223567,0.02214823,-0.00269917,-0.00084501,0.04848111,0.00477433,-0.02585266,0.02201456,-0.03506935,0.00197202,-0.0142789,-0.07883085,-0.01392012,0.02086312,0.07640343,0.00297541,0.07137313,0.04990803,0.02399021,0.01053143,0.22837041,-0.01104875,0.0384129,-0.01589164,-0.02090576,0.04831295,0.07230738,-0.00300898,0.02082996,-0.00757394,0.05192478,-0.05555096,0.01185313,0.09189969,0.0167922,-0.01842457,0.04153359,-0.00371712,-0.03841056,-0.00661477,-0.11788379,-0.01163175,0.085001,-0.02687627,-0.01692142,-0.11153565,-0.04199776,0.00519133,-0.04421625,0.02500022,-0.02799346,0.01689539,0.05358455,0.02881672,0.03621962,-0.0492158,-0.00352811,-0.02239004,0.03955868,-0.06270144,0.11237461,0.10105579,0.00110981],"last_embed":{"hash":"d80f8efbc168678cfcf9cc821ec313752b0dbe6c99e36b8cba58c15584198278","tokens":318}}},"text":null,"length":0,"last_read":{"hash":"d80f8efbc168678cfcf9cc821ec313752b0dbe6c99e36b8cba58c15584198278","at":1757414818658},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{5}","lines":[353,354],"size":102,"outlinks":[{"title":"当输入数组的某个轴的长度为1时，沿着此轴运算时都用此轴上的第一组值","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{6}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11888051,-0.03615303,0.02401437,-0.01961997,0.04342421,0.008521,-0.0190717,-0.05807523,0.01569261,0.01612077,0.08211099,-0.08922064,0.01279634,-0.01828896,-0.01224695,-0.02726195,-0.02947499,-0.00275247,-0.04173328,-0.00543951,0.12106175,-0.02313167,0.04247965,-0.04834235,0.01381802,0.07953978,-0.03151076,-0.01009634,-0.0077971,-0.19587852,0.06329281,0.03442338,-0.01389419,-0.01885813,0.07890045,-0.01009616,0.01203634,0.03548545,-0.0214334,0.05013501,0.01570233,0.01374289,0.01466915,0.01237385,0.01610748,-0.08616928,-0.00500022,-0.01809636,-0.00242952,-0.02397493,-0.05542245,-0.02842051,-0.02889197,-0.01452741,0.03474219,0.00390812,0.08032452,0.04642293,-0.00640186,0.04391488,-0.0047487,0.02900149,-0.19078138,0.04304413,0.07708357,-0.01346127,-0.0350596,0.01099738,0.04491367,0.00716491,-0.07072546,0.05029911,-0.03795013,0.10045156,0.00625032,-0.0420067,0.04956089,-0.00912295,-0.04946599,-0.03741528,-0.07153033,0.07348523,-0.04643842,0.00248042,-0.02881705,0.02648405,0.00668841,-0.00281709,0.0395484,-0.02082852,0.03725012,0.00431329,0.01975888,0.09986221,-0.0145528,-0.035412,0.08999787,0.07359487,0.02025242,0.07206921,-0.06486776,0.00344676,0.03811962,0.00857135,0.01263966,-0.04762589,-0.025598,-0.03508564,0.00703626,0.03200312,-0.00105957,0.01063263,0.02184466,-0.03635194,0.04544396,-0.00571833,-0.05611418,-0.00457857,-0.08119597,-0.00632065,-0.01368973,-0.0033379,0.04336959,-0.02749014,0.01511231,-0.03969006,-0.0134862,0.0223689,0.07054769,0.03683059,0.07848913,0.00323672,-0.07607199,-0.02716578,0.01456675,-0.01754889,-0.06329773,0.01901054,0.01233248,-0.06466994,0.02162246,-0.11315509,-0.00388144,-0.03118013,-0.10004127,0.08396871,-0.06657533,0.0117123,-0.01210511,-0.04244345,-0.01581247,0.05869704,-0.02795611,-0.05854924,0.03548938,-0.01949251,0.06422848,0.07281131,-0.03453866,-0.03725744,-0.0249559,-0.06554429,-0.02987259,0.06946828,-0.02750499,-0.06775055,-0.04044092,0.0258853,-0.02758094,-0.03723336,0.04507651,-0.0221072,-0.01211928,0.020586,0.07592728,-0.00250374,0.00351923,-0.05923751,0.02505977,0.01519241,-0.0176638,-0.04806736,-0.01647943,-0.00338515,-0.00827398,-0.07599534,0.00936759,-0.00893368,0.04478801,0.01520943,-0.01435528,0.00737678,0.00834203,-0.05999467,-0.04089221,0.02260231,-0.00992039,0.00259847,0.05986175,-0.07024959,0.10727225,0.00109645,0.015158,0.02773242,-0.01291653,-0.02146048,0.00750589,-0.00896614,0.0426321,0.03252858,0.00434845,-0.05278458,-0.01068246,-0.02509998,-0.01879432,-0.0050851,0.053956,0.04459057,0.01647005,0.0329114,-0.00361688,-0.09101073,-0.11453097,-0.17977647,0.01196355,0.01378861,-0.09523758,0.02839333,-0.05786782,0.03055214,0.03232794,0.03346932,0.07229411,0.06956203,0.01617856,-0.03647018,0.00003708,-0.0073933,0.02551652,0.07083642,-0.02496409,-0.00959491,0.02930068,0.01840833,0.00697739,-0.03233973,0.02432175,-0.02510483,-0.01108533,0.12432662,0.02125514,0.06091845,0.02298127,0.01024303,0.01749312,-0.05096246,-0.11608556,0.05902167,0.02357144,-0.06010993,0.03871012,-0.03372579,-0.00146978,0.01144924,0.02701654,0.02925165,-0.0147721,-0.01890893,0.01950083,-0.02078105,-0.01940105,-0.02509209,0.01747171,-0.00183153,0.07509895,0.00193282,0.05693041,-0.01119433,-0.02273139,-0.04296619,0.01044999,-0.01894484,0.0157978,0.00136496,-0.04150382,0.01512771,-0.07099107,0.00420723,-0.05914253,-0.03379975,-0.02513553,0.04468153,-0.00151577,-0.03324377,0.15520038,0.03496778,-0.01056402,0.02437454,-0.00176524,0.02616643,-0.01056423,0.01390643,-0.05923311,0.04424741,0.02974775,0.09899236,0.00172803,0.01301301,-0.05242871,0.00833345,-0.0352609,0.07172206,0.00040523,-0.0391406,-0.01524864,0.02474914,0.0570799,0.11459348,0.01499894,-0.29695612,0.02918769,-0.0151573,0.0257819,-0.00282928,0.0008085,0.0403091,0.00103911,-0.02629259,0.0173111,-0.04386101,0.0003018,-0.00542324,-0.09012315,-0.00902523,0.01286345,0.07637536,0.00245966,0.08293,0.05144877,0.02298867,0.00959269,0.23924144,-0.01663813,0.04044609,-0.02052659,-0.03263234,0.04138004,0.07388517,-0.00001062,0.01825294,-0.01023175,0.05213189,-0.05445228,0.00747008,0.09295569,0.00539348,-0.01192669,0.0427402,-0.0079815,-0.0324339,-0.00032394,-0.12936151,-0.00103348,0.079915,-0.01674447,-0.02129775,-0.09744246,-0.02493239,-0.00169035,-0.04116886,0.02978797,-0.03345296,0.02227993,0.0565489,0.03527596,0.03631354,-0.04527457,0.00870991,-0.01950669,0.03372714,-0.05298157,0.11385167,0.10895158,0.00861326],"last_embed":{"hash":"fe430ca331054cf301e9ba630c300e288f97f0cc67abcef75eff69f5ff8424e4","tokens":395}}},"text":null,"length":0,"last_read":{"hash":"fe430ca331054cf301e9ba630c300e288f97f0cc67abcef75eff69f5ff8424e4","at":1757414818703},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.1　广播[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6)#{6}","lines":[355,413],"size":4123,"outlinks":[{"title":"上述4条规则理解起来可能比较费劲，让我们来看一个实际的例子。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":1},{"title":"先创建一个二维数组a，其shape为(6,1)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":3},{"title":"**>>>** a = np.arange(0, 60, 10).reshape(-1, 1)**>>>** aarray( 0, 10, 20, 30, 40, 50)**>>>** a.shape(6, 1)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":5},{"title":"再创建一维数组b，其shape为(5,)：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":7},{"title":"**>>>** b = np.arange(0, 5)**>>>** barray(0, 1, 2, 3, 4)**>>>** b.shape(5,)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":9},{"title":"计算a和b的和，得到一个加法表，它相当于计算a,b中所有元素组的和，得到一个shape为(6,5)的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":11},{"title":"**>>>** c = a + b**>>>** carray( 0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54)**>>>** c.shape(6, 5)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":13},{"title":"由于a和b的shape长度(也就是ndim属性)不同，根据规则1，需要让b的shape向a对齐，于是将b的shape前面加1，补齐为(1,5)。相当于做了如下计算：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":15},{"title":"**>>>** b.shape=1,5**>>>** barray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":17},{"title":"这样加法运算的两个输入数组的shape分别为(6,1)和(1,5)，根据规则2，输出数组的各个轴的长度为输入数组各个轴上的长度的最大值，可知输出数组的shape为(6,5)。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":19},{"title":"由于b的第0轴上的长度为1，而a的第0轴上的长度为6，因此为了让它们在第0轴上能够相加，需要将b在第0轴上的长度扩展为6，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":21},{"title":"**>>>** b = b.repeat(6,axis=0)**>>>** barray(0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":23},{"title":"由于a的第1轴的长度为1，而b的第一轴长度为5，因此为了让它们在第1轴上能够相加，需要将a在第1轴上的长度扩展为5，这相当于：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":25},{"title":"**>>>** a = a.repeat(5, axis=1)**>>>** aarray( 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":27},{"title":"经过上述处理之后，a和b就可以按对应元素进行相加运算了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":29},{"title":"当然，numpy在执行a+b运算时，其内部并不会真正将长度为1的轴用repeat函数进行扩展，如果这样做的话就太浪费空间了。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":31},{"title":"由于这种广播计算很常用，因此numpy提供了一个快速产生如上面a,b数组的方法： ogrid对象：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":33},{"title":"**>>>** x,y = np.ogrid0:5,0:5**>>>** xarray(0, 1, 2, 3, 4)**>>>** yarray(0, 1, 2, 3, 4)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":35},{"title":"ogrid是一个很有趣的对象，它像一个多维数组一样，用切片组元作为下标进行存取，返回的是一组可以用来广播计算的数组。其切片下标有两种形式：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":37},{"title":"开始值:结束值:步长，和np.arange(开始值, 结束值, 步长)类似","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":39},{"title":"开始值:结束值:长度j，当第三个参数为虚数时，它表示返回的数组的长度，和np.linspace(开始值, 结束值, 长度)类似：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":41},{"title":"**>>>** x, y = np.ogrid0:1:4j, 0:1:3j**>>>** xarray( 0. , 0.33333333, 0.66666667, 1. )**>>>** yarray( 0. , 0.5, 1. )","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":43},{"title":"ogrid为什么不是函数","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":46},{"title":"根据Python的语法，只有在中括号中才能使用用冒号隔开的切片语法，如果ogrid是函数的话，那么这些切片必须使用slice函数创建，这显然会增加代码的长度。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":48},{"title":"利用ogrid的返回值，我能很容易计算x, y网格面上各点的值，或者x, y, z网格体上各点的值。下面是绘制三维曲面 x * exp(x**2 - y**2) 的程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":50},{"title":"**import** **numpy** **as** **np****from** **enthought.mayavi** **import** mlab x, y = np.ogrid-2:2:20j, -2:2:20jz = x * np.exp( - x**2 - y**2) pl = mlab.surf(x, y, z, warp_scale=\"auto\")mlab.axes(xlabel='x', ylabel='y', zlabel='z')mlab.outline(pl)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":52},{"title":"图2.5","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#fig-numpyintro04","line":54},{"title":"此程序使用mayavi的mlab库快速绘制如","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":54},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.1.png","line":56}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.2　ufunc的方法[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12569407,-0.04445158,0.00772381,-0.02890516,0.05723242,0.00113121,-0.02105647,-0.04347599,0.02522371,0.01984867,0.07370099,-0.07718679,0.01993982,-0.02979496,-0.01610519,-0.02441825,-0.0261317,0.00784875,-0.04140325,0.00114532,0.1276478,-0.02075444,0.04251256,-0.05668093,0.03279449,0.09492635,-0.03797351,-0.01931388,-0.00881073,-0.1933002,0.05875845,0.01830461,-0.02003217,-0.01068125,0.07503123,-0.01916579,0.00712249,0.02185253,-0.0147678,0.05855231,0.01160122,0.00774946,0.00514845,0.01258813,0.00361057,-0.0782482,-0.01347732,-0.02737601,-0.00705868,-0.01613405,-0.05501829,-0.01443318,-0.05103216,-0.03034641,0.01894361,-0.00854416,0.09696478,0.05033769,-0.01253325,0.03717501,-0.00377449,0.03017443,-0.2005417,0.04324241,0.09030858,-0.02136639,-0.01689747,0.01480927,0.05852679,-0.007683,-0.06637707,0.05581815,-0.02396721,0.10649458,0.01469418,-0.02348964,0.04139821,-0.01189049,-0.03543662,-0.02672322,-0.06886904,0.07190496,-0.05026334,-0.00570992,-0.01000169,0.02590427,0.00342235,0.00331244,0.05764449,-0.01697658,0.04075795,-0.01464305,0.01734942,0.10874403,-0.00470705,-0.03104014,0.08795223,0.05726584,0.0163647,0.07473768,-0.05481662,0.00284434,0.02726576,0.01198776,0.01585081,-0.03818745,-0.03370557,-0.04884847,-0.00731815,0.03715048,0.00327749,0.00929683,0.01916343,-0.03580309,0.0394666,0.0257635,-0.0594787,-0.02036501,-0.08000174,-0.01071113,-0.02669145,-0.02502762,0.04745715,-0.0146744,0.00028289,-0.04597165,-0.01916865,0.02778211,0.06564484,0.02950963,0.08556654,-0.00739652,-0.08556626,-0.02066991,0.00424879,-0.02393387,-0.04844924,0.02754345,0.02177139,-0.05697763,0.02357152,-0.11878465,-0.01542027,-0.03301075,-0.11200588,0.06980956,-0.06526191,0.0041361,-0.00999204,-0.04920861,-0.01239395,0.04386172,-0.04075579,-0.05083853,0.03519251,-0.01624997,0.0635491,0.07983224,-0.01950292,-0.03041713,-0.02131112,-0.06707414,-0.03856923,0.06921992,-0.04528281,-0.07186021,-0.03115801,0.03601402,-0.0402096,-0.04241391,0.03345867,-0.02460088,-0.00836835,0.00084564,0.0678634,-0.00958507,0.01093489,-0.04395899,0.0181997,0.02121957,-0.02258722,-0.04754962,-0.02017591,0.01158789,-0.00403477,-0.08048078,0.0081441,-0.00873502,0.03168613,0.02267307,-0.0457733,0.0030868,0.00174974,-0.06319507,-0.03676233,0.03667842,-0.02326818,0.00757154,0.07478426,-0.06560498,0.11357044,0.014075,0.01987027,0.04722727,-0.00756887,-0.01410159,-0.00504484,-0.02304284,0.05096697,0.02773243,0.00537578,-0.0395769,-0.00768627,-0.02117811,-0.02306037,0.00581542,0.05609027,0.04924305,0.02550299,0.0230516,0.00796857,-0.07905192,-0.10328663,-0.17417972,0.01218685,0.01281007,-0.09370303,0.02026087,-0.04992596,0.02309715,0.02571975,0.01412362,0.07109742,0.07561275,0.03557679,-0.02704028,-0.00745699,0.00052817,0.02485845,0.06191212,-0.03574502,-0.00772865,0.0378707,0.01390875,-0.00442323,-0.01689201,0.01693152,-0.01019402,-0.01092096,0.12598822,0.01569527,0.0730501,0.02562631,0.01158966,0.0161096,-0.03801465,-0.12120735,0.05590121,0.02540162,-0.05302612,0.04556172,-0.02089853,-0.00302781,0.02563399,0.03278299,0.03019656,-0.01724629,-0.00898233,0.03878002,-0.00821445,-0.02755442,-0.02577491,0.00969363,0.00808653,0.06674618,0.00428752,0.06217964,-0.02048954,-0.02157554,-0.05115763,0.01110449,-0.01917946,0.01062547,0.01221585,-0.04182706,0.00979375,-0.06598394,0.0222927,-0.06691441,-0.01341731,-0.01959365,0.05104807,0.00579451,-0.03548135,0.15474603,0.03118354,-0.0129732,0.01268021,0.00488539,0.01678634,-0.00974148,0.00789844,-0.04514623,0.03930715,0.05180798,0.09499064,0.01591093,0.02948531,-0.05408623,-0.00251864,-0.02417703,0.06754312,0.00256923,-0.05902689,-0.01734376,0.02195675,0.05199172,0.11846492,0.02561859,-0.28538087,0.01961959,-0.00917383,0.02003049,-0.00624266,-0.01066762,0.048508,0.00340058,-0.04125667,0.01375305,-0.02781813,0.0074538,-0.00437175,-0.07949395,0.00186314,0.02056172,0.07943112,-0.00586945,0.0761742,0.04767253,0.02813453,0.01911628,0.22863723,-0.02629871,0.02943321,-0.01411746,-0.03170503,0.04615742,0.08595999,-0.01439581,0.02311574,-0.00961335,0.06462411,-0.06053342,0.02093063,0.08452214,0.01149844,-0.03236309,0.04268992,-0.00769163,-0.04060136,-0.00237903,-0.11091246,-0.01350456,0.07574387,-0.0278407,-0.0165466,-0.11365987,-0.03828648,0.00266917,-0.03985372,0.02663604,-0.02784144,0.00517668,0.04884115,0.02506704,0.03457164,-0.04553469,-0.00374654,-0.04249898,0.03332542,-0.05186789,0.10864808,0.10762668,0.00077376],"last_embed":{"hash":"e85cc678e430b65e2eb75aefb0097c994821692cf4047d7159a0f59e1fa1aa39","tokens":427}}},"text":null,"length":0,"last_read":{"hash":"e85cc678e430b65e2eb75aefb0097c994821692cf4047d7159a0f59e1fa1aa39","at":1757414818761},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.2　ufunc的方法[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)","lines":[414,461],"size":3228,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"ufunc函数本身还有些方法，这些方法只对两个输入一个输出的ufunc函数有效，其它的ufunc对象调用这些方法时会抛出ValueError异常。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":3},{"title":"**reduce** 方法和Python的reduce函数类似，它沿着axis轴对array进行操作，相当于将<op>运算符插入到沿axis轴的所有子数组或者元素当中。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":5},{"title":"<op>.reduce (array=, axis=0, dtype=None)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":7},{"title":"例如：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":9},{"title":"**>>>** np.add.reduce(1,2,3) _# 1 + 2 + 3_6**>>>** np.add.reduce(1,2,3,4,5,6, axis=1) _# 1,4 + 2,5 + 3,6_array( 6, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":11},{"title":"**accumulate** 方法和reduce方法类似，只是它返回的数组和输入的数组的shape相同，保存所有的中间计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":13},{"title":"**>>>** np.add.accumulate(1,2,3)array(1, 3, 6)**>>>** np.add.accumulate(1,2,3,4,5,6, axis=1)array( 1, 3, 6, 4, 9, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":15},{"title":"**reduceat** 方法计算多组reduce的结果，通过indices参数指定一系列reduce的起始和终了位置。reduceat的计算有些特别，让我们通过一个例子来解释一下：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":17},{"title":"**>>>** a = np.array(1,2,3,4)**>>>** result = np.add.reduceat(a,indices=0,1,0,2,0,3,0)**>>>** resultarray( 1, 2, 3, 3, 6, 4, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":19},{"title":"对于indices中的每个元素都会调用reduce函数计算出一个值来，因此最终计算结果的长度和indices的长度相同。结果result数组中除最后一个元素之外，都按照如下计算得出：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":21},{"title":"if indicesi < indicesi+1: resulti = np.reduce(aindicesi:indicesi+1) else: resulti = aindicesi","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":23},{"title":"而最后一个元素如下计算:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":25},{"title":"np.reduce(aindices-1:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":27},{"title":"因此上面例子中，结果的每个元素如下计算而得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":29},{"title":"1 : a0 = 1 2 : a1 = 2 3 : a0 + a1 = 1 + 2 3 : a2 = 3 6 : a0 + a1 + a2 = 1 + 2 + 3 = 6 4 : a3 = 4 10: a0 + a1 + a2 + a4 = 1+2+3+4 = 10","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":31},{"title":"可以看出result::2和a相等，而result1::2和np.add.accumulate(a)相等。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":33},{"title":"**outer** 方法，<op>.outer(a,b)方法的计算等同于如下程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":35},{"title":"**>>>** a.shape += (1,)*b.ndim**>>>** <op>(a,b)**>>>** a = a.squeeze()","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":37},{"title":"其中squeeze的功能是剔除数组a中长度为1的轴。如果你看不太明白这个等同程序的话，让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":39},{"title":"**>>>** np.multiply.outer(1,2,3,4,5,2,3,4)array( 2, 3, 4, 4, 6, 8, 6, 9, 12, 8, 12, 16, 10, 15, 20)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":41},{"title":"可以看出通过outer方法计算的结果是如下的乘法表：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":43},{"title":"_# 2, 3, 4__# 1__# 2__# 3__# 4__# 5_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":45},{"title":"如果将这两个数组按照等同程序一步一步的计算的话，就会发现乘法表最终是通过广播的方式计算出来的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":47}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.2　ufunc的方法[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12480104,-0.0370368,0.00662929,-0.01584974,0.05968498,0.00476514,-0.04762515,-0.00831565,0.0413873,0.00941327,0.06592678,-0.08251394,0.0325409,-0.0272642,-0.02600925,-0.03863345,-0.03525781,0.01848814,-0.06232741,-0.00763643,0.11864335,-0.02524821,0.0216605,-0.04687788,0.04498757,0.08601139,-0.04756892,-0.02774071,-0.01247055,-0.19941017,0.07383499,0.01597697,-0.00824942,-0.00406028,0.0737402,-0.00615204,0.01668586,0.01457601,-0.02461793,0.05111364,0.01784858,0.02039022,0.01842506,0.0218643,0.02104629,-0.06008339,-0.01630777,-0.01378171,-0.00966871,-0.01835345,-0.06561861,-0.0321947,-0.06580819,-0.02526996,0.02080105,-0.01824301,0.09019643,0.05250913,-0.01151791,0.03894647,-0.00261801,0.01753584,-0.20267105,0.04471445,0.09798761,-0.02508973,-0.0162517,0.00939365,0.05954311,-0.00574141,-0.08418819,0.05454644,-0.01374051,0.09984212,-0.0035772,-0.04588415,0.04478576,-0.005445,-0.02293544,-0.02945558,-0.05087754,0.06221192,-0.05930414,-0.00745383,0.01075811,0.01148069,0.00924624,0.00231789,0.05786698,-0.02899702,0.03582978,-0.01596027,0.00577177,0.10416843,-0.01988061,-0.03773361,0.06307745,0.06981732,0.01023147,0.07208291,-0.06186822,-0.00590937,0.02424583,0.01364588,0.0179716,-0.049405,-0.01894674,-0.05131828,-0.01248515,0.04476772,-0.00345592,0.00133676,0.01929952,-0.03755822,0.04119503,0.02015224,-0.05966969,-0.00596907,-0.10210987,-0.00393531,-0.02800636,-0.00236675,0.05165635,-0.01464929,0.02098071,-0.04242165,-0.0290004,0.02384044,0.06036292,0.0324273,0.08280476,-0.02643144,-0.08569615,-0.02009929,0.02514494,-0.0139908,-0.04211437,0.03565638,0.01403657,-0.03172299,0.02122804,-0.1151235,-0.00994707,-0.03940957,-0.10272904,0.06838898,-0.05766374,0.00523253,-0.01329277,-0.05003211,-0.00443095,0.03826322,-0.03595101,-0.05551703,0.02862448,-0.00153187,0.06959058,0.07206853,-0.0331885,-0.02085805,-0.02143103,-0.06977949,-0.04040481,0.06633782,-0.05515471,-0.07655306,-0.02457967,0.05119361,-0.02333706,-0.03150989,0.02605004,-0.01174774,-0.0138072,-0.00852609,0.07686375,-0.01974897,0.00512976,-0.02423078,0.03704103,0.01850585,-0.00700961,-0.03760505,-0.00672946,0.00863327,0.00381733,-0.05061036,0.01481133,0.0197294,0.03849585,0.0070445,-0.064422,-0.00551526,0.0138955,-0.05580056,-0.03372568,0.0458119,-0.01698691,0.01901247,0.06419996,-0.04062957,0.13314857,0.01284427,0.01405316,0.05327151,0.00909875,0.00644077,0.00290326,-0.01537013,0.05487767,0.03605974,-0.00591213,-0.05919581,0.00926866,-0.01005196,-0.0212659,0.00237927,0.05652402,0.06018941,0.02001411,0.01276624,0.02683537,-0.08536189,-0.09356409,-0.18759769,0.00264354,0.02939498,-0.10148212,0.02600678,-0.0515229,0.00058295,0.02386318,0.00648375,0.08539996,0.06986396,0.04044019,-0.02940002,-0.02574491,-0.00069203,0.01900063,0.05633892,-0.02976444,-0.02801969,0.03086592,0.01337435,-0.00789901,-0.01805677,0.0135294,-0.01029953,-0.00724547,0.13312772,0.01031662,0.07504304,0.03229042,-0.00554178,0.02066363,-0.02257372,-0.11000927,0.039022,0.04262055,-0.05499819,0.03479794,-0.02403071,-0.01189084,0.03054428,0.04231367,0.03746755,-0.02881311,-0.00330643,0.0398902,-0.00924944,-0.02088519,-0.00606964,0.02746341,0.01566823,0.06454003,-0.0069994,0.05223733,-0.00191842,-0.02818722,-0.07018819,0.01966445,-0.02459197,-0.00405969,0.01972496,-0.06195749,-0.00397493,-0.06474397,0.02865043,-0.03977529,-0.02393619,-0.00040982,0.02871073,0.02405994,-0.03528825,0.14717826,0.02694689,-0.0089467,-0.00304258,0.00018938,0.00932092,0.00194067,0.00090774,-0.05075375,0.0461081,0.06960169,0.08783875,0.01703525,0.02938125,-0.05234579,0.0023783,-0.02583844,0.04650048,-0.00194293,-0.04052581,-0.02720764,0.00602247,0.04837931,0.1187437,0.0158483,-0.2945357,0.028059,-0.02062634,0.01486937,-0.02099614,0.00204088,0.05641568,0.01804615,-0.03335586,0.00125847,-0.04976916,0.02061001,-0.00506151,-0.05430706,-0.0133691,0.0313095,0.05401172,-0.02197951,0.07622305,0.04838077,0.03501835,0.02469543,0.22072148,-0.03166782,0.02921292,-0.00998388,-0.03525046,0.04184503,0.06861896,-0.01047698,0.02323623,-0.01125239,0.05685685,-0.05199729,0.03282294,0.0734069,-0.010267,-0.03084201,0.05776065,-0.00609873,-0.04919538,-0.00626418,-0.11195721,-0.01869639,0.09509569,-0.02981084,-0.02998801,-0.11395796,-0.0401794,0.01049047,-0.03669441,0.02959337,-0.02209326,0.00119194,0.03553694,0.02759258,0.02184257,-0.03977892,0.01889521,-0.0488734,0.03564233,-0.06438953,0.08935621,0.09845199,-0.01033074],"last_embed":{"hash":"073806ce1cf7c9d29bb0a26948c36f47e8daa76d6e34bcf5b8d936254094cf95","tokens":437}}},"text":null,"length":0,"last_read":{"hash":"073806ce1cf7c9d29bb0a26948c36f47e8daa76d6e34bcf5b8d936254094cf95","at":1757414818825},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#2.2　ufunc运算[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc)#2.2.2　ufunc的方法[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)#{1}","lines":[416,461],"size":3079,"outlinks":[{"title":"ufunc函数本身还有些方法，这些方法只对两个输入一个输出的ufunc函数有效，其它的ufunc对象调用这些方法时会抛出ValueError异常。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":1},{"title":"**reduce** 方法和Python的reduce函数类似，它沿着axis轴对array进行操作，相当于将<op>运算符插入到沿axis轴的所有子数组或者元素当中。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":3},{"title":"<op>.reduce (array=, axis=0, dtype=None)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":5},{"title":"例如：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":7},{"title":"**>>>** np.add.reduce(1,2,3) _# 1 + 2 + 3_6**>>>** np.add.reduce(1,2,3,4,5,6, axis=1) _# 1,4 + 2,5 + 3,6_array( 6, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":9},{"title":"**accumulate** 方法和reduce方法类似，只是它返回的数组和输入的数组的shape相同，保存所有的中间计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":11},{"title":"**>>>** np.add.accumulate(1,2,3)array(1, 3, 6)**>>>** np.add.accumulate(1,2,3,4,5,6, axis=1)array( 1, 3, 6, 4, 9, 15)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":13},{"title":"**reduceat** 方法计算多组reduce的结果，通过indices参数指定一系列reduce的起始和终了位置。reduceat的计算有些特别，让我们通过一个例子来解释一下：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":15},{"title":"**>>>** a = np.array(1,2,3,4)**>>>** result = np.add.reduceat(a,indices=0,1,0,2,0,3,0)**>>>** resultarray( 1, 2, 3, 3, 6, 4, 10)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":17},{"title":"对于indices中的每个元素都会调用reduce函数计算出一个值来，因此最终计算结果的长度和indices的长度相同。结果result数组中除最后一个元素之外，都按照如下计算得出：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":19},{"title":"if indicesi < indicesi+1: resulti = np.reduce(aindicesi:indicesi+1) else: resulti = aindicesi","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":21},{"title":"而最后一个元素如下计算:","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":23},{"title":"np.reduce(aindices-1:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":25},{"title":"因此上面例子中，结果的每个元素如下计算而得：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":27},{"title":"1 : a0 = 1 2 : a1 = 2 3 : a0 + a1 = 1 + 2 3 : a2 = 3 6 : a0 + a1 + a2 = 1 + 2 + 3 = 6 4 : a3 = 4 10: a0 + a1 + a2 + a4 = 1+2+3+4 = 10","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":29},{"title":"可以看出result::2和a相等，而result1::2和np.add.accumulate(a)相等。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":31},{"title":"**outer** 方法，<op>.outer(a,b)方法的计算等同于如下程序：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":33},{"title":"**>>>** a.shape += (1,)*b.ndim**>>>** <op>(a,b)**>>>** a = a.squeeze()","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":35},{"title":"其中squeeze的功能是剔除数组a中长度为1的轴。如果你看不太明白这个等同程序的话，让我们来看一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":37},{"title":"**>>>** np.multiply.outer(1,2,3,4,5,2,3,4)array( 2, 3, 4, 4, 6, 8, 6, 9, 12, 8, 12, 16, 10, 15, 20)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":39},{"title":"可以看出通过outer方法计算的结果是如下的乘法表：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":41},{"title":"_# 2, 3, 4__# 1__# 2__# 3__# 4__# 5_","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":43},{"title":"如果将这两个数组按照等同程序一步一步的计算的话，就会发现乘法表最终是通过广播的方式计算出来的。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":45}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.3　矩阵运算](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11794193,-0.04524735,0.00134093,-0.01845527,0.05139676,-0.00022904,-0.0137965,-0.05668947,0.0283608,0.00191779,0.0777868,-0.07947709,0.02740929,-0.0115024,-0.00094308,-0.03439655,-0.00511188,0.0044975,-0.03830108,-0.01055271,0.10330904,-0.00362319,0.03762082,-0.05581296,0.01542552,0.08969695,-0.02052341,-0.0159882,-0.01315896,-0.1875665,0.07183852,0.02275068,0.0040245,-0.0160309,0.07008987,0.00402375,-0.00005518,0.02851095,-0.01753294,0.04935592,0.01296291,-0.00684766,0.00493476,0.01968729,0.00553789,-0.07326088,-0.01044747,-0.02475794,0.00959569,-0.01872112,-0.0585673,-0.02845444,-0.03923359,-0.01393413,0.02498177,0.01460382,0.07255054,0.04182938,0.00098448,0.04009305,-0.00853847,0.02195532,-0.19803534,0.05038106,0.08175775,-0.01524642,-0.04517171,0.02136338,0.03743704,-0.00208866,-0.06062993,0.05509693,-0.0310744,0.09368788,0.01668692,-0.02613632,0.05017732,0.00348691,-0.03084156,-0.05064422,-0.06715625,0.0645619,-0.05195919,-0.00108455,-0.03273169,0.03424842,0.01995678,-0.00465426,0.04483993,-0.00175645,0.0402123,-0.00187744,0.01576746,0.10609191,-0.01509668,-0.03385162,0.09274088,0.09350117,0.01563404,0.08117131,-0.04979985,0.00783607,0.02425958,0.00701915,0.01332926,-0.06259825,-0.03612864,-0.02907399,0.01859389,0.03241353,-0.00155977,-0.00733523,0.0163892,-0.02969669,0.03961409,-0.01628406,-0.04335175,-0.00834781,-0.07392546,-0.00641921,0.00180073,-0.02582877,0.04752607,-0.02774773,0.02688268,-0.02734041,-0.02330988,0.03988412,0.04755675,0.02169931,0.08639106,-0.01627016,-0.0807409,-0.00108186,0.03353063,-0.02424186,-0.04616239,0.02086791,0.0102003,-0.06673316,0.02214205,-0.11412608,0.01350371,-0.02816199,-0.10948407,0.08069406,-0.06201295,0.01494083,-0.00428073,-0.05142979,-0.01532002,0.06913725,-0.04089304,-0.04560638,0.03339455,-0.02864083,0.07457817,0.06863584,-0.03187003,-0.02934339,-0.02719182,-0.07296492,-0.02403536,0.08221391,-0.03085823,-0.07729976,-0.04775224,0.02872852,-0.03369763,-0.04072928,0.03989663,-0.02434461,-0.01330731,0.01816443,0.06984751,-0.02275679,0.01233036,-0.05783678,0.02792669,0.01835915,-0.03968249,-0.05386085,-0.02053868,-0.01367403,-0.00631374,-0.05984589,0.01024391,-0.01388156,0.02492275,0.01474784,-0.01731333,-0.00603836,0.01585162,-0.07024112,-0.03491961,0.01824213,-0.00972015,-0.0137041,0.06823645,-0.07061516,0.109294,0.01099753,0.02932516,0.04798217,-0.0092974,-0.01953224,0.01443643,-0.01821982,0.04572939,0.02727411,0.00038867,-0.04829003,-0.01555945,-0.03246402,-0.03173534,-0.00237676,0.04521928,0.05140498,0.02860835,0.03746607,-0.00112872,-0.0789334,-0.10836212,-0.1958798,0.02564415,0.01905471,-0.07755452,0.02146416,-0.03977137,0.03538451,0.01641968,0.01982312,0.07603905,0.07714169,0.0217171,-0.04264533,-0.02514162,-0.00633,0.01947432,0.06411473,-0.01862117,-0.02132261,0.02346264,0.02541528,0.01131479,-0.01267341,0.01599435,-0.03000754,-0.0371204,0.13063231,0.01594565,0.06404225,0.01942002,0.01475301,0.01986283,-0.04378578,-0.12556124,0.05483366,0.02785621,-0.05224484,0.04257721,-0.02190314,0.00475051,0.01838389,0.02763274,0.02766035,-0.02527526,-0.01252719,0.01510038,-0.01765905,-0.02686807,-0.02544353,0.01646729,0.01380449,0.06359128,0.00306433,0.05399165,-0.02078292,-0.015632,-0.04110612,0.00858292,-0.03631897,0.01605496,-0.00010408,-0.03223791,0.01526023,-0.06180662,0.01652744,-0.05974254,-0.01787294,-0.04391707,0.03728903,-0.0018774,-0.02314325,0.15724763,0.03952862,-0.01437142,0.01520226,-0.00183502,0.00758069,-0.01580937,0.02041814,-0.04919317,0.03390097,0.03718423,0.09880812,0.02788103,0.03373395,-0.04402865,0.00756675,-0.028395,0.06384923,0.00108023,-0.04331407,-0.02040105,0.02469524,0.06085527,0.12758407,0.01394631,-0.29087514,0.03651241,-0.00968887,0.00144238,-0.00162185,-0.0081284,0.03805733,0.00272784,-0.02530173,0.0207949,-0.02678291,0.00875911,-0.02513955,-0.07653368,-0.00783171,0.01769598,0.08037518,-0.00179714,0.07867118,0.05759186,0.02022885,-0.01283379,0.22743122,-0.01129223,0.04392688,-0.01757679,-0.02281385,0.05556741,0.07329242,-0.0022915,0.02512088,-0.01858419,0.05059624,-0.05783983,0.02197144,0.09453598,0.01159501,-0.01473932,0.02928556,-0.01091358,-0.03483678,-0.00872876,-0.13705496,-0.01273726,0.08492646,-0.03411181,-0.02563605,-0.10617364,-0.0331342,0.00745338,-0.05271117,0.00841788,-0.03773837,0.01401911,0.0554567,0.02097556,0.03733842,-0.03456292,-0.00481543,-0.02588832,0.04267539,-0.06378623,0.11154865,0.10572263,-0.00429548],"last_embed":{"hash":"61dcb07349a704a8059e3ce9cf7afc2c07caa705fae414b053f4c5086c3e3a6c","tokens":389}}},"text":null,"length":0,"last_read":{"hash":"61dcb07349a704a8059e3ce9cf7afc2c07caa705fae414b053f4c5086c3e3a6c","at":1757414818889},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.3　矩阵运算](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)","lines":[462,515],"size":4306,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"2.3　矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":1},{"title":"NumPy和Matlab不一样，对于多维数组的运算，缺省情况下并不使用矩阵运算，如果你希望对数组进行矩阵运算的话，可以调用相应的函数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":3},{"title":"matrix对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":5},{"title":"numpy库提供了matrix类，使用matrix类创建的是矩阵对象，它们的加减乘除运算缺省采用矩阵方式计算，因此用法和matlab十分类似。但是由于NumPy中同时存在ndarray和matrix对象，因此用户很容易将两者弄混。这有违Python的“显式优于隐式”的原则，因此并不推荐在较复杂的程序中使用matrix。下面是使用matrix的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":7},{"title":"**>>>** a = np.matrix(1,2,3,5,5,6,7,9,9)**>>>** a*a**-1matrix( 1.00000000e+00, 1.66533454e-16, -8.32667268e-17, -2.77555756e-16, 1.00000000e+00, -2.77555756e-17, 1.66533454e-16, 5.55111512e-17, 1.00000000e+00)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":9},{"title":"因为a是用matrix创建的矩阵对象，因此乘法和幂运算符都变成了矩阵运算，于是上面计算的是矩阵a和其逆矩阵的乘积，结果是一个单位矩阵。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":11},{"title":"矩阵的乘积可以使用dot函数进行计算。对于二维数组，它计算的是矩阵乘积，对于一维数组，它计算的是其点积。当需要将一维数组当作列矢量或者行矢量进行矩阵运算时，推荐先使用reshape函数将一维数组转换为二维数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":13},{"title":"**>>>** a = array(1, 2, 3)**>>>** a.reshape((-1,1))array(1, 2, 3)**>>>** a.reshape((1,-1))array(1, 2, 3)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":15},{"title":"除了dot计算乘积之外，NumPy还提供了inner和outer等多种计算乘积的函数。这些函数计算乘积的方式不同，尤其是当对于多维数组的时候，更容易搞混。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":17},{"title":"**dot** : 对于两个一维的数组，计算的是这两个数组对应下标元素的乘积和(数学上称之为内积)；对于二维数组，计算的是两个数组的矩阵乘积；对于多维数组，它的通用计算公式如下，即结果数组中的每个元素都是：数组a的最后一维上的所有元素与数组b的倒数第二位上的所有元素的乘积和：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":19},{"title":"dot(a, b)i,j,k,m = sum(ai,j,: * bk,:,m)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":21},{"title":"下面以两个3为数组的乘积演示一下dot乘积的计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":23},{"title":"首先创建两个3维数组，这两个数组的最后两维满足矩阵乘积的条件：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":25},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,2,3)**>>>** c = np.dot(a,b)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":27},{"title":"dot乘积的结果c可以看作是数组a,b的多个子矩阵的乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":29},{"title":"**>>>** np.alltrue( c0,:,0,: == np.dot(a0,b0) )True**>>>** np.alltrue( c1,:,0,: == np.dot(a1,b0) )True**>>>** np.alltrue( c0,:,1,: == np.dot(a0,b1) )True**>>>** np.alltrue( c1,:,1,: == np.dot(a1,b1) )True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":31},{"title":"**inner** : 和dot乘积一样，对于两个一维数组，计算的是这两个数组对应下标元素的乘积和；对于多维数组，它计算的结果数组中的每个元素都是：数组a和b的最后一维的内积，因此数组a和b的最后一维的长度必须相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":34},{"title":"inner(a, b)i,j,k,m = sum(ai,j,:*bk,m,:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":36},{"title":"下面是inner乘积的演示：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":38},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,3,2)**>>>** c = np.inner(a,b)**>>>** c.shape(2, 3, 2, 3)**>>>** c0,0,0,0 == np.inner(a0,0,b0,0)True**>>>** c0,1,1,0 == np.inner(a0,1,b1,0)True**>>>** c1,2,1,2 == np.inner(a1,2,b1,2)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":40},{"title":"**outer** : 只按照一维数组进行计算，如果传入参数是多维数组，则先将此数组展平为一维数组之后再进行运算。outer乘积计算的列向量和行向量的矩阵乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":42},{"title":"**>>>** np.outer(1,2,3,4,5,6,7)array( 4, 5, 6, 7, 8, 10, 12, 14, 12, 15, 18, 21)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":44},{"title":"矩阵中更高级的一些运算可以在NumPy的线性代数子库linalg中找到。例如inv函数计算逆矩阵，solve函数可以求解多元一次方程组。下面是solve函数的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":47},{"title":"**>>>** a = np.random.rand(10,10)**>>>** b = np.random.rand(10)**>>>** x = np.linalg.solve(a,b)**>>>** np.sum(np.abs(np.dot(a,x) - b))3.1433189384699745e-15","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":49},{"title":"solve函数有两个参数a和b。a是一个N*N的二维数组，而b是一个长度为N的一维数组，solve函数找到一个长度为N的一维数组x，使得a和x的矩阵乘积正好等于b，数组x就是多元一次方程组的解。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":51},{"title":"有关线性代数方面的内容将在今后的章节中详细介绍。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":53}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.3　矩阵运算](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11977949,-0.0478258,-0.01071601,-0.01013163,0.04579309,0.00282849,-0.00832842,-0.0504697,0.03853162,0.00874428,0.07927794,-0.07075267,0.02559641,-0.0021432,0.00454097,-0.02704402,-0.00200725,0.01353264,-0.03912457,-0.01610904,0.09059256,-0.00211706,0.03304957,-0.05880992,0.02581997,0.08805539,-0.0241626,-0.02107905,-0.00898392,-0.19204909,0.06872353,0.02957781,0.01601774,-0.0122883,0.07379135,-0.00740127,0.00495063,0.0161853,-0.02179034,0.02775095,0.01119258,0.00151533,0.01157998,0.04291994,0.00147032,-0.06838514,-0.01388594,-0.02111434,0.00737638,-0.0184312,-0.05659546,-0.02148955,-0.04314911,-0.00322893,0.02742288,0.01937589,0.0736542,0.03379473,-0.00016816,0.04721089,-0.00577893,0.00814635,-0.19516188,0.05095008,0.09473268,-0.02616518,-0.04508734,0.01316987,0.04340174,0.00662553,-0.06024277,0.05561255,-0.02596572,0.09158269,0.02617018,-0.01578392,0.04952695,0.009662,-0.03432274,-0.04618926,-0.06319121,0.06150122,-0.04586042,0.00511491,-0.03521135,0.03323241,0.01319416,-0.00368341,0.03252266,0.00162546,0.03006328,0.0078911,0.01044194,0.1022108,-0.01443003,-0.04033674,0.10148653,0.09676684,0.01509352,0.08226392,-0.04958205,0.00688347,0.02731402,0.01415257,0.00525246,-0.05535456,-0.03815449,-0.02475624,0.01779722,0.02584147,0.01088863,-0.01489821,0.01134244,-0.02719632,0.04364913,-0.02192272,-0.03403118,0.00199731,-0.07872871,-0.01642563,-0.00219079,-0.03284365,0.04271154,-0.02724291,0.03088408,-0.02469157,-0.02591617,0.04365958,0.04925785,0.02138548,0.09166533,-0.01226664,-0.0792373,-0.0047143,0.04879792,-0.02915188,-0.04341733,0.0252785,0.00629506,-0.06987011,0.01465463,-0.10685631,0.01984909,-0.02466046,-0.10952377,0.08191729,-0.06770898,0.00446408,-0.00006322,-0.04861416,-0.01096271,0.07062285,-0.04491022,-0.03481439,0.03473574,-0.03475549,0.07867427,0.06372773,-0.04299076,-0.01816686,-0.04104413,-0.07709885,-0.01683228,0.08604164,-0.0216195,-0.07486675,-0.04575802,0.03031203,-0.02685055,-0.04895876,0.04056683,-0.0302341,-0.01701951,0.02151951,0.05814718,-0.02632779,0.00534439,-0.05008427,0.03562146,0.01226221,-0.03799861,-0.05460918,-0.01863468,-0.00572055,-0.01044173,-0.06058241,0.00008557,-0.0163464,0.01372518,-0.00356914,-0.02274639,0.00373278,0.01319266,-0.05793525,-0.04695405,0.01705744,-0.00950047,-0.00849366,0.06102024,-0.06938123,0.11474202,0.01101175,0.03188072,0.05839168,-0.00976467,-0.01758363,0.01400082,-0.02638652,0.03916208,0.030772,0.00350956,-0.05128966,-0.01606631,-0.0233664,-0.03912244,-0.0029102,0.04333205,0.05513724,0.0140702,0.0451186,0.00363567,-0.07445012,-0.11515716,-0.20031339,0.03301632,0.00789759,-0.07912309,0.01660961,-0.04432123,0.03702851,0.00570538,0.01388839,0.08150215,0.0717246,0.02710758,-0.03410274,-0.02693472,-0.00788969,0.02085792,0.06632381,-0.01343205,-0.01557673,0.01824453,0.02220382,0.00972035,-0.01611037,0.01883913,-0.03223906,-0.04232067,0.13364959,0.01570577,0.06482914,0.03029653,0.00980082,0.02850214,-0.04672549,-0.12370899,0.06023283,0.02334523,-0.03943101,0.04664486,-0.02165544,-0.00244561,0.02948254,0.01487818,0.02400504,-0.03023492,-0.0051384,0.0129764,-0.01902224,-0.02393148,-0.02110957,0.01449216,0.02299699,0.05388822,0.00376398,0.05543089,-0.01850241,-0.01656844,-0.04038753,0.00931445,-0.04058667,0.010238,-0.00238507,-0.04054384,0.01921504,-0.06991103,0.01086173,-0.06273235,-0.01671602,-0.04726518,0.03287624,-0.01268902,-0.02663339,0.15897793,0.04362475,-0.02566086,0.02424747,-0.01516546,0.0045249,-0.01248366,0.02146749,-0.04119071,0.03179152,0.04010281,0.09052322,0.02709462,0.04830886,-0.04627199,0.00968603,-0.02337286,0.05467712,-0.00051575,-0.04056367,-0.01797739,0.02265258,0.06343184,0.12965991,0.00616589,-0.29062939,0.03875671,-0.00425336,-0.00640371,-0.002215,-0.02032782,0.03447956,0.00147135,-0.0207781,0.00968296,-0.02714294,0.01306728,-0.0201301,-0.07785193,-0.00582618,0.01676343,0.08502887,0.0032147,0.07440116,0.05283881,0.01412338,-0.01815034,0.23180228,-0.01440501,0.04635517,-0.0248225,-0.02185724,0.0459129,0.07674123,-0.00458966,0.03275441,-0.01506769,0.05395473,-0.05850728,0.02561418,0.08940254,0.01450664,0.00025196,0.02290951,-0.0070664,-0.03406125,-0.01460802,-0.13951282,-0.01435274,0.08721867,-0.03516239,-0.01946113,-0.10424751,-0.03908123,0.00642337,-0.04736407,0.00604138,-0.02629092,0.01604738,0.04942292,0.00833356,0.02495292,-0.03737691,0.00107198,-0.02179103,0.04276827,-0.06118848,0.10917432,0.09687269,-0.00229208],"last_embed":{"hash":"1ddb2a032704377e0af3d90de34dc800b7cb73290df701b068675d3843f1c68a","tokens":398}}},"text":null,"length":0,"last_read":{"hash":"1ddb2a032704377e0af3d90de34dc800b7cb73290df701b068675d3843f1c68a","at":1757414818944},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.3　矩阵运算](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)#{1}","lines":[464,515],"size":4098,"outlinks":[{"title":"NumPy和Matlab不一样，对于多维数组的运算，缺省情况下并不使用矩阵运算，如果你希望对数组进行矩阵运算的话，可以调用相应的函数。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":1},{"title":"matrix对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":3},{"title":"numpy库提供了matrix类，使用matrix类创建的是矩阵对象，它们的加减乘除运算缺省采用矩阵方式计算，因此用法和matlab十分类似。但是由于NumPy中同时存在ndarray和matrix对象，因此用户很容易将两者弄混。这有违Python的“显式优于隐式”的原则，因此并不推荐在较复杂的程序中使用matrix。下面是使用matrix的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":5},{"title":"**>>>** a = np.matrix(1,2,3,5,5,6,7,9,9)**>>>** a*a**-1matrix( 1.00000000e+00, 1.66533454e-16, -8.32667268e-17, -2.77555756e-16, 1.00000000e+00, -2.77555756e-17, 1.66533454e-16, 5.55111512e-17, 1.00000000e+00)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":7},{"title":"因为a是用matrix创建的矩阵对象，因此乘法和幂运算符都变成了矩阵运算，于是上面计算的是矩阵a和其逆矩阵的乘积，结果是一个单位矩阵。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":9},{"title":"矩阵的乘积可以使用dot函数进行计算。对于二维数组，它计算的是矩阵乘积，对于一维数组，它计算的是其点积。当需要将一维数组当作列矢量或者行矢量进行矩阵运算时，推荐先使用reshape函数将一维数组转换为二维数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":11},{"title":"**>>>** a = array(1, 2, 3)**>>>** a.reshape((-1,1))array(1, 2, 3)**>>>** a.reshape((1,-1))array(1, 2, 3)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":13},{"title":"除了dot计算乘积之外，NumPy还提供了inner和outer等多种计算乘积的函数。这些函数计算乘积的方式不同，尤其是当对于多维数组的时候，更容易搞混。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":15},{"title":"**dot** : 对于两个一维的数组，计算的是这两个数组对应下标元素的乘积和(数学上称之为内积)；对于二维数组，计算的是两个数组的矩阵乘积；对于多维数组，它的通用计算公式如下，即结果数组中的每个元素都是：数组a的最后一维上的所有元素与数组b的倒数第二位上的所有元素的乘积和：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":17},{"title":"dot(a, b)i,j,k,m = sum(ai,j,: * bk,:,m)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":19},{"title":"下面以两个3为数组的乘积演示一下dot乘积的计算结果：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":21},{"title":"首先创建两个3维数组，这两个数组的最后两维满足矩阵乘积的条件：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":23},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,2,3)**>>>** c = np.dot(a,b)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":25},{"title":"dot乘积的结果c可以看作是数组a,b的多个子矩阵的乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":27},{"title":"**>>>** np.alltrue( c0,:,0,: == np.dot(a0,b0) )True**>>>** np.alltrue( c1,:,0,: == np.dot(a1,b0) )True**>>>** np.alltrue( c0,:,1,: == np.dot(a0,b1) )True**>>>** np.alltrue( c1,:,1,: == np.dot(a1,b1) )True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":29},{"title":"**inner** : 和dot乘积一样，对于两个一维数组，计算的是这两个数组对应下标元素的乘积和；对于多维数组，它计算的结果数组中的每个元素都是：数组a和b的最后一维的内积，因此数组a和b的最后一维的长度必须相同：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":32},{"title":"inner(a, b)i,j,k,m = sum(ai,j,:*bk,m,:)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":34},{"title":"下面是inner乘积的演示：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":36},{"title":"**>>>** a = np.arange(12).reshape(2,3,2)**>>>** b = np.arange(12,24).reshape(2,3,2)**>>>** c = np.inner(a,b)**>>>** c.shape(2, 3, 2, 3)**>>>** c0,0,0,0 == np.inner(a0,0,b0,0)True**>>>** c0,1,1,0 == np.inner(a0,1,b1,0)True**>>>** c1,2,1,2 == np.inner(a1,2,b1,2)True","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":38},{"title":"**outer** : 只按照一维数组进行计算，如果传入参数是多维数组，则先将此数组展平为一维数组之后再进行运算。outer乘积计算的列向量和行向量的矩阵乘积：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":40},{"title":"**>>>** np.outer(1,2,3,4,5,6,7)array( 4, 5, 6, 7, 8, 10, 12, 14, 12, 15, 18, 21)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":42},{"title":"矩阵中更高级的一些运算可以在NumPy的线性代数子库linalg中找到。例如inv函数计算逆矩阵，solve函数可以求解多元一次方程组。下面是solve函数的一个例子：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":45},{"title":"**>>>** a = np.random.rand(10,10)**>>>** b = np.random.rand(10)**>>>** x = np.linalg.solve(a,b)**>>>** np.sum(np.abs(np.dot(a,x) - b))3.1433189384699745e-15","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":47},{"title":"solve函数有两个参数a和b。a是一个N*N的二维数组，而b是一个长度为N的一维数组，solve函数找到一个长度为N的一维数组x，使得a和x的矩阵乘积正好等于b，数组x就是多元一次方程组的解。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":49},{"title":"有关线性代数方面的内容将在今后的章节中详细介绍。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":51}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12578639,-0.0371202,0.00548648,-0.02628225,0.05762819,-0.00567042,-0.01539272,-0.06488582,0.02591089,0.01495076,0.07431529,-0.07933049,0.02114524,-0.01694814,-0.00514362,-0.03806925,-0.00533471,-0.00330964,-0.0375971,-0.00204176,0.11834873,-0.01438865,0.04899716,-0.05121805,0.01696105,0.07520286,-0.02554097,-0.0093402,-0.01105471,-0.18895733,0.06035121,0.01555716,-0.00690392,-0.01718642,0.0738028,0.00054245,0.00428029,0.03078853,-0.01477957,0.04554377,0.01429572,-0.0016678,0.01017199,0.0212295,0.0061596,-0.07446306,-0.01367917,-0.02282292,0.00426969,-0.02387558,-0.06166514,-0.01739446,-0.03740137,-0.013484,0.03352872,0.01207377,0.08090668,0.04985223,0.0036077,0.04088974,0.00138583,0.03770045,-0.19639802,0.05261275,0.08292442,-0.0117601,-0.03985844,0.02965049,0.03666763,-0.00706952,-0.06584729,0.05652202,-0.03376247,0.09747373,0.01636068,-0.02874281,0.05376602,0.00002445,-0.04720776,-0.05243968,-0.06811915,0.0646546,-0.04803548,-0.00291568,-0.0304934,0.02440918,0.01856698,-0.00002051,0.0344599,-0.01223463,0.03913366,-0.00144368,0.0262597,0.10355578,-0.01187731,-0.02204383,0.08989889,0.08137759,0.02145452,0.08784725,-0.05193943,0.00297269,0.03253237,0.01352842,0.0199748,-0.05505305,-0.03405078,-0.02286536,0.01772021,0.03470236,0.00485719,-0.0092983,0.0249423,-0.034354,0.03826854,-0.01248955,-0.05339276,-0.01032049,-0.07500603,0.00126272,-0.00377338,-0.02784262,0.04167273,-0.02566621,0.01696699,-0.02946511,-0.01028205,0.03286865,0.05905964,0.02405874,0.0828815,-0.00934378,-0.07792275,-0.01855166,0.0230954,-0.02285702,-0.05698295,0.02022466,0.00491088,-0.07292347,0.02783445,-0.12369742,0.00249083,-0.03102094,-0.10389051,0.08469427,-0.06757566,0.01107727,-0.00120696,-0.05031681,-0.02435212,0.06322488,-0.03013152,-0.04746868,0.02913334,-0.02632394,0.07289848,0.06148949,-0.03206127,-0.01981075,-0.01597648,-0.07649871,-0.02632885,0.0765625,-0.04170642,-0.0700643,-0.05400665,0.02934409,-0.03688513,-0.03796396,0.03804362,-0.02377209,-0.01210455,0.02436936,0.06755093,-0.0246449,0.00686509,-0.06384539,0.02406338,0.01809564,-0.03530829,-0.05447996,-0.02152668,-0.00486933,-0.01041182,-0.0602035,0.00368435,-0.01597271,0.03085773,0.02148983,-0.01598484,-0.00655082,0.01967546,-0.07245018,-0.02946085,0.02622083,-0.00473184,-0.01272847,0.06246888,-0.07006118,0.10717771,0.0061551,0.01762765,0.0492477,-0.01577382,-0.02567275,0.00578906,-0.02315778,0.04829366,0.02321626,0.00141034,-0.05325384,-0.01130437,-0.02889946,-0.0265509,0.00227912,0.04683521,0.05028523,0.03694766,0.04012065,-0.00293413,-0.08960516,-0.1136918,-0.19053546,0.01798379,0.01134724,-0.07483552,0.02299722,-0.04728042,0.038981,0.01820394,0.0200085,0.0698138,0.0801573,0.01346642,-0.03871419,-0.01043588,-0.0053961,0.02843501,0.07202581,-0.02249216,-0.01523076,0.02908585,0.02339819,0.00757335,-0.01675124,0.02113429,-0.0283045,-0.02130588,0.11652859,0.0232975,0.06066457,0.02103795,0.025141,0.02836204,-0.04897505,-0.12709641,0.06435061,0.01466343,-0.05277201,0.03911141,-0.02049427,0.01216307,0.0115709,0.02668606,0.02165178,-0.01771525,-0.01946815,0.02392705,-0.02146115,-0.01436766,-0.02346978,0.01185016,-0.00293676,0.0644388,0.00541389,0.05444241,-0.01988249,-0.01639582,-0.05067776,0.01355731,-0.02981921,0.01148533,0.00332007,-0.04004781,0.00935206,-0.06360199,0.01158571,-0.06581579,-0.0203603,-0.03379327,0.03339253,-0.00006432,-0.02901052,0.1443575,0.03121417,-0.01130002,0.01343641,0.00364072,0.01649351,-0.0200118,0.01963985,-0.0604779,0.04659075,0.03047705,0.09519441,0.02244548,0.023502,-0.04246151,-0.00108347,-0.03474427,0.06080205,0.00289284,-0.05188123,-0.01450289,0.01798866,0.05487516,0.12665381,0.02524518,-0.29089248,0.03839567,-0.00071343,0.00400513,-0.00035477,0.00171139,0.03882688,0.00203118,-0.01788783,0.02103515,-0.03053332,-0.00045579,-0.02200731,-0.07646247,-0.02160335,0.01064872,0.08086351,0.0038781,0.08048685,0.05931813,0.02042672,0.00368513,0.23370807,-0.00681236,0.04271309,-0.01588264,-0.02658506,0.04780857,0.07479034,0.00311827,0.01586293,-0.01657633,0.04802693,-0.04390363,0.01875916,0.09203783,0.0103004,-0.00886956,0.03740297,-0.00885506,-0.03862652,-0.00875284,-0.1269141,-0.00336249,0.08881863,-0.03004574,-0.02938282,-0.10833374,-0.03335012,0.01006265,-0.04786921,0.0186377,-0.03234359,0.02063176,0.05689811,0.02161724,0.04092816,-0.03794723,0.0016482,-0.02611863,0.04105279,-0.06502289,0.10596617,0.1060709,0.0128932],"last_embed":{"hash":"6b852f2ebc0ed586c0bf9bfcc0f8ddb6131de4d761d4cb48a20ead1edebd3431","tokens":414}}},"text":null,"length":0,"last_read":{"hash":"6b852f2ebc0ed586c0bf9bfcc0f8ddb6131de4d761d4cb48a20ead1edebd3431","at":1757414818996},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)","lines":[516,584],"size":6539,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"2.4　文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":1},{"title":"NumPy提供了多种文件操作函数方便我们存取数组内容。文件存取的格式分为两类：二进制和文本。而二进制格式的文件又分为NumPy专用的格式化二进制类型和无格式类型。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":3},{"title":"使用数组的方法函数tofile可以方便地将数组中数据以二进制的格式写进文件。tofile输出的数据没有格式，因此用numpy.fromfile读回来的时候需要自己格式化数据：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":5},{"title":"**>>>** a = np.arange(0,12)**>>>** a.shape = 3,4**>>>** aarray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** a.tofile(\"a.bin\")**>>>** b = np.fromfile(\"a.bin\", dtype=np.float) _# 按照float类型读入数据_**>>>** b _# 读入的数据是错误的_array( 2.12199579e-314, 6.36598737e-314, 1.06099790e-313, 1.48539705e-313, 1.90979621e-313, 2.33419537e-313)**>>>** a.dtype _# 查看a的dtype_dtype('int32')**>>>** b = np.fromfile(\"a.bin\", dtype=np.int32) _# 按照int32类型读入数据_**>>>** b _# 数据是一维的_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** b.shape = 3, 4 _# 按照a的shape修改b的shape_**>>>** b _# 这次终于正确了_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":7},{"title":"从上面的例子可以看出，需要在读入的时候设置正确的dtype和shape才能保证数据一致。并且tofile函数不管数组的排列顺序是C语言格式的还是Fortran语言格式的，统一使用C语言格式输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":9},{"title":"此外如果fromfile和tofile函数调用时指定了sep关键字参数的话，数组将以文本格式输入输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":11},{"title":"numpy.load和numpy.save函数以NumPy专用的二进制类型保存数据，这两个函数会自动处理元素类型和shape等信息，使用它们读写数组就方便多了，但是numpy.save输出的文件很难和其它语言编写的程序读入：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":13},{"title":"**>>>** np.save(\"a.npy\", a)**>>>** c = np.load( \"a.npy\" )**>>>** carray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":15},{"title":"如果你想将多个数组保存到一个文件中的话，可以使用numpy.savez函数。savez函数的第一个参数是文件名，其后的参数都是需要保存的数组，也可以使用关键字参数为数组起一个名字，非关键字参数传递的数组会自动起名为arr_0, arr_1, ...。savez函数输出的是一个压缩文件(扩展名为npz)，其中每个文件都是一个save函数保存的npy文件，文件名对应于数组名。load函数自动识别npz文件，并且返回一个类似于字典的对象，可以通过数组名作为关键字获取数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":17},{"title":"**>>>** a = np.array(1,2,3,4,5,6)**>>>** b = np.arange(0, 1.0, 0.1)**>>>** c = np.sin(b)**>>>** np.savez(\"result.npz\", a, b, sin_array = c)**>>>** r = np.load(\"result.npz\")**>>>** r\"arr_0\" _# 数组a_array(1, 2, 3, 4, 5, 6)**>>>** r\"arr_1\" _# 数组b_array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)**>>>** r\"sin_array\" _# 数组c_array( 0. , 0.09983342, 0.19866933, 0.29552021, 0.38941834, 0.47942554, 0.56464247, 0.64421769, 0.71735609, 0.78332691)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":19},{"title":"如果你用解压软件打开result.npz文件的话，会发现其中有三个文件：arr_0.npy， arr_1.npy， sin_array.npy，其中分别保存着数组a, b, c的内容。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":21},{"title":"使用numpy.savetxt和numpy.loadtxt可以读写1维和2维的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":23},{"title":"**>>>** a = np.arange(0,12,0.5).reshape(4,-1)**>>>** np.savetxt(\"a.txt\", a) _# 缺省按照'%.18e'格式保存数据，以空格分隔_**>>>** np.loadtxt(\"a.txt\")array( 0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5. , 5.5, 6. , 6.5, 7. , 7.5, 8. , 8.5, 9. , 9.5, 10. , 10.5, 11. , 11.5)**>>>** np.savetxt(\"a.txt\", a, fmt=\"_%d_\", delimiter=\",\") _#改为保存为整数，以逗号分隔_**>>>** np.loadtxt(\"a.txt\",delimiter=\",\") _# 读入的时候也需要指定逗号分隔_array( 0., 0., 1., 1., 2., 2., 3., 3., 4., 4., 5., 5., 6., 6., 7., 7., 8., 8., 9., 9., 10., 10., 11., 11.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":25},{"title":"文件名和文件对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":27},{"title":"本节介绍所举的例子都是传递的文件名，也可以传递已经打开的文件对象，例如对于load和save函数来说，如果使用文件对象的话，可以将多个数组储存到一个npy文件中：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":29},{"title":"**>>>** a = np.arange(8)**>>>** b = np.add.accumulate(a)**>>>** c = a + b**>>>** f = file(\"result.npy\", \"wb\")**>>>** np.save(f, a) _# 顺序将a,b,c保存进文件对象f_**>>>** np.save(f, b)**>>>** np.save(f, c)**>>>** f.close()**>>>** f = file(\"result.npy\", \"rb\")**>>>** np.load(f) _# 顺序从文件对象f中读取内容_array(0, 1, 2, 3, 4, 5, 6, 7)**>>>** np.load(f)array( 0, 1, 3, 6, 10, 15, 21, 28)**>>>** np.load(f)array( 0, 2, 5, 9, 14, 20, 27, 35)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":31},{"title":"首页目录","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":33},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":35},{"title":"NumPy-快速处理数据","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":35},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":36},{"title":"ndarray对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":36},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":37},{"title":"创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":37},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":38},{"title":"存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":38},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":39},{"title":"多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":39},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":40},{"title":"结构数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":40},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":41},{"title":"内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":41},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":42},{"title":"ufunc运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":42},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":43},{"title":"广播","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":43},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":44},{"title":"ufunc的方法","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":44},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":45},{"title":"矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":45},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":46},{"title":"文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":46},{"title":"软件包的安装和介绍","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":50},{"title":"SciPy-数值计算库","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":54},{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":62},{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":64},{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":65},{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":66},{"title":"HYRY Studio","target":"http://hyry.dip.jp/blogt.py","line":68},{"title":"Sphinx","target":"http://sphinx.pocoo.org/","line":68}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12421528,-0.03109759,-0.0007705,-0.03175931,0.05277941,-0.00898676,-0.01538472,-0.06495719,0.02501572,0.01455226,0.07420205,-0.07255875,0.02532925,-0.01534048,-0.01170891,-0.03787762,-0.00044152,-0.00019552,-0.04242237,0.00250508,0.11378353,-0.01854757,0.04794262,-0.05300777,0.02076777,0.08221167,-0.02861786,-0.01564692,-0.01517104,-0.19190648,0.06342911,0.00973655,-0.0150889,-0.01946931,0.07946297,0.00216679,0.0068642,0.0151206,-0.01937088,0.04573774,0.01501089,-0.00474835,0.01500975,0.01864913,0.00348566,-0.07104472,-0.01327494,-0.02839572,0.01120711,-0.02998941,-0.06345116,-0.01808893,-0.0455465,-0.01091695,0.0266559,0.00573583,0.07910597,0.04446108,0.00172596,0.02959981,0.00088506,0.03754859,-0.19411857,0.05107144,0.09013275,-0.01784104,-0.0389658,0.01958974,0.03782759,-0.00513505,-0.07226608,0.05970643,-0.03503985,0.09636003,0.01930217,-0.02063544,0.05429227,0.00068724,-0.04825438,-0.04808775,-0.06308184,0.06770403,-0.04824956,0.00262456,-0.03416453,0.02578976,0.02239232,0.00291891,0.02924384,-0.0077464,0.03615239,-0.00048976,0.02102169,0.10130055,-0.00914632,-0.02009627,0.0791225,0.07722703,0.02808595,0.08463056,-0.04941043,0.00517202,0.02854685,0.01607187,0.01725931,-0.04764863,-0.0296302,-0.02505101,0.0192073,0.02621238,0.00785638,-0.01354249,0.02590912,-0.03074678,0.03670746,-0.00103753,-0.05441801,-0.00432263,-0.07526634,0.00045937,-0.01017688,-0.02484031,0.03876464,-0.02431085,0.01851446,-0.03065514,-0.0088555,0.03712932,0.05608355,0.02726578,0.07905727,-0.01196303,-0.08168432,-0.01770178,0.02872705,-0.0278611,-0.05749811,0.02158297,0.00532068,-0.079803,0.01848137,-0.11808419,0.00534497,-0.03184694,-0.1053211,0.07878986,-0.06859419,0.00718057,-0.00514941,-0.04986756,-0.0247023,0.06549216,-0.03477449,-0.04759265,0.03174151,-0.02044129,0.07223146,0.06508429,-0.04195732,-0.0131281,-0.01382804,-0.07700185,-0.0227789,0.07645848,-0.04625502,-0.06911415,-0.05371738,0.03537348,-0.03640239,-0.03200687,0.03614698,-0.0255237,-0.00394396,0.02388693,0.06465755,-0.02508345,0.00472364,-0.0590342,0.02445646,0.01455945,-0.03407064,-0.05845177,-0.02347334,-0.00834647,-0.01436356,-0.06645682,-0.00466688,-0.00821391,0.02118189,0.01726292,-0.02193385,-0.00184243,0.01090972,-0.06694519,-0.02980401,0.03054583,-0.00162337,-0.00641389,0.06086487,-0.06291416,0.10575374,0.01404871,0.01320702,0.05725235,-0.01447351,-0.02348975,0.00517286,-0.02821883,0.05576122,0.02221004,0.00896758,-0.05288221,-0.01290335,-0.01813603,-0.03364189,0.00887007,0.04539011,0.04471192,0.03812225,0.04519979,0.00359633,-0.09765317,-0.11023034,-0.18930224,0.01865319,0.01461456,-0.07586381,0.02926592,-0.04404079,0.03436762,0.01613937,0.01973262,0.07209783,0.0837772,0.02070794,-0.03861504,-0.02025518,-0.01729888,0.02630293,0.06644116,-0.01740784,-0.00931996,0.0306258,0.0282871,-0.00308668,-0.0227599,0.02551478,-0.03193571,-0.02516781,0.11443663,0.01993836,0.06840849,0.0231012,0.02234136,0.03247232,-0.04367236,-0.13065794,0.07012585,0.00943324,-0.04399687,0.04278147,-0.01863109,0.01311566,0.01367919,0.02277043,0.02315843,-0.01669061,-0.01080705,0.02831416,-0.02055147,-0.01108414,-0.02525478,0.0072875,-0.00270641,0.0637644,0.00191135,0.0526326,-0.01440938,-0.02370575,-0.04769861,0.01369406,-0.02913904,0.00957917,0.00935244,-0.03870087,0.00507142,-0.05880132,0.00835776,-0.07071768,-0.01744544,-0.028607,0.03256427,-0.00126025,-0.02453782,0.14374729,0.02497555,-0.01210862,0.01282675,0.00728643,0.01768118,-0.01449095,0.01709621,-0.06162941,0.05673116,0.0462204,0.09323849,0.01211259,0.02465826,-0.04096463,-0.00604005,-0.03133774,0.05317794,0.00445087,-0.04704643,-0.01999417,0.02197767,0.05472797,0.12583899,0.02069345,-0.29202414,0.03631577,0.00029922,0.00611202,-0.00386172,0.00090165,0.04823294,0.01004747,-0.00998491,0.02007802,-0.03135531,-0.0025889,-0.02938597,-0.07730177,-0.01400329,0.01113973,0.0799633,0.00596339,0.0806142,0.05602573,0.02286799,0.00500346,0.23582362,-0.00435713,0.04463928,-0.01110765,-0.02126221,0.04992675,0.07294412,0.00314055,0.01918838,-0.02093217,0.04732271,-0.0505015,0.01488197,0.09149223,0.015887,-0.00222444,0.03001905,-0.01219592,-0.0308211,-0.00799445,-0.12517232,-0.00354355,0.08888773,-0.0324376,-0.03297456,-0.11233215,-0.03992672,0.01096552,-0.04777183,0.02312494,-0.02750761,0.01297598,0.05283129,0.01753023,0.03428456,-0.03210639,0.00392612,-0.03568127,0.04201654,-0.06479616,0.11603332,0.11409666,0.01361866],"last_embed":{"hash":"1c3b9aed01a6e1f23bcafc892e026fb3de77c07a93eda15dfbafb6988a1c5678","tokens":413}}},"text":null,"length":0,"last_read":{"hash":"1c3b9aed01a6e1f23bcafc892e026fb3de77c07a93eda15dfbafb6988a1c5678","at":1757414819064},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#{1}","lines":[518,547],"size":3985,"outlinks":[{"title":"NumPy提供了多种文件操作函数方便我们存取数组内容。文件存取的格式分为两类：二进制和文本。而二进制格式的文件又分为NumPy专用的格式化二进制类型和无格式类型。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":1},{"title":"使用数组的方法函数tofile可以方便地将数组中数据以二进制的格式写进文件。tofile输出的数据没有格式，因此用numpy.fromfile读回来的时候需要自己格式化数据：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":3},{"title":"**>>>** a = np.arange(0,12)**>>>** a.shape = 3,4**>>>** aarray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** a.tofile(\"a.bin\")**>>>** b = np.fromfile(\"a.bin\", dtype=np.float) _# 按照float类型读入数据_**>>>** b _# 读入的数据是错误的_array( 2.12199579e-314, 6.36598737e-314, 1.06099790e-313, 1.48539705e-313, 1.90979621e-313, 2.33419537e-313)**>>>** a.dtype _# 查看a的dtype_dtype('int32')**>>>** b = np.fromfile(\"a.bin\", dtype=np.int32) _# 按照int32类型读入数据_**>>>** b _# 数据是一维的_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)**>>>** b.shape = 3, 4 _# 按照a的shape修改b的shape_**>>>** b _# 这次终于正确了_array( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":5},{"title":"从上面的例子可以看出，需要在读入的时候设置正确的dtype和shape才能保证数据一致。并且tofile函数不管数组的排列顺序是C语言格式的还是Fortran语言格式的，统一使用C语言格式输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":7},{"title":"此外如果fromfile和tofile函数调用时指定了sep关键字参数的话，数组将以文本格式输入输出。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":9},{"title":"numpy.load和numpy.save函数以NumPy专用的二进制类型保存数据，这两个函数会自动处理元素类型和shape等信息，使用它们读写数组就方便多了，但是numpy.save输出的文件很难和其它语言编写的程序读入：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":11},{"title":"**>>>** np.save(\"a.npy\", a)**>>>** c = np.load( \"a.npy\" )**>>>** carray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":13},{"title":"如果你想将多个数组保存到一个文件中的话，可以使用numpy.savez函数。savez函数的第一个参数是文件名，其后的参数都是需要保存的数组，也可以使用关键字参数为数组起一个名字，非关键字参数传递的数组会自动起名为arr_0, arr_1, ...。savez函数输出的是一个压缩文件(扩展名为npz)，其中每个文件都是一个save函数保存的npy文件，文件名对应于数组名。load函数自动识别npz文件，并且返回一个类似于字典的对象，可以通过数组名作为关键字获取数组的内容：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":15},{"title":"**>>>** a = np.array(1,2,3,4,5,6)**>>>** b = np.arange(0, 1.0, 0.1)**>>>** c = np.sin(b)**>>>** np.savez(\"result.npz\", a, b, sin_array = c)**>>>** r = np.load(\"result.npz\")**>>>** r\"arr_0\" _# 数组a_array(1, 2, 3, 4, 5, 6)**>>>** r\"arr_1\" _# 数组b_array( 0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)**>>>** r\"sin_array\" _# 数组c_array( 0. , 0.09983342, 0.19866933, 0.29552021, 0.38941834, 0.47942554, 0.56464247, 0.64421769, 0.71735609, 0.78332691)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":17},{"title":"如果你用解压软件打开result.npz文件的话，会发现其中有三个文件：arr_0.npy， arr_1.npy， sin_array.npy，其中分别保存着数组a, b, c的内容。","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":19},{"title":"使用numpy.savetxt和numpy.loadtxt可以读写1维和2维的数组：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":21},{"title":"**>>>** a = np.arange(0,12,0.5).reshape(4,-1)**>>>** np.savetxt(\"a.txt\", a) _# 缺省按照'%.18e'格式保存数据，以空格分隔_**>>>** np.loadtxt(\"a.txt\")array( 0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5. , 5.5, 6. , 6.5, 7. , 7.5, 8. , 8.5, 9. , 9.5, 10. , 10.5, 11. , 11.5)**>>>** np.savetxt(\"a.txt\", a, fmt=\"_%d_\", delimiter=\",\") _#改为保存为整数，以逗号分隔_**>>>** np.loadtxt(\"a.txt\",delimiter=\",\") _# 读入的时候也需要指定逗号分隔_array( 0., 0., 1., 1., 2., 2., 3., 3., 4., 4., 5., 5., 6., 6., 7., 7., 8., 8., 9., 9., 10., 10., 11., 11.)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":23},{"title":"文件名和文件对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":25},{"title":"本节介绍所举的例子都是传递的文件名，也可以传递已经打开的文件对象，例如对于load和save函数来说，如果使用文件对象的话，可以将多个数组储存到一个npy文件中：","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":27},{"title":"**>>>** a = np.arange(8)**>>>** b = np.add.accumulate(a)**>>>** c = a + b**>>>** f = file(\"result.npy\", \"wb\")**>>>** np.save(f, a) _# 顺序将a,b,c保存进文件对象f_**>>>** np.save(f, b)**>>>** np.save(f, c)**>>>** f.close()**>>>** f = file(\"result.npy\", \"rb\")**>>>** np.load(f) _# 顺序从文件对象f中读取内容_array(0, 1, 2, 3, 4, 5, 6, 7)**>>>** np.load(f)array( 0, 1, 3, 6, 10, 15, 21, 28)**>>>** np.load(f)array( 0, 2, 5, 9, 14, 20, 27, 35)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":29}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.13134669,-0.04268615,0.00878773,-0.027189,0.0626687,-0.00170658,-0.02045188,-0.06630378,0.02639558,0.00954337,0.07123009,-0.08218149,0.02744675,-0.00998388,-0.00746179,-0.03775008,-0.00886978,-0.0099455,-0.03739705,-0.00608416,0.12656753,-0.01638843,0.05232407,-0.05272185,0.01288552,0.07294781,-0.02319277,-0.01152761,-0.00749669,-0.18124211,0.06029826,0.01766334,-0.01030123,-0.0121417,0.0722552,0.00111633,-0.00175361,0.03456702,-0.00345901,0.04501104,0.0043855,0.00239161,0.0081124,0.02124449,0.01386718,-0.07328474,-0.02330392,-0.0184507,-0.00114594,-0.02600616,-0.06257103,-0.01471957,-0.03248649,-0.01925655,0.03606299,0.01184208,0.0799163,0.06010988,0.00876711,0.03805973,0.00366461,0.03697654,-0.19623899,0.05060648,0.07794867,-0.01188349,-0.04081106,0.03049438,0.04267128,0.00096302,-0.06189419,0.06002325,-0.02973457,0.09611207,0.0137028,-0.02936704,0.05218059,-0.00160683,-0.0435634,-0.05350307,-0.06519105,0.07169611,-0.04012544,-0.00094418,-0.02894793,0.02601329,0.01086264,-0.00414763,0.04184132,-0.01664296,0.04361405,-0.00093591,0.0185053,0.10150915,-0.01707088,-0.01802584,0.09310886,0.07165962,0.01303617,0.08719299,-0.05436525,-0.0011864,0.02918102,0.00855774,0.01613553,-0.06106177,-0.03407997,-0.03005025,0.01778775,0.03671314,-0.00487911,-0.00200843,0.02300074,-0.0371154,0.03858848,-0.00698426,-0.05335962,-0.01091898,-0.0752926,0.00284108,-0.0024656,-0.0189587,0.03905132,-0.02364385,0.01196087,-0.03371798,-0.00987024,0.0254088,0.06178114,0.02119349,0.07935104,-0.00556129,-0.08323588,-0.01604716,0.0158447,-0.02285662,-0.05547386,0.01314555,0.00939634,-0.06527364,0.02492118,-0.12528427,0.00288553,-0.03593491,-0.0967565,0.08839074,-0.06530943,0.00929187,0.00312856,-0.04570397,-0.01900004,0.06765125,-0.02848181,-0.04824745,0.02757335,-0.03207398,0.06935102,0.06915291,-0.02839859,-0.02621564,-0.01587969,-0.06816407,-0.03523121,0.07215944,-0.03472146,-0.06875835,-0.05016911,0.03054788,-0.04257495,-0.04134341,0.03695415,-0.02210256,-0.01722475,0.01999222,0.08077052,-0.01981166,0.0050873,-0.06807029,0.0161302,0.01937824,-0.03589277,-0.05732189,-0.02362134,-0.00035138,-0.00891957,-0.06528405,0.01278623,-0.01980149,0.03071192,0.01873777,-0.01684627,-0.01038987,0.02020877,-0.07003141,-0.03332371,0.01702376,-0.00898068,-0.02259743,0.06398009,-0.07601132,0.1109695,0.00348822,0.01263858,0.04079678,-0.02394664,-0.02795319,0.0117575,-0.02705316,0.04273083,0.03264264,-0.00177218,-0.04523793,-0.00654195,-0.02733357,-0.01825522,0.00125754,0.04847721,0.05120945,0.03564404,0.0369032,-0.00934551,-0.08393142,-0.11611479,-0.18856604,0.01132007,0.01235686,-0.0764602,0.01363324,-0.04766678,0.0387454,0.02152295,0.0263324,0.07327894,0.08299175,0.01348878,-0.03819429,-0.00663836,0.00668586,0.02407359,0.0717354,-0.02238122,-0.01697904,0.02868013,0.02758124,0.01659906,-0.017149,0.01558304,-0.02260842,-0.02096178,0.11825149,0.01909059,0.05669603,0.02126865,0.02710409,0.02473078,-0.04728368,-0.12426783,0.05990136,0.02098014,-0.06131314,0.04091117,-0.03289579,0.01241723,0.00896775,0.03222171,0.01872475,-0.02455146,-0.02362744,0.01533527,-0.02185299,-0.01622245,-0.02644311,0.01585541,-0.00439377,0.06232366,0.00884863,0.05918396,-0.0206728,-0.01726696,-0.04788119,0.01095133,-0.03232611,0.02071352,-0.00030744,-0.04118408,0.00889936,-0.06200499,0.01476254,-0.06232416,-0.01940086,-0.03280571,0.0377151,0.00713725,-0.03314452,0.14690325,0.03106848,-0.00615571,0.0214019,0.0098169,0.01348604,-0.02056144,0.02101324,-0.05615249,0.03492734,0.02941998,0.09775383,0.03154696,0.02373892,-0.04312079,0.00041551,-0.03403855,0.06855376,-0.00156691,-0.0574943,-0.01248107,0.01961013,0.0494463,0.12359767,0.02747439,-0.2923159,0.03539861,0.00235185,0.01069048,-0.00211707,0.0011255,0.0284907,0.00093059,-0.02026016,0.02550004,-0.04024797,0.0052594,-0.01319159,-0.0804047,-0.0206018,0.00598648,0.08546744,0.00189112,0.07761824,0.05820595,0.02117945,0.00424213,0.2326626,0.00036952,0.04264302,-0.01657175,-0.02375667,0.05087307,0.07648833,0.00155226,0.00851916,-0.01598694,0.04956168,-0.03675522,0.01701206,0.08282512,0.01008892,-0.00922167,0.03768183,-0.00110414,-0.03913972,-0.00305828,-0.1280759,-0.00469302,0.09069888,-0.02180406,-0.03375835,-0.10676548,-0.02822529,0.01149248,-0.04845881,0.02200567,-0.03023634,0.01462336,0.0535439,0.02842559,0.04962974,-0.0420588,-0.00450022,-0.017177,0.04872908,-0.06270142,0.09844193,0.10414794,0.0101259],"last_embed":{"hash":"a570d122ece6943ca9ae0219e88f7cc732787b4d8e841061fca92cc7bc34b137","tokens":449}}},"text":null,"length":0,"last_read":{"hash":"a570d122ece6943ca9ae0219e88f7cc732787b4d8e841061fca92cc7bc34b137","at":1757414819128},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)","lines":[548,570],"size":1903,"outlinks":[{"title":"首页目录","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":1},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":3},{"title":"NumPy-快速处理数据","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":3},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":4},{"title":"ndarray对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":4},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":5},{"title":"创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":5},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":6},{"title":"存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":6},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":7},{"title":"多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":7},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":8},{"title":"结构数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":8},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":9},{"title":"内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":9},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":10},{"title":"ufunc运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":10},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":11},{"title":"广播","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":11},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":12},{"title":"ufunc的方法","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":12},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":13},{"title":"矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":13},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":14},{"title":"文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":14},{"title":"软件包的安装和介绍","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":18},{"title":"SciPy-数值计算库","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":22}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.1306183,-0.04264092,0.00869814,-0.02700962,0.06337766,-0.00195977,-0.02064273,-0.06629715,0.02563175,0.00992716,0.07284895,-0.08180577,0.02684738,-0.00989379,-0.00815102,-0.0374462,-0.00724365,-0.0097776,-0.03541088,-0.0041676,0.12477236,-0.01459223,0.05279412,-0.0531777,0.01193535,0.07274806,-0.02200187,-0.01229542,-0.01085661,-0.18203408,0.06066537,0.01596636,-0.01181285,-0.01145956,0.07309799,0.00025658,0.00084569,0.03629785,-0.00318883,0.04517837,0.00432459,0.00408144,0.00916871,0.02082801,0.01230849,-0.07273804,-0.02197275,-0.01862843,-0.00044059,-0.02574564,-0.0628949,-0.01538975,-0.03278304,-0.01866674,0.03415692,0.01147498,0.08080535,0.05912981,0.00870724,0.03687235,0.00374989,0.03776065,-0.19637555,0.05074286,0.0782152,-0.01184549,-0.04101911,0.02962437,0.04140212,0.00011138,-0.06238184,0.06028488,-0.02911005,0.09659908,0.01405034,-0.02971735,0.05132923,0.00050251,-0.04508882,-0.05256435,-0.06469499,0.0707108,-0.040017,-0.00174039,-0.0294094,0.0263387,0.01114164,-0.00391671,0.04316378,-0.01566928,0.04278578,-0.00168925,0.01883306,0.10179269,-0.01744574,-0.01885305,0.09248073,0.07311986,0.01335773,0.08672585,-0.05479658,-0.00073867,0.03044541,0.00819352,0.0163311,-0.06025098,-0.03409311,-0.0287092,0.01904573,0.03581502,-0.00313294,-0.00230474,0.02226669,-0.03633203,0.03817948,-0.0058878,-0.05346021,-0.01094339,-0.07648847,0.00193684,-0.00364676,-0.01869407,0.03928018,-0.02395945,0.01392883,-0.03379327,-0.00873014,0.02557511,0.06164276,0.02044894,0.07917608,-0.00608098,-0.08468391,-0.01651968,0.01756651,-0.02366765,-0.05572863,0.01214483,0.00756842,-0.06607769,0.02478607,-0.12456872,0.00244174,-0.03530206,-0.09652932,0.08815002,-0.06357601,0.01036962,0.0028786,-0.04483979,-0.01961257,0.06610433,-0.02818093,-0.04745493,0.02684821,-0.03200106,0.07075623,0.0690961,-0.02907065,-0.02470465,-0.01551828,-0.06896226,-0.03551301,0.0740188,-0.03554348,-0.07023815,-0.0520971,0.03063546,-0.04195705,-0.04061451,0.0380458,-0.02133687,-0.01699553,0.01928725,0.0789401,-0.02009432,0.00330831,-0.06811314,0.01658293,0.01905552,-0.03381095,-0.0570253,-0.02202372,-0.00051879,-0.00915379,-0.06526979,0.01175574,-0.01948132,0.02987591,0.02011451,-0.01747508,-0.01093516,0.01983333,-0.07225507,-0.03283997,0.01838656,-0.00978324,-0.02271972,0.06537639,-0.0752091,0.11037713,0.00261068,0.01330501,0.04161205,-0.02127961,-0.02680581,0.01072565,-0.02615171,0.04218846,0.03195589,-0.00259901,-0.04698523,-0.00651567,-0.02627886,-0.01983402,0.0009047,0.04845599,0.05188549,0.03568513,0.03646095,-0.00775856,-0.08453967,-0.11553761,-0.18872562,0.01110132,0.01141201,-0.07609519,0.01511444,-0.04787527,0.03953351,0.02037239,0.02637768,0.07240863,0.08293164,0.01337293,-0.0372714,-0.00805243,0.00720285,0.02386965,0.07264405,-0.02320929,-0.0156881,0.02814916,0.02590263,0.01634609,-0.01796135,0.01649903,-0.02160239,-0.02258814,0.11724035,0.02068133,0.05690233,0.01923938,0.02696142,0.02633786,-0.04743611,-0.12565459,0.06010983,0.01983783,-0.06092322,0.04066756,-0.03039428,0.01275401,0.0087513,0.03094758,0.01798055,-0.02598052,-0.02428995,0.0158292,-0.02070813,-0.01663969,-0.02717016,0.01590277,-0.00450614,0.06168902,0.00767086,0.05906536,-0.01897493,-0.0169701,-0.04857934,0.01166608,-0.03221016,0.0200184,0.0013409,-0.04131391,0.00892054,-0.06252473,0.01551195,-0.06360862,-0.01948139,-0.03176189,0.0369694,0.00658346,-0.03245965,0.14642522,0.02967009,-0.00679397,0.0210164,0.00855783,0.01445454,-0.02069067,0.02061798,-0.05650493,0.03664157,0.02945281,0.09828311,0.0326482,0.02335719,-0.04154036,-0.0003453,-0.0327293,0.06751318,-0.00158087,-0.0572733,-0.01385248,0.01926173,0.04930852,0.12604503,0.02662917,-0.29168957,0.03707352,0.00221128,0.01110701,-0.00282551,0.00104782,0.02895468,0.00027383,-0.01932813,0.02609828,-0.03834179,0.00556937,-0.01446493,-0.07924084,-0.02210091,0.00532988,0.08420578,0.00236472,0.07857263,0.05885274,0.02059682,0.00487676,0.23400068,0.00085612,0.04261481,-0.01748949,-0.02311126,0.05119456,0.0751185,0.00131441,0.00876907,-0.01607247,0.0492059,-0.03681692,0.01695184,0.08382834,0.01094333,-0.01140281,0.03776371,-0.0015787,-0.03833303,-0.00327097,-0.12790827,-0.00389168,0.09088073,-0.02347715,-0.03318661,-0.1070504,-0.02824178,0.01042404,-0.04892991,0.02139149,-0.03110109,0.01367132,0.05391483,0.02852406,0.04909168,-0.04228796,-0.00353666,-0.01869803,0.0490949,-0.06149187,0.09813865,0.10438959,0.00899209],"last_embed":{"hash":"1788ded7e83f8c76df72aed26b06a8862bd708d892422cb3e2c66661aba97152","tokens":448}}},"text":null,"length":0,"last_read":{"hash":"1788ded7e83f8c76df72aed26b06a8862bd708d892422cb3e2c66661aba97152","at":1757414819194},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#{1}","lines":[550,562],"size":1669,"outlinks":[{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":1},{"title":"NumPy-快速处理数据","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":1},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":2},{"title":"ndarray对象","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ndarray","line":2},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":3},{"title":"创建","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id1","line":3},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":4},{"title":"存取元素","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id2","line":4},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":5},{"title":"多维数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id3","line":5},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":6},{"title":"结构数组","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id4","line":6},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":7},{"title":"内存结构","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id5","line":7},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":8},{"title":"ufunc运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#ufunc","line":8},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":9},{"title":"广播","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id6","line":9},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":10},{"title":"ufunc的方法","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id7","line":10},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":11},{"title":"矩阵运算","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8","line":11},{"title":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","target":"./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png","line":12},{"title":"文件存取","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9","line":12}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#上一篇文章": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12986343,-0.0376543,0.00621995,-0.03506882,0.05886149,-0.00121226,-0.02575877,-0.06635443,0.02146421,0.00644713,0.08339957,-0.08160715,0.02580433,-0.01645329,0.00112794,-0.03012583,-0.00239599,-0.00955726,-0.02845667,-0.00886647,0.12112895,-0.01360099,0.05041384,-0.05592898,0.01235357,0.07751209,-0.01542885,-0.0179125,-0.00872245,-0.17921866,0.05058446,0.01637876,-0.00364753,-0.01322069,0.08286631,-0.00159161,0.00385907,0.02710778,-0.00787503,0.03652698,-0.00392223,0.00090107,0.00624703,0.02242159,0.01706134,-0.07116333,-0.0142843,-0.016656,0.00972768,-0.02089481,-0.0523744,-0.00715484,-0.03594841,-0.0193826,0.03116834,0.01125669,0.08518533,0.04969671,0.01073082,0.04195889,-0.00160542,0.03582929,-0.18919151,0.05325955,0.08178952,-0.01041769,-0.03446781,0.01915027,0.04511048,0.00504543,-0.0638454,0.06433491,-0.03583203,0.09817295,0.01308159,-0.02323676,0.04441064,0.00006968,-0.04250063,-0.05281455,-0.06090578,0.06309102,-0.0456556,-0.00114464,-0.02643394,0.02593337,0.01468536,-0.00012927,0.02759445,-0.00924002,0.03411818,-0.00349952,0.02172802,0.10352753,-0.0164543,-0.02261094,0.07951611,0.0631076,0.00308625,0.09116428,-0.04639844,-0.00063868,0.02769597,0.00672637,0.01156312,-0.05134019,-0.03851755,-0.02582674,0.01775143,0.01864662,-0.00002829,-0.00247389,0.0276801,-0.03953806,0.04612694,-0.01705771,-0.04948582,-0.01395798,-0.07437866,0.00122739,-0.00188956,-0.02404163,0.04892716,-0.02493628,0.01255588,-0.03423591,-0.00474671,0.02625101,0.0611444,0.0282222,0.07395644,-0.0082887,-0.07814436,-0.02302979,0.0246719,-0.02448689,-0.06053447,0.01824064,0.00634704,-0.06311777,0.0207827,-0.1100217,0.00047559,-0.03246879,-0.10820473,0.08728608,-0.06366906,0.01064745,0.00189058,-0.04382277,-0.02247812,0.06588925,-0.03859738,-0.03832304,0.03081856,-0.03257819,0.07174756,0.07644667,-0.03818122,-0.0292315,-0.01712186,-0.06878011,-0.03595068,0.08388353,-0.03583286,-0.07969622,-0.05497947,0.02713227,-0.03287397,-0.0378365,0.03557101,-0.0103915,-0.0127234,0.02749515,0.07280445,-0.02124699,0.01605858,-0.071292,0.01616708,0.02089864,-0.02103527,-0.0552207,-0.02894795,-0.0060932,-0.00619783,-0.07135706,0.00407202,-0.01951129,0.02657884,0.01360809,-0.02481456,0.00194066,0.02704746,-0.07162717,-0.0335818,0.01627493,-0.00238128,-0.0206407,0.06713775,-0.08278677,0.11091086,-0.00173847,0.01331143,0.04355315,-0.02257383,-0.02100137,0.01340477,-0.02159371,0.03981234,0.02683613,-0.00584846,-0.04542522,-0.00294263,-0.01703231,-0.02178217,0.01005115,0.04975536,0.05621746,0.0414446,0.03697584,-0.00964289,-0.07909569,-0.11284,-0.1980686,0.01560874,0.0113014,-0.07548152,0.01463046,-0.05767028,0.04857045,0.01167341,0.0307864,0.07590669,0.08124238,0.00974201,-0.04116571,-0.00865448,-0.00157416,0.03337105,0.07823134,-0.02007721,-0.00515294,0.02544022,0.03074264,0.01064528,-0.03297692,0.01481431,-0.02023503,-0.02368749,0.11164857,0.03465569,0.06863993,0.01671053,0.03126959,0.03321714,-0.04621604,-0.14030832,0.06484973,0.0149794,-0.05366891,0.03177677,-0.02273075,0.00873947,0.01275294,0.02914644,0.01545634,-0.02881415,-0.01842872,0.01819254,-0.01467567,-0.01280417,-0.02792119,0.01251634,-0.01072332,0.06748704,0.00159149,0.06791492,-0.01828635,-0.00780749,-0.05306201,0.01820338,-0.02970431,0.01899172,0.00232144,-0.02978365,0.00935895,-0.06360744,0.00095665,-0.0642434,-0.01510556,-0.04035499,0.05034418,0.00541477,-0.03527385,0.13574646,0.02840209,-0.00073511,0.00759319,0.00859512,0.00907557,-0.02630117,0.02868718,-0.06704758,0.04439671,0.03318363,0.10122112,0.03026795,0.01018086,-0.03398084,-0.00287364,-0.04324741,0.06011997,-0.00136416,-0.05903666,-0.01570799,0.02390209,0.04434439,0.12298015,0.00452325,-0.29456061,0.03675692,0.01228839,0.01480772,0.0030911,0.00502753,0.03994023,-0.00252563,-0.02115711,0.02083225,-0.04658771,0.00307685,-0.02259233,-0.08009622,-0.02008787,0.00259751,0.07707286,0.01440978,0.07134382,0.04954793,0.02117365,-0.00005355,0.23041035,0.00644055,0.02968551,-0.01635808,-0.01770636,0.05118908,0.06456451,-0.00079582,0.01219272,-0.0173705,0.04765388,-0.03923865,0.02280807,0.08932729,0.01950289,-0.01207485,0.03670987,0.01151123,-0.03839488,-0.00698576,-0.12722275,-0.00197759,0.08468085,-0.03362086,-0.02436667,-0.10135886,-0.03114301,0.00853213,-0.05163609,0.02349185,-0.03190964,0.01506407,0.0545431,0.03974637,0.03856572,-0.04634958,-0.00760729,-0.02493067,0.04602366,-0.05908954,0.11001178,0.11057413,0.01360842],"last_embed":{"hash":"e96335d24cabf9e6e94e2ffccdd969f362cc99dba009698c1fc9f4101916bffb","tokens":286}}},"text":null,"length":0,"last_read":{"hash":"e96335d24cabf9e6e94e2ffccdd969f362cc99dba009698c1fc9f4101916bffb","at":1757414819252},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#上一篇文章","lines":[563,566],"size":80,"outlinks":[{"title":"软件包的安装和介绍","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":3}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#上一篇文章#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12902138,-0.03727538,0.00559835,-0.03417959,0.0602278,-0.00310076,-0.02365585,-0.06652258,0.02040249,0.00760029,0.08368113,-0.08068586,0.02421973,-0.01578025,-0.00013741,-0.03124678,-0.0013942,-0.00835563,-0.02963969,-0.00515899,0.11968954,-0.01313155,0.04984418,-0.05622861,0.01296986,0.07677252,-0.01623256,-0.01721019,-0.01132691,-0.17979243,0.05061272,0.01399098,-0.005052,-0.01393163,0.08103286,-0.00305176,0.00373255,0.02685031,-0.00702107,0.03634207,-0.00150212,0.00011231,0.00592632,0.02444766,0.01303952,-0.07180728,-0.01352153,-0.01533509,0.01099009,-0.02196315,-0.05437551,-0.00986838,-0.03619032,-0.01968078,0.03135914,0.00964182,0.08434866,0.04820403,0.00953257,0.04427264,-0.00261989,0.03573565,-0.19023369,0.0526688,0.0807189,-0.01114665,-0.0347933,0.01957205,0.0435687,0.00208251,-0.06548891,0.06527391,-0.03736811,0.09889957,0.01345473,-0.02449658,0.04631991,-0.00125358,-0.04237832,-0.05107912,-0.06126324,0.06058521,-0.0458118,-0.00111493,-0.02762776,0.02722903,0.01514978,0.00290494,0.02990898,-0.00857496,0.03296133,-0.00314248,0.0225244,0.10243917,-0.01620946,-0.02248684,0.08058988,0.06589511,0.00719059,0.08988899,-0.04807309,-0.00104234,0.02691254,0.00899022,0.01151715,-0.04946477,-0.03818777,-0.02416209,0.01822043,0.01923047,0.00235048,-0.00360271,0.02867841,-0.03982825,0.04593251,-0.01641556,-0.05073878,-0.01524466,-0.07633147,0.00016249,-0.00066823,-0.02435763,0.04953467,-0.02645543,0.01277151,-0.0329225,-0.00330565,0.02473361,0.06015753,0.02921516,0.07431098,-0.01007925,-0.07808577,-0.02437488,0.02688045,-0.02258405,-0.06035291,0.01890049,0.00468412,-0.06486315,0.02199803,-0.11110703,-0.00152908,-0.03133662,-0.1073466,0.08735345,-0.06415734,0.01025907,0.0029813,-0.04455655,-0.02282885,0.06666334,-0.04044113,-0.03816154,0.03034386,-0.03210759,0.07325383,0.07404654,-0.03836814,-0.0260713,-0.016706,-0.06779364,-0.03350483,0.08499397,-0.03818892,-0.07973316,-0.05549241,0.02644552,-0.0337557,-0.03767262,0.03488492,-0.01238923,-0.01141299,0.02943417,0.07205424,-0.02112555,0.01548475,-0.07064946,0.01521054,0.02184851,-0.02259348,-0.05520354,-0.02882303,-0.00685613,-0.00602099,-0.06817573,0.00494823,-0.01994096,0.02622765,0.01479372,-0.02570246,0.00259479,0.02651129,-0.07292961,-0.03320486,0.01930551,-0.00212709,-0.01892278,0.06736924,-0.08278761,0.11038747,-0.00004957,0.01491259,0.04664899,-0.0199379,-0.01999481,0.01300122,-0.02185272,0.04132859,0.02436334,-0.00447065,-0.04736664,-0.00362471,-0.01877863,-0.02404684,0.01076518,0.05145521,0.05536808,0.04110713,0.03817788,-0.00879999,-0.08332115,-0.11396676,-0.19753098,0.01788514,0.01032327,-0.07682879,0.01545065,-0.05733722,0.04703414,0.01279774,0.02817663,0.07418311,0.08165208,0.0099185,-0.04157182,-0.00983366,-0.00053669,0.03186303,0.0760947,-0.02120334,-0.00689687,0.02689097,0.02727855,0.00936455,-0.03340358,0.01582984,-0.02036953,-0.02377152,0.11262843,0.03481677,0.07069526,0.01563981,0.03154087,0.03472817,-0.04601352,-0.14116417,0.06377981,0.01375925,-0.05188246,0.03304731,-0.02053999,0.00948669,0.0127725,0.02751607,0.01684072,-0.02725064,-0.01738831,0.01887093,-0.01308626,-0.01190504,-0.02677683,0.01306192,-0.00950073,0.06657945,0.00186823,0.06660733,-0.01849343,-0.00774089,-0.05212098,0.01932718,-0.02866525,0.01749266,0.00370561,-0.02952325,0.01008803,-0.06319535,0.00279169,-0.06338305,-0.01600752,-0.03939175,0.04928464,0.00353739,-0.03422049,0.13556233,0.02851858,-0.00156637,0.00505896,0.0091172,0.00988214,-0.02380184,0.02609849,-0.06677049,0.04461034,0.03503687,0.1023211,0.02889993,0.01170022,-0.03338559,-0.00343373,-0.04151805,0.06125033,-0.00212333,-0.05664281,-0.01432244,0.022745,0.04551971,0.12510404,0.00657081,-0.29394692,0.03603195,0.01168408,0.01442491,0.00253665,0.00399889,0.04014032,-0.00025331,-0.02153681,0.02004705,-0.04561499,0.00102967,-0.02408956,-0.07814712,-0.02113692,0.00315755,0.07518099,0.01518846,0.07318273,0.04871331,0.02240784,0.00016347,0.23119734,0.00456303,0.02978931,-0.01563604,-0.01853989,0.05165325,0.06396633,0.00087421,0.01558366,-0.01721915,0.04662284,-0.04082922,0.02380831,0.08908468,0.020271,-0.01142615,0.03629613,0.00775232,-0.03762611,-0.00848081,-0.12680401,-0.00271848,0.08364931,-0.03322989,-0.0238415,-0.10147011,-0.03300139,0.00753152,-0.05302661,0.02389517,-0.03152592,0.01362497,0.05578107,0.03636884,0.03839443,-0.04591241,-0.00816932,-0.02561042,0.04539979,-0.05971869,0.11102577,0.10880223,0.01380463],"last_embed":{"hash":"bafdeb11ee514015e48db7bb9d5e8c1de607588c7b6c2d3a3c196317fc16ac45","tokens":283}}},"text":null,"length":0,"last_read":{"hash":"bafdeb11ee514015e48db7bb9d5e8c1de607588c7b6c2d3a3c196317fc16ac45","at":1757414819294},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#上一篇文章#{1}","lines":[565,566],"size":68,"outlinks":[{"title":"软件包的安装和介绍","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#下一篇文章": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12926935,-0.04106166,0.00741861,-0.02720872,0.0596154,0.0013421,-0.01308333,-0.06433245,0.02235604,0.00615355,0.07743604,-0.08227085,0.02033748,-0.01112168,-0.00092337,-0.03502822,-0.0075013,-0.01469605,-0.0262824,-0.00636079,0.12436898,-0.01357877,0.05062589,-0.05308377,0.01520274,0.07310209,-0.01913689,-0.01090624,-0.00703498,-0.17975959,0.0569797,0.01418275,-0.00182173,-0.01534758,0.0788042,0.00003795,0.00528498,0.02756481,-0.00745754,0.04561774,0.00207352,-0.00446577,0.0106262,0.01931102,0.01306314,-0.07094459,-0.01296887,-0.01640495,0.00212455,-0.02009005,-0.0571583,-0.01274683,-0.03478827,-0.015965,0.03448241,0.01258163,0.08266345,0.05184437,0.00646667,0.03863161,0.00009598,0.0383202,-0.1908637,0.05293959,0.08162989,-0.01173164,-0.04037177,0.02413821,0.03810919,0.00560669,-0.06251689,0.06353295,-0.03553154,0.09928238,0.0106643,-0.02352195,0.04731755,0.00051922,-0.04360286,-0.05489134,-0.0615343,0.0654105,-0.04621322,-0.00202813,-0.02972377,0.02190123,0.01590173,0.00330882,0.0337113,-0.01304371,0.03842473,-0.00263765,0.02086009,0.10008585,-0.01793716,-0.02115177,0.08809008,0.07630824,0.01312799,0.09195507,-0.05252951,0.00178942,0.03321869,0.00645525,0.01273219,-0.05286318,-0.03239564,-0.03186616,0.02115407,0.02872534,-0.00192058,-0.00258732,0.02657673,-0.03458079,0.0426284,-0.01058466,-0.04737075,-0.01224224,-0.07517911,0.00314133,-0.00236172,-0.02182946,0.03919196,-0.0235547,0.01363267,-0.03085877,-0.00041117,0.0257487,0.06178366,0.02556774,0.0803998,-0.00950107,-0.08180007,-0.0202725,0.02426716,-0.02819767,-0.05530874,0.01846572,0.00603475,-0.0667876,0.02406127,-0.12087791,-0.00570325,-0.03364814,-0.10466745,0.08922241,-0.06692086,0.0033947,0.00479618,-0.04827822,-0.0248359,0.06698377,-0.03275503,-0.04532268,0.02487165,-0.02994829,0.07131144,0.07210971,-0.03253228,-0.02799376,-0.01926328,-0.07016855,-0.03633194,0.08261363,-0.0380066,-0.07717317,-0.05379067,0.03244695,-0.03488174,-0.04289313,0.03609915,-0.01522395,-0.0141378,0.0190927,0.07437064,-0.02075551,0.01060115,-0.0674159,0.01328326,0.0174315,-0.02905304,-0.06150218,-0.02595262,-0.00277356,-0.00892021,-0.06357919,0.00524637,-0.01814617,0.02712962,0.01711793,-0.01693024,-0.00662603,0.02065319,-0.0689844,-0.03570304,0.02086585,-0.0018002,-0.02321716,0.06451934,-0.07746921,0.10830742,-0.0019578,0.01280305,0.04807154,-0.01933577,-0.0276065,0.01529298,-0.02301042,0.0436109,0.02873018,-0.00674875,-0.04418446,-0.00966222,-0.02133698,-0.0186976,0.00900767,0.04993396,0.05049428,0.03733682,0.03704046,-0.00484495,-0.08257899,-0.11334437,-0.19444278,0.01088703,0.0050689,-0.07990056,0.01701687,-0.05027291,0.04278451,0.01992759,0.0332131,0.06945929,0.08027023,0.01912338,-0.042877,-0.0071268,-0.00003929,0.02849404,0.07271027,-0.0279719,-0.01148372,0.02451569,0.02666612,0.01140232,-0.02896276,0.01275309,-0.02109256,-0.02441673,0.11458236,0.03253648,0.0642864,0.02124267,0.02586143,0.02873981,-0.04246638,-0.13027535,0.06090221,0.01117038,-0.05404258,0.03287265,-0.02632163,0.01017649,0.01037487,0.02828864,0.01703033,-0.0248551,-0.02233122,0.01662101,-0.01967173,-0.01614748,-0.02074575,0.01633543,-0.00573499,0.06396093,0.00466437,0.06795111,-0.01721145,-0.01012411,-0.0566281,0.011441,-0.02917072,0.01798992,0.00077879,-0.03135027,0.00677289,-0.0644026,0.01166991,-0.06710343,-0.01603504,-0.0361029,0.04803089,0.00472476,-0.03210185,0.13851583,0.02791121,-0.00546444,0.01489468,0.00428137,0.01129889,-0.02810033,0.02733293,-0.06094701,0.04279099,0.03218921,0.10199361,0.03048194,0.01766673,-0.03251848,0.00027065,-0.03801274,0.06438072,-0.00214234,-0.05581358,-0.01666812,0.0148209,0.04280269,0.12373696,0.01424987,-0.29684469,0.04066211,0.00628761,0.01883161,-0.00073126,0.00737041,0.03675488,-0.00310571,-0.0214134,0.02400042,-0.04141776,0.00490299,-0.02101861,-0.07723679,-0.02625988,0.00963071,0.08037212,0.00985251,0.07907236,0.05871037,0.02377374,-0.00068911,0.23314203,0.00267237,0.03310686,-0.01352892,-0.02104591,0.05023904,0.07168354,-0.00274757,0.01644428,-0.0205944,0.04879415,-0.04110673,0.02372071,0.08285802,0.0188606,-0.01103593,0.03543484,0.00262462,-0.04380002,-0.00725421,-0.12566122,-0.00741575,0.08801784,-0.02520949,-0.03153059,-0.10242895,-0.02993714,0.00535026,-0.04852751,0.02097801,-0.03437234,0.01876677,0.05370061,0.03357929,0.04382357,-0.04389034,-0.00176299,-0.02716418,0.04470202,-0.05978499,0.10272182,0.10754211,0.00943539],"last_embed":{"hash":"44f90851aead9aee24b82933f60d5932aff27055fe2f2653bf140783e3a62f01","tokens":288}}},"text":null,"length":0,"last_read":{"hash":"44f90851aead9aee24b82933f60d5932aff27055fe2f2653bf140783e3a62f01","at":1757414819330},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#下一篇文章","lines":[567,570],"size":86,"outlinks":[{"title":"SciPy-数值计算库","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":3}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#下一篇文章#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12910593,-0.03982152,0.0074915,-0.02727567,0.0601668,0.00122227,-0.01352778,-0.06463857,0.02147539,0.0069948,0.07760912,-0.08157496,0.02022543,-0.0109641,-0.00275639,-0.03549308,-0.00720051,-0.01322438,-0.02588327,-0.00449585,0.1238477,-0.01362525,0.05016571,-0.05398709,0.01537382,0.07255537,-0.02123978,-0.01121287,-0.00796368,-0.18112697,0.0566712,0.01206978,-0.00279389,-0.01533676,0.07768625,-0.00073795,0.00481102,0.02804725,-0.00691151,0.04590746,0.00291356,-0.00471141,0.00971021,0.01978614,0.01182158,-0.0708835,-0.01290502,-0.01592626,0.00355284,-0.02059756,-0.05783847,-0.01367133,-0.03502651,-0.01574288,0.03464305,0.01148755,0.081735,0.05117292,0.00600458,0.03975582,0.00034202,0.03833546,-0.19194782,0.05275973,0.08041286,-0.01091065,-0.04031777,0.02307746,0.03703476,0.00523814,-0.06448323,0.06325271,-0.03620965,0.09904545,0.01081749,-0.02467127,0.04832187,0.00041309,-0.04340713,-0.05397185,-0.06108254,0.0650174,-0.04664045,-0.00254542,-0.03123932,0.02187863,0.01645889,0.00469888,0.03461968,-0.01248795,0.03812257,-0.00194891,0.0222525,0.09917434,-0.017756,-0.02110745,0.08884685,0.07708833,0.01499949,0.09207613,-0.05393334,0.00173564,0.03332863,0.00842112,0.01323226,-0.05213864,-0.03261806,-0.02985176,0.02190652,0.02923643,-0.00133726,-0.00256414,0.0260228,-0.03412278,0.04246629,-0.01076471,-0.04781163,-0.01047149,-0.07568242,0.00256627,-0.00200048,-0.02333616,0.03964772,-0.02332693,0.01420114,-0.0308563,-0.00035078,0.02647793,0.06093565,0.02522423,0.07975648,-0.01132954,-0.08159962,-0.02037136,0.02525549,-0.02707673,-0.05556945,0.01962229,0.00625977,-0.06825153,0.02419346,-0.12099129,-0.00626055,-0.03172963,-0.10410725,0.08920614,-0.06613041,0.00503653,0.00502977,-0.04835137,-0.02455111,0.06707041,-0.03387799,-0.04554043,0.02395499,-0.02842396,0.07086441,0.0702066,-0.03362544,-0.02664292,-0.01821456,-0.07018589,-0.0350613,0.08331705,-0.03828409,-0.07669602,-0.0535409,0.03173888,-0.03619652,-0.04165998,0.03617926,-0.01754412,-0.01402887,0.01910214,0.07442655,-0.01985032,0.01112838,-0.06695016,0.01272514,0.01765189,-0.02994572,-0.06138469,-0.02537509,-0.00168142,-0.00859506,-0.06301305,0.00581,-0.01883662,0.02646795,0.01802252,-0.01782126,-0.00590409,0.01967384,-0.07065788,-0.03479262,0.02181721,-0.00228528,-0.02213586,0.06491683,-0.07796839,0.10839233,-0.0011487,0.01357624,0.04938678,-0.01848312,-0.026399,0.01476077,-0.02324858,0.04470441,0.02666181,-0.00616942,-0.0458002,-0.00922789,-0.02195432,-0.01983687,0.00914196,0.04998702,0.05014997,0.03724925,0.03669278,-0.00397452,-0.08512084,-0.11230561,-0.1945395,0.01247295,0.00551044,-0.08048581,0.01781147,-0.05039217,0.04224396,0.02078133,0.03212473,0.06839595,0.07988127,0.01957303,-0.04153021,-0.00739034,0.0002068,0.02841644,0.07177135,-0.02909169,-0.01082133,0.0256607,0.02607843,0.01095125,-0.02878097,0.01329441,-0.02020708,-0.02471465,0.11548585,0.03143525,0.0663024,0.01893196,0.02510496,0.02828649,-0.0428779,-0.1302321,0.06086091,0.01122045,-0.05287392,0.03409462,-0.02601275,0.01161308,0.0095681,0.02713643,0.0176517,-0.02395017,-0.02034434,0.01752963,-0.0184094,-0.0165698,-0.02110136,0.01581679,-0.00538386,0.06317505,0.00480309,0.06733932,-0.01788828,-0.01019391,-0.05601395,0.01167653,-0.02955488,0.01788972,0.00110286,-0.03077247,0.0069387,-0.06427652,0.01241933,-0.06625274,-0.01713898,-0.03567182,0.04679598,0.00367142,-0.0317822,0.13778435,0.02811196,-0.0071953,0.01341732,0.00511727,0.0116682,-0.02664322,0.02653398,-0.06055,0.04250415,0.03139488,0.1016868,0.03038876,0.01870247,-0.03309223,-0.00038281,-0.03688809,0.06535098,-0.00253852,-0.05535338,-0.01606505,0.01470153,0.04337535,0.12426307,0.01480039,-0.29694661,0.0406823,0.00642536,0.01847047,-0.00084827,0.00665077,0.03775602,-0.00133268,-0.02061228,0.02305995,-0.0411491,0.00374914,-0.02209956,-0.07604502,-0.02605279,0.00941383,0.07942615,0.0106363,0.07947423,0.05801464,0.02359691,0.00000633,0.23360322,0.00179275,0.03424164,-0.01294622,-0.02101192,0.04989959,0.07152614,-0.00206021,0.01750616,-0.02020284,0.04845184,-0.0416926,0.02411596,0.08449663,0.01916868,-0.01043983,0.03507902,0.00113421,-0.04335735,-0.00728959,-0.12618916,-0.00725369,0.08813514,-0.02451577,-0.03067502,-0.10198854,-0.03107523,0.00446895,-0.05023427,0.02055735,-0.03445676,0.01792566,0.05368066,0.03108042,0.04412366,-0.04445397,-0.00205185,-0.02821124,0.04460127,-0.06013961,0.1041465,0.10655706,0.00853308],"last_embed":{"hash":"d27f477cb29b7c44a4811c589ae56195053dc821cc1f0e4346748eb6cf9f9b21","tokens":285}}},"text":null,"length":0,"last_read":{"hash":"d27f477cb29b7c44a4811c589ae56195053dc821cc1f0e4346748eb6cf9f9b21","at":1757414819364},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#[首页目录](http://old.sebug.net/paper/books/scipydoc/index.html)#下一篇文章#{1}","lines":[569,570],"size":74,"outlinks":[{"title":"SciPy-数值计算库","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.118806,-0.03070278,0.01926899,-0.01607519,0.04790946,-0.01019294,-0.02625126,-0.05317884,0.01234421,0.01032762,0.06362459,-0.09140877,0.00860208,-0.01748061,-0.01214795,-0.03599916,-0.00013291,0.00011935,-0.02377922,-0.01050223,0.12498841,-0.01830014,0.05433868,-0.0463501,0.00388988,0.08208436,-0.02231094,-0.02330831,-0.00986143,-0.19878606,0.0503167,0.01263897,-0.00609141,-0.01428173,0.07191229,0.01731335,-0.01157068,0.03533797,-0.02321043,0.05459597,0.0035515,-0.00727955,0.00235292,0.01997796,0.0120352,-0.06447557,-0.00284996,-0.02171553,-0.00222337,-0.02438336,-0.05451946,-0.02413446,-0.03115694,-0.01221494,0.03724715,0.00965219,0.08221871,0.05525944,0.00610011,0.04717593,0.00543701,0.05760057,-0.20835282,0.06213851,0.07480825,-0.02071691,-0.05828347,0.02432274,0.03873396,-0.00002945,-0.06452955,0.05658067,-0.02057696,0.09465247,0.02556695,-0.01873178,0.05327936,-0.01549633,-0.03475437,-0.05637166,-0.05844151,0.06453101,-0.05319887,-0.0058512,-0.01151345,0.01681861,0.02344171,-0.00276085,0.03086407,-0.0251513,0.04217063,-0.01268249,0.01191347,0.10196557,-0.0140662,-0.01446294,0.08840653,0.07727812,0.0064219,0.08929094,-0.04791798,0.00096128,0.03955831,0.01921787,0.0178241,-0.05181298,-0.04141147,-0.02951199,0.0206156,0.02879661,0.00533994,-0.01361996,0.02273142,-0.03026949,0.04176436,-0.02271804,-0.03461615,-0.00490894,-0.0677631,0.00626292,-0.00850821,-0.02307975,0.05644163,-0.02877288,0.02097845,-0.02124052,-0.00958952,0.02828105,0.0588204,0.02451193,0.07655468,-0.00839734,-0.07650167,-0.02042145,0.0131571,-0.02329413,-0.05224178,0.02783647,0.00926866,-0.07530235,0.00923281,-0.11773998,-0.00703611,-0.02319648,-0.11205032,0.07698029,-0.05966113,0.00825946,-0.00246212,-0.05013387,-0.03100089,0.05539928,-0.04227029,-0.04947374,0.02580502,-0.03230548,0.0640007,0.07638865,-0.02867665,-0.01425806,-0.01434533,-0.0771845,-0.04072718,0.08923151,-0.03915168,-0.07408589,-0.05669666,0.01938926,-0.04475353,-0.02969084,0.05205476,-0.01023209,0.00020111,0.05249296,0.06736546,-0.02948671,-0.00679912,-0.06507579,0.02241529,0.00988512,-0.03626543,-0.06321102,-0.03299229,-0.00487417,-0.01103921,-0.06179471,0.00753041,-0.0161258,0.0295249,0.02291391,-0.01179323,0.00163667,0.02978808,-0.08209562,-0.03123499,0.02256971,0.00584146,-0.02297994,0.05254719,-0.05530421,0.08887371,0.00177491,0.01363209,0.05346326,-0.01393363,-0.0261759,0.01566367,-0.02094227,0.05516968,0.01899149,0.00024325,-0.0514984,-0.01493301,-0.0233837,-0.01299399,0.01322269,0.046965,0.05804102,0.03005034,0.0462641,-0.01543603,-0.09183487,-0.1014908,-0.19606411,0.01146853,0.00062286,-0.07563344,0.01506149,-0.05327667,0.0454232,0.00463392,0.0301942,0.07558727,0.07163784,0.01836069,-0.03393466,0.00424204,0.00152675,0.03093832,0.07067782,-0.02794224,-0.0046928,0.02967038,0.02540708,0.0072448,-0.01561751,-0.01356832,-0.0317928,-0.02698456,0.13066983,0.02957696,0.06718747,0.02459268,0.02814928,0.02151022,-0.03452188,-0.13688216,0.06882398,0.01896358,-0.04559031,0.03281431,-0.01538229,0.00037372,0.00557639,0.04597796,0.02051565,-0.02042374,-0.01732102,0.03254697,-0.01908411,-0.01089665,-0.02236648,0.01652624,0.00542337,0.07211859,0.0002363,0.04673721,-0.03028599,-0.01916857,-0.04790723,0.02332802,-0.03481216,0.01635539,-0.01071053,-0.04105021,0.01680031,-0.0571731,0.00087978,-0.06890371,-0.02150145,-0.04860268,0.04618527,0.00192048,-0.02480871,0.14822468,0.03456484,-0.005817,0.00549944,-0.00409903,0.02193246,-0.00940568,0.02268735,-0.06169728,0.03603709,0.0287228,0.09472039,0.03704948,0.01467824,-0.02829181,0.00145353,-0.03176938,0.05735522,-0.00584121,-0.04036023,0.00336267,0.01772288,0.05930728,0.12428111,0.0282692,-0.28815538,0.03612442,0.01794563,0.01506518,-0.00377321,0.00348393,0.04461265,-0.00539698,-0.01313043,0.0062481,-0.02290334,0.00005709,-0.0084081,-0.06953913,-0.0213768,0.00679718,0.08230853,0.01242628,0.06018826,0.05553672,0.0149586,0.00303967,0.22924258,-0.00677773,0.02309143,-0.01691009,-0.02955413,0.05754704,0.06322624,0.00471123,0.00633792,-0.00706963,0.0480922,-0.04542665,0.01077339,0.09432448,0.0134618,-0.01760615,0.03047002,0.00693731,-0.04605934,-0.00563427,-0.13394168,0.00138466,0.07248557,-0.02907012,-0.01539189,-0.10126401,-0.04327469,0.0255012,-0.04466867,0.00941545,-0.03986596,0.03181487,0.03147135,0.02047566,0.03693502,-0.04781913,-0.00383548,-0.02633602,0.02226497,-0.06203552,0.10947863,0.10457715,0.01698267],"last_embed":{"hash":"034132ab5f059961e5628b384ca7f5281a9cffafe80193d7e2d0bf5d5a4ee7bb","tokens":456}}},"text":null,"length":0,"last_read":{"hash":"034132ab5f059961e5628b384ca7f5281a9cffafe80193d7e2d0bf5d5a4ee7bb","at":1757414819399},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索","lines":[571,584],"size":441,"outlinks":[{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":7},{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":9},{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":10},{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":11},{"title":"HYRY Studio","target":"http://hyry.dip.jp/blogt.py","line":13},{"title":"Sphinx","target":"http://sphinx.pocoo.org/","line":13}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{1}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.11794613,-0.03349032,0.00276641,-0.0273396,0.06113606,-0.00715652,-0.0116442,-0.05858455,0.02165456,0.00722016,0.06962794,-0.07570992,0.01611427,-0.01779004,-0.00590181,-0.03268548,-0.00635297,-0.00357063,-0.02573338,0.00641265,0.1197037,-0.00843203,0.05142351,-0.05792179,0.01686331,0.07516734,-0.01821743,-0.01758888,-0.01049161,-0.19059056,0.05756841,0.01166953,-0.00283162,-0.01737241,0.07060521,0.00258353,0.01153466,0.02806549,-0.01619173,0.05269666,0.01421957,-0.00693218,0.00570929,0.01723409,0.00366404,-0.07530008,-0.01315601,-0.02619596,0.01259767,-0.03102613,-0.05793028,-0.02593113,-0.03617751,-0.00969489,0.02943624,0.01308159,0.07754703,0.04432363,0.00059155,0.04430392,-0.00191864,0.03683618,-0.20220603,0.06041178,0.08160912,-0.01453797,-0.03461662,0.02465839,0.03698741,0.00526998,-0.06581677,0.05540853,-0.03208246,0.10317564,0.02194163,-0.01797212,0.04954064,-0.00592802,-0.03559447,-0.05827814,-0.06504069,0.05965534,-0.04055778,-0.00780952,-0.02879114,0.01767772,0.018101,-0.001609,0.03636841,-0.01518071,0.03747644,-0.01029848,0.02211639,0.1044988,-0.01006972,-0.01517566,0.07822105,0.07240115,0.02173052,0.09326828,-0.05723358,-0.00075993,0.04008133,0.01923709,0.01419641,-0.04263964,-0.0276996,-0.03085465,0.01674965,0.02265232,0.00595973,-0.01028829,0.03244185,-0.02598774,0.0335581,-0.00970035,-0.0441665,-0.01791919,-0.07635438,0.0002412,-0.00494599,-0.0232292,0.04230108,-0.02151638,0.02813578,-0.03640788,-0.01790715,0.03389935,0.05128591,0.02626156,0.08031181,-0.01680483,-0.08462568,-0.02467771,0.02597402,-0.02433532,-0.05711825,0.0305156,0.01145996,-0.06280765,0.0203199,-0.11246184,-0.00280585,-0.02883012,-0.12073622,0.08553248,-0.06508695,0.02350963,0.0002616,-0.04902176,-0.02213558,0.05742124,-0.04813245,-0.04321447,0.02694179,-0.02498408,0.07116455,0.07754336,-0.03603168,-0.02680324,-0.03199212,-0.07531892,-0.02458004,0.08405896,-0.03509539,-0.06241019,-0.04917844,0.03511309,-0.03258668,-0.03788429,0.04132694,-0.01902607,-0.00733284,0.02597308,0.07282088,-0.02612686,0.01365898,-0.05616055,0.02449671,0.01402574,-0.0298453,-0.06166037,-0.0290955,-0.00749757,-0.00289727,-0.05338703,0.00027216,-0.02344435,0.03081756,0.02540596,-0.02117503,-0.00310912,0.01834141,-0.06890468,-0.03692201,0.02853247,0.00467382,-0.02187106,0.06456567,-0.06923361,0.10584085,0.00747479,0.01697938,0.05989756,-0.01258601,-0.02532944,0.02008167,-0.02056627,0.0563901,0.0195203,0.000329,-0.05816552,-0.01352722,-0.02521055,-0.02855054,-0.00650502,0.04386963,0.0497052,0.04190801,0.03863541,-0.00395501,-0.09252021,-0.10648803,-0.1973649,0.02374054,0.00979235,-0.08259203,0.02867466,-0.04018535,0.04642888,0.01771349,0.02617229,0.06794119,0.07581852,0.02069367,-0.03347762,-0.01793462,-0.0069584,0.02588313,0.06397442,-0.03179567,-0.01570266,0.02473013,0.02254417,0.00243068,-0.02520773,0.01303794,-0.0223047,-0.02720403,0.11432301,0.02821124,0.07596619,0.0235136,0.02525858,0.03507655,-0.04261914,-0.13533948,0.05777011,0.01391169,-0.05492998,0.04448941,-0.02386568,0.00073179,0.00984632,0.02233176,0.01829501,-0.02154405,-0.02184293,0.02365433,-0.01629827,-0.01817888,-0.02140125,0.01339721,0.00208823,0.06268322,0.00594478,0.05540577,-0.02508375,-0.01333093,-0.0588645,0.02369594,-0.0273338,0.01677455,0.00677553,-0.03129644,0.00699161,-0.06964926,-0.00026639,-0.06821684,-0.01590064,-0.03456181,0.03766452,-0.00320787,-0.02410065,0.14309952,0.03396527,-0.01146959,0.00145464,0.000812,0.01845314,-0.01673788,0.01770926,-0.06150714,0.05633566,0.02934186,0.09062157,0.02145324,0.0183503,-0.03046871,-0.00598779,-0.03146281,0.05891283,0.00054995,-0.05450444,-0.01365466,0.01472788,0.05011209,0.11962734,0.02054843,-0.29268897,0.04080459,0.00365915,0.01605516,0.00703134,0.00709919,0.04040986,-0.00940542,-0.01318179,0.01397678,-0.03424199,-0.00680784,-0.02375706,-0.06677025,-0.01979917,0.01062827,0.08692536,-0.00111537,0.07406156,0.05431251,0.02423005,0.00136849,0.23013659,-0.00437491,0.04559586,-0.01568402,-0.01972969,0.05306382,0.07445689,0.0010253,0.02229213,-0.02010716,0.05081619,-0.04988348,0.01889496,0.094317,0.01081309,-0.01009801,0.02541895,-0.00500599,-0.0362692,-0.01503114,-0.13107689,-0.0049145,0.08870676,-0.02766527,-0.01279707,-0.11428788,-0.034896,0.00643433,-0.04356569,0.01806783,-0.03143443,0.02014582,0.04972541,0.03109009,0.0356985,-0.0450659,-0.00465661,-0.03466148,0.04044604,-0.05389262,0.10405546,0.10350494,0.00528935],"last_embed":{"hash":"cfc8604e24ec8dc206e8c3033e56debfcf61a76c0cec9c420b0f54e703efc80e","tokens":250}}},"text":null,"length":0,"last_read":{"hash":"cfc8604e24ec8dc206e8c3033e56debfcf61a76c0cec9c420b0f54e703efc80e","at":1757414819450},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{1}","lines":[575,576],"size":40,"outlinks":[],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{2}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12701233,-0.03958418,0.00776909,-0.02987031,0.06161783,-0.00100927,-0.0106283,-0.06571364,0.02220747,0.00744005,0.07749196,-0.08250599,0.01918328,-0.01262604,-0.00639202,-0.03657937,-0.00849374,-0.01257924,-0.02641893,-0.00152609,0.12253705,-0.01297461,0.04889,-0.05389363,0.01392003,0.07278739,-0.02275964,-0.01310224,-0.00843099,-0.18241377,0.05711334,0.01098345,-0.00502301,-0.01652029,0.07697248,-0.00232402,0.00553608,0.02934045,-0.00620023,0.04836461,0.00426942,-0.00343,0.0111348,0.02039223,0.00840445,-0.07267781,-0.01401726,-0.01427724,0.0031089,-0.02014598,-0.05559444,-0.01636496,-0.03187031,-0.01601028,0.03503392,0.01022372,0.07932438,0.05126599,0.00467062,0.04032432,-0.00223485,0.03702714,-0.19062763,0.05150992,0.08063324,-0.01100283,-0.03961452,0.02388112,0.03711281,0.00476704,-0.06526975,0.06153369,-0.0377638,0.10070792,0.01151005,-0.02544377,0.05227757,-0.00022119,-0.04314711,-0.05339552,-0.06297439,0.06296515,-0.04729362,0.00030969,-0.03540248,0.02280298,0.0164882,0.00810159,0.03625761,-0.01329036,0.03953876,-0.00197297,0.0245255,0.09854632,-0.01880992,-0.01972439,0.09126946,0.07730728,0.01795676,0.09265183,-0.05693414,0.00068303,0.03082227,0.00862996,0.01448765,-0.05210467,-0.03454559,-0.0284963,0.01994637,0.02750413,0.00178088,-0.00300475,0.02940264,-0.03401679,0.04208736,-0.00953591,-0.04866722,-0.01200974,-0.07591249,0.00280977,0.00009319,-0.02270218,0.04106745,-0.02327309,0.01621216,-0.03245854,0.00013462,0.02644789,0.06100367,0.02754113,0.08068112,-0.01340642,-0.08162469,-0.02053115,0.02308193,-0.02409148,-0.05574649,0.02449808,0.00684606,-0.06731439,0.02605773,-0.11735691,-0.00437013,-0.0286953,-0.10281603,0.08501516,-0.06601769,0.00849566,0.00817575,-0.05008143,-0.02571491,0.06515785,-0.03845743,-0.04574635,0.02536189,-0.02811665,0.07006963,0.06889964,-0.03439733,-0.02561018,-0.01660042,-0.06784093,-0.03269525,0.0809047,-0.03777667,-0.0732702,-0.05241414,0.03216423,-0.03183204,-0.04262134,0.03445827,-0.01859795,-0.01084539,0.01955546,0.07543363,-0.0214537,0.01296492,-0.0675261,0.01152958,0.01773105,-0.03077609,-0.06349199,-0.02671367,-0.00272836,-0.00819054,-0.06195428,0.00421886,-0.01628104,0.02617673,0.01818025,-0.0175522,-0.00795232,0.01810205,-0.07258866,-0.03285554,0.02150239,-0.00158057,-0.019812,0.06500737,-0.0776814,0.1095182,0.00228578,0.01610599,0.048937,-0.01623023,-0.0260604,0.01562396,-0.02512682,0.0465665,0.02628477,-0.00272135,-0.04776984,-0.00765263,-0.02501643,-0.02092726,0.00444857,0.04796067,0.04962699,0.03609155,0.03614554,-0.00642012,-0.08657142,-0.11410941,-0.19524319,0.01339222,0.00624929,-0.08082041,0.01867194,-0.04818597,0.04137106,0.02421545,0.03052038,0.06831897,0.0765845,0.01765367,-0.04060594,-0.00872318,0.00082707,0.02526947,0.06984571,-0.03046822,-0.01264567,0.027481,0.02603116,0.00990634,-0.02882491,0.01517866,-0.02112211,-0.02364537,0.11542947,0.03345164,0.07043246,0.01987689,0.02398962,0.02887968,-0.04234613,-0.13126607,0.05993416,0.01201672,-0.05413618,0.03682156,-0.02629306,0.01059238,0.0070869,0.0237597,0.01771874,-0.02459948,-0.0180872,0.01502719,-0.01694492,-0.01839943,-0.02115039,0.01359278,-0.00344469,0.0635459,0.00583915,0.06433372,-0.01753281,-0.01219934,-0.05507739,0.01518879,-0.02871027,0.01588808,0.00206032,-0.03350315,0.00673289,-0.06105006,0.0103741,-0.06467692,-0.01827636,-0.0352042,0.04864552,0.00009454,-0.02862485,0.13757403,0.02717078,-0.01091095,0.01023422,0.00487916,0.01299504,-0.0251433,0.02089796,-0.06161039,0.04491807,0.0302379,0.10359217,0.02737916,0.02079289,-0.03238667,-0.00219284,-0.03140305,0.065443,-0.0032716,-0.05276779,-0.01210942,0.01529184,0.0437845,0.12318128,0.01477875,-0.29531032,0.04058959,0.00358264,0.02004991,-0.00182966,0.00892323,0.03674304,-0.00141791,-0.02145707,0.02421264,-0.04134436,0.00162109,-0.02343316,-0.07683229,-0.02474128,0.01059812,0.0809672,0.01054641,0.08039012,0.0587469,0.02511209,0.00160494,0.23434021,-0.00125834,0.03747834,-0.01211503,-0.01933074,0.0493834,0.07475018,-0.00158406,0.01625513,-0.02107552,0.04691793,-0.04456714,0.02465548,0.08606776,0.01891748,-0.01000215,0.0363993,-0.00034458,-0.04213673,-0.01068484,-0.12490465,-0.00746816,0.08683942,-0.02392201,-0.03083064,-0.10557884,-0.03294071,0.00548665,-0.05229679,0.0214039,-0.03298422,0.01739046,0.05506679,0.03063213,0.04539191,-0.04587937,-0.00392115,-0.02679332,0.04480425,-0.06366676,0.1048544,0.10468831,0.00691828],"last_embed":{"hash":"a3c0ac11ea453e6ab99524cc578516eb6f64ecdcd7bfbb0c0a22bb143e788582","tokens":247}}},"text":null,"length":0,"last_read":{"hash":"a3c0ac11ea453e6ab99524cc578516eb6f64ecdcd7bfbb0c0a22bb143e788582","at":1757414819480},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{2}","lines":[577,578],"size":68,"outlinks":[{"title":"下一篇","target":"http://old.sebug.net/paper/books/scipydoc/scipy_intro.html","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{3}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12778197,-0.0371706,0.00715274,-0.03626229,0.06132825,-0.00181574,-0.02448345,-0.06662615,0.02204556,0.0092295,0.08123387,-0.0826117,0.02124608,-0.01931534,-0.00421532,-0.03369929,-0.00647827,-0.00548884,-0.02571286,-0.00116933,0.12106404,-0.01128616,0.05042862,-0.05582355,0.01167716,0.07406017,-0.02061082,-0.01686918,-0.00849242,-0.18124038,0.05294042,0.01132426,-0.00542627,-0.01482057,0.08192454,-0.00087818,0.00515973,0.02970402,-0.0030005,0.04295646,-0.00002366,-0.00350568,0.00641329,0.01841879,0.01196316,-0.07111133,-0.01642635,-0.01480674,0.00785272,-0.02137201,-0.05118766,-0.01261831,-0.03645182,-0.01931548,0.03425366,0.01099119,0.08138793,0.05079682,0.00729377,0.040945,-0.00319116,0.0349702,-0.19017626,0.05337169,0.08046572,-0.01177005,-0.03734979,0.01908267,0.04074376,0.00312015,-0.06685688,0.06354239,-0.0372062,0.10069114,0.01180605,-0.02687629,0.05068105,0.00135287,-0.04165038,-0.05353734,-0.06185149,0.06013731,-0.04920289,0.0013744,-0.03488127,0.0227029,0.01816732,0.00783225,0.03313145,-0.01068114,0.03679315,-0.00444224,0.02864084,0.101368,-0.01703566,-0.02104921,0.08704063,0.06634156,0.01202561,0.09104273,-0.05501768,-0.0023952,0.02760931,0.01047714,0.01670782,-0.0500651,-0.0383081,-0.02371495,0.01978884,0.01917673,0.00412377,-0.00407933,0.02891789,-0.03745709,0.04358165,-0.016194,-0.05280386,-0.0154598,-0.07371303,0.00248685,0.00231487,-0.02581627,0.04950295,-0.02518562,0.01651641,-0.03247808,-0.00211567,0.02654572,0.06016929,0.02836064,0.07413594,-0.0156096,-0.08036105,-0.02184601,0.0261142,-0.01888108,-0.05762186,0.02563659,0.00668882,-0.06670875,0.0254945,-0.10930066,0.00120592,-0.02664196,-0.10318839,0.08004567,-0.06437366,0.01922562,0.00931664,-0.04627196,-0.02908657,0.06556701,-0.04346063,-0.04093838,0.03014473,-0.02925779,0.07093545,0.06851852,-0.03950357,-0.02451625,-0.01466074,-0.06817336,-0.03255193,0.07701768,-0.03543212,-0.07762829,-0.05486454,0.02704364,-0.02909428,-0.03987284,0.03443818,-0.01273462,-0.01060585,0.02569749,0.07514828,-0.02408866,0.01868843,-0.07056111,0.01364521,0.018119,-0.02732085,-0.05957245,-0.02915188,-0.00810799,-0.00556994,-0.06517696,0.00526219,-0.01880034,0.0232674,0.01718876,-0.0201042,-0.00193958,0.02134471,-0.07642344,-0.02811897,0.01929235,-0.00139624,-0.0177033,0.06629933,-0.08115464,0.10992507,0.00283426,0.01879581,0.04216459,-0.02226123,-0.01909082,0.01404034,-0.02495055,0.04361211,0.0226296,-0.00419063,-0.04684074,-0.00066752,-0.02346371,-0.02334512,0.00316938,0.04698507,0.0533134,0.04264686,0.03718429,-0.01220229,-0.08064933,-0.11324589,-0.1977616,0.02111132,0.01056388,-0.07669088,0.01863693,-0.0512553,0.0450832,0.0170562,0.02759642,0.07433891,0.07939231,0.01059227,-0.03729178,-0.00658369,0.00088554,0.02501924,0.0737242,-0.02377064,-0.00922507,0.02722766,0.02428494,0.00970175,-0.03103733,0.01593004,-0.01910527,-0.02418857,0.11667699,0.04053792,0.07533123,0.01584443,0.0270881,0.03094679,-0.04308584,-0.14207132,0.06198395,0.01475724,-0.05162921,0.04052676,-0.02424907,0.01054612,0.0054629,0.02358279,0.01681706,-0.02774921,-0.01233399,0.01808866,-0.01402378,-0.01525404,-0.02657091,0.0071464,-0.00609196,0.06609953,0.00686031,0.06465741,-0.01652172,-0.00972767,-0.05327995,0.02321874,-0.02564931,0.01631099,0.00452741,-0.03534067,0.0115219,-0.06473688,0.00040125,-0.0621338,-0.01717398,-0.03919771,0.05125977,0.00288799,-0.02904716,0.1348426,0.025163,-0.00625606,0.00528623,0.00441675,0.01365718,-0.02288303,0.02205797,-0.06665591,0.04345091,0.02841753,0.10009849,0.0260544,0.01871441,-0.03260479,-0.00534275,-0.03394547,0.06098256,-0.00133005,-0.05304788,-0.01248906,0.02077186,0.04724445,0.12267993,0.00808302,-0.29233295,0.0394123,0.00846643,0.01999388,-0.00126204,0.00600839,0.03664417,-0.00236897,-0.01796581,0.02049257,-0.0478792,-0.00086486,-0.02456355,-0.07793617,-0.01938079,0.00535268,0.0792029,0.01217278,0.07551008,0.05146723,0.02334375,-0.00079431,0.2320856,-0.00162695,0.03316872,-0.01064568,-0.01797123,0.05295064,0.0717347,-0.00092648,0.01085541,-0.01844291,0.04256521,-0.04234581,0.02561407,0.09109942,0.02242435,-0.00946882,0.03742295,0.00399003,-0.04173975,-0.01137191,-0.12719627,-0.00133272,0.08174674,-0.03213974,-0.02472178,-0.10667242,-0.03543593,0.00685094,-0.05423442,0.02124292,-0.0320904,0.01396135,0.05784866,0.03364332,0.04083451,-0.04794668,-0.00530493,-0.02302581,0.04316552,-0.06568249,0.1149613,0.10564667,0.00562893],"last_embed":{"hash":"7db29cf876a0efe0061fbdd5ae74f0d8e3537a8ff11a25572b0a71770a359b3a","tokens":245}}},"text":null,"length":0,"last_read":{"hash":"7db29cf876a0efe0061fbdd5ae74f0d8e3537a8ff11a25572b0a71770a359b3a","at":1757414819550},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{3}","lines":[579,579],"size":65,"outlinks":[{"title":"上一篇","target":"http://old.sebug.net/paper/books/scipydoc/install.html","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{4}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.13018155,-0.03780979,0.00763146,-0.02916462,0.06192784,-0.00188757,-0.01314437,-0.06468138,0.02227241,0.00883294,0.07524891,-0.08022105,0.01841825,-0.01266297,-0.00652564,-0.03299641,-0.00713604,-0.01130101,-0.02935337,-0.00282865,0.12391409,-0.01446895,0.04874584,-0.05459023,0.01593406,0.07445017,-0.02489473,-0.01267555,-0.00665663,-0.1848851,0.05915097,0.01518431,-0.00572773,-0.01620574,0.07716154,-0.00095124,0.00629586,0.02896325,-0.00525502,0.04949326,0.00394554,-0.00230478,0.01015174,0.01934366,0.0101795,-0.0744302,-0.01734353,-0.01553132,0.00314168,-0.02096569,-0.05389685,-0.01634194,-0.03343205,-0.01483311,0.03692526,0.01096724,0.07800967,0.05132658,0.00586134,0.04093568,-0.00027516,0.03620647,-0.19324468,0.05368462,0.07965,-0.01064411,-0.04073932,0.02431217,0.03562532,0.00599711,-0.0640315,0.05993074,-0.03682693,0.09987354,0.01374412,-0.02563732,0.05199817,-0.00037951,-0.04413597,-0.05523168,-0.06343064,0.06547903,-0.04794796,0.00001556,-0.0359643,0.02095336,0.01479819,0.00713204,0.03527191,-0.01423968,0.04169559,-0.00184853,0.02487948,0.10113431,-0.01694778,-0.02045878,0.09052203,0.07602169,0.01992766,0.09280496,-0.05444017,0.00034428,0.03225424,0.01079089,0.01528766,-0.05249229,-0.03500957,-0.0289566,0.01842531,0.02737421,-0.00195047,-0.00360003,0.02852015,-0.03547883,0.04133432,-0.01152875,-0.04930759,-0.01192449,-0.07410962,0.00053667,-0.00116355,-0.02096762,0.03900945,-0.02206486,0.01792846,-0.03445644,-0.00388765,0.02856837,0.06311142,0.02677947,0.08068688,-0.00960486,-0.08186371,-0.01943686,0.0195463,-0.02532797,-0.05714054,0.02495573,0.00911273,-0.06609852,0.02470405,-0.11516285,-0.00194508,-0.02804716,-0.09997618,0.08522199,-0.06456898,0.00832061,0.00639514,-0.05110562,-0.02390622,0.06604594,-0.03575134,-0.04461903,0.02783431,-0.02900475,0.06690525,0.06993475,-0.03469804,-0.02759925,-0.01670016,-0.06563731,-0.03475117,0.07985629,-0.03626639,-0.07014676,-0.05185883,0.03220838,-0.03226621,-0.04301529,0.03584665,-0.020275,-0.01123266,0.01987513,0.07741153,-0.02094958,0.01479865,-0.06730624,0.01160698,0.01690142,-0.03286667,-0.06410805,-0.02645769,-0.00101947,-0.0082542,-0.06402341,0.00704344,-0.01838827,0.02846063,0.01863635,-0.01589613,-0.00783164,0.01739697,-0.07061191,-0.03386748,0.01960865,-0.00359212,-0.01845657,0.06526414,-0.07862163,0.10985765,0.00358271,0.01544948,0.04590216,-0.01788894,-0.02601185,0.0150124,-0.02710839,0.04733606,0.02511297,-0.00205324,-0.04705554,-0.00472189,-0.02408338,-0.01748473,0.00402207,0.04499428,0.04853484,0.03369183,0.03876778,-0.00860488,-0.08821204,-0.11268391,-0.19596721,0.0135106,0.00777152,-0.08212584,0.01937887,-0.05056398,0.04176335,0.02223117,0.03225527,0.07001396,0.07757922,0.01475073,-0.03970159,-0.01116752,0.00285386,0.02697988,0.06941258,-0.03089684,-0.01066626,0.02694801,0.02777913,0.00890862,-0.02687652,0.0168131,-0.01935862,-0.02282509,0.11650468,0.03281675,0.06980972,0.01970433,0.02412229,0.02825941,-0.04249215,-0.12949118,0.05993601,0.01452901,-0.05312514,0.03589969,-0.02941321,0.00781623,0.00513758,0.02521396,0.0194276,-0.02574524,-0.01882942,0.01419047,-0.01575499,-0.02046041,-0.02279389,0.01357771,-0.00286196,0.06206288,0.00591545,0.06445182,-0.01899372,-0.01264203,-0.05442891,0.01609715,-0.02949654,0.01676392,0.0011986,-0.03525793,0.00735506,-0.06105364,0.01164501,-0.06356672,-0.0182159,-0.03741445,0.04702328,0.0019975,-0.0280102,0.1397018,0.02624948,-0.01251847,0.01056148,0.00775122,0.0135168,-0.02204753,0.01993552,-0.05954193,0.04376518,0.02672126,0.1028271,0.02519451,0.02055502,-0.03432325,-0.00482323,-0.03211143,0.06278414,-0.00400292,-0.05589463,-0.01164881,0.01413716,0.04280395,0.12070262,0.01391208,-0.29520413,0.03996523,0.00424546,0.01859622,-0.002115,0.00829272,0.03501355,-0.00304011,-0.02051343,0.02478299,-0.04063355,0.00317606,-0.02115723,-0.07778154,-0.02171678,0.01041249,0.08031324,0.00813631,0.07929187,0.05659231,0.02324704,0.00214516,0.23543024,0.00061474,0.03769048,-0.01380983,-0.01802171,0.0481561,0.0750426,-0.00225666,0.0126401,-0.02122288,0.04953978,-0.0429631,0.02416031,0.086401,0.01432819,-0.01032266,0.03722496,-0.00127327,-0.04007301,-0.00845434,-0.1243141,-0.00609007,0.08624629,-0.02405698,-0.03227379,-0.10382734,-0.03130998,0.00770707,-0.05303186,0.02180657,-0.03336885,0.01728982,0.05791457,0.03056483,0.04210472,-0.04775666,-0.00556994,-0.02200332,0.04457925,-0.06106837,0.10456859,0.10745957,0.00808921],"last_embed":{"hash":"25282152e8b4a9b44c0e6ac248480d92ffbda5031514221c34da0f4b01211c1d","tokens":257}}},"text":null,"length":0,"last_read":{"hash":"25282152e8b4a9b44c0e6ac248480d92ffbda5031514221c34da0f4b01211c1d","at":1757414819565},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{4}","lines":[580,580],"size":79,"outlinks":[{"title":"←切换侧栏(Alt+X)","target":"http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{5}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12752987,-0.04040493,0.00795449,-0.02830568,0.06220856,-0.00083071,-0.01290546,-0.06404828,0.02069644,0.00775205,0.07563528,-0.08231195,0.01573955,-0.0142913,-0.00496258,-0.03416859,-0.00924252,-0.01176161,-0.02356955,-0.0009253,0.12394985,-0.01292296,0.05021375,-0.05520347,0.01395533,0.07294489,-0.02010615,-0.01329089,-0.00781754,-0.18362901,0.05830171,0.01349332,-0.00527202,-0.01578741,0.07562277,-0.00298488,0.00563738,0.03193529,-0.00678815,0.04868186,0.00548435,-0.00287157,0.01029667,0.01906469,0.01050115,-0.07279642,-0.01456089,-0.01552611,0.00305998,-0.02414412,-0.05888622,-0.01791397,-0.03250435,-0.01504159,0.03447229,0.01186652,0.07798287,0.04878945,0.00468145,0.0409759,-0.00087384,0.03743692,-0.19602334,0.05296328,0.07988982,-0.01174778,-0.03840937,0.02509312,0.03556248,0.00385689,-0.06476996,0.05910487,-0.03683205,0.09896236,0.01394752,-0.02401302,0.05163796,-0.00009352,-0.0406986,-0.05610587,-0.06285229,0.06191266,-0.0441989,-0.00196048,-0.03482552,0.02001517,0.01639574,0.00591963,0.03622561,-0.01241357,0.04209708,-0.0046117,0.0247189,0.10085336,-0.01819766,-0.01849652,0.08878601,0.07778654,0.01975764,0.09412921,-0.05638147,0.00067282,0.03315745,0.012254,0.01466156,-0.0518371,-0.03360062,-0.02844067,0.01774617,0.02783342,0.00073575,-0.00314955,0.02871735,-0.03281916,0.03973084,-0.00939611,-0.04712984,-0.01107359,-0.07562698,0.00294303,-0.00086246,-0.02210073,0.04094625,-0.02254088,0.0200573,-0.0327699,-0.00530518,0.02681881,0.05906202,0.02694627,0.0805819,-0.01233783,-0.08285702,-0.022594,0.02321572,-0.02329213,-0.05584555,0.02460626,0.00714664,-0.06432866,0.02578748,-0.11743361,-0.00378768,-0.02870077,-0.10611287,0.0873443,-0.06577204,0.01163462,0.00786238,-0.05011341,-0.02452536,0.06367772,-0.04015628,-0.04597279,0.02672704,-0.02884706,0.06956569,0.07136537,-0.03384545,-0.02701268,-0.01913125,-0.06807977,-0.03108725,0.08184194,-0.03760332,-0.07095873,-0.05138879,0.03257375,-0.0320248,-0.0423431,0.034511,-0.01930481,-0.01142942,0.02306107,0.0758854,-0.0219251,0.01388819,-0.06593841,0.01457283,0.01709555,-0.03143661,-0.06322311,-0.02602144,-0.00270249,-0.00733648,-0.0585366,0.00532193,-0.01876141,0.02679296,0.01939605,-0.01822413,-0.00766602,0.01744135,-0.07152764,-0.03288756,0.02169016,-0.00032441,-0.02085636,0.06575167,-0.07806247,0.10920167,0.00332515,0.01527232,0.04886904,-0.01708308,-0.0262846,0.01632697,-0.02307283,0.04779325,0.0252707,-0.00227899,-0.04836538,-0.00839517,-0.02619285,-0.02229971,0.00061207,0.04764881,0.05085396,0.03481742,0.03731347,-0.00684579,-0.08722846,-0.11269834,-0.1950852,0.01323738,0.00652963,-0.08295915,0.02097362,-0.04884836,0.04314324,0.02203219,0.02878278,0.07028644,0.07613993,0.01858734,-0.04008153,-0.0104157,0.00233938,0.02685526,0.06952719,-0.03283257,-0.01447523,0.02517042,0.0248287,0.0104603,-0.0281611,0.01602032,-0.02126241,-0.02404619,0.11495019,0.03087338,0.06992269,0.01981525,0.02399743,0.02972365,-0.04120456,-0.13079099,0.05894459,0.0117307,-0.05384346,0.03715935,-0.02569522,0.00800126,0.00883061,0.02376448,0.01862187,-0.02342888,-0.02157911,0.01663874,-0.016824,-0.02002153,-0.02146633,0.01402485,-0.00348674,0.06337379,0.00725798,0.0637894,-0.01996104,-0.01097659,-0.05676868,0.01556012,-0.02928265,0.01701009,0.00176053,-0.03311846,0.00783787,-0.06426319,0.0095657,-0.06482348,-0.01964954,-0.03537234,0.04723315,0.0023376,-0.02764586,0.13874361,0.02773075,-0.01142181,0.0094008,0.00334711,0.01373661,-0.02487631,0.02094803,-0.06088838,0.0449645,0.02887071,0.099563,0.02671278,0.02132006,-0.03314362,-0.00281003,-0.03205108,0.06348905,-0.00094939,-0.05458414,-0.01080206,0.01389632,0.04389939,0.12276665,0.0183613,-0.29346821,0.04096875,0.00512019,0.0197815,-0.00124632,0.00773359,0.03668676,-0.00544369,-0.02052648,0.02177957,-0.03649202,0.00102797,-0.02253758,-0.07411087,-0.02325978,0.01070728,0.0835472,0.00715557,0.07776658,0.05819299,0.02332059,0.00345907,0.23335774,-0.00095113,0.03975469,-0.01398196,-0.02062357,0.05176917,0.07317831,-0.00254052,0.01614212,-0.02168356,0.04782657,-0.04404316,0.02308727,0.08888376,0.0161103,-0.00984731,0.03587129,0.00071971,-0.04019416,-0.01064164,-0.12777461,-0.00619747,0.08843358,-0.02440347,-0.02990796,-0.10762636,-0.03115634,0.007018,-0.04980862,0.02074484,-0.03135901,0.01726143,0.05468893,0.03034146,0.04445729,-0.04753549,-0.00488482,-0.02642268,0.04323135,-0.06108653,0.10261535,0.10510982,0.0054532],"last_embed":{"hash":"8c4c105494ff42833cdef528de0198da0f285bbbf51b0d45f24c329c9bfee364","tokens":249}}},"text":null,"length":0,"last_read":{"hash":"8c4c105494ff42833cdef528de0198da0f285bbbf51b0d45f24c329c9bfee364","at":1757414819602},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{5}","lines":[581,582],"size":73,"outlinks":[{"title":"用Python做科学计算","target":"http://old.sebug.net/paper/books/scipydoc/index.html","line":1}],"class_name":"SmartBlock"},
"smart_blocks:印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{6}": {"path":null,"embeddings":{"TaylorAI/bge-micro-v2":{"vec":[-0.12159424,-0.02838639,0.02673654,-0.00286674,0.04419198,-0.00992167,-0.01190577,-0.05116627,0.00571203,0.01367023,0.06000677,-0.09459184,0.00518354,-0.01147274,-0.02216141,-0.02573426,-0.00477598,-0.00279952,-0.01203307,-0.00969995,0.12292439,-0.01707178,0.05482965,-0.0448456,-0.00162498,0.08984479,-0.03558162,-0.0299735,-0.00717895,-0.20115241,0.06158394,0.00895611,-0.01473029,-0.02188202,0.07712383,0.01617633,-0.01905176,0.03468718,-0.03125619,0.06160356,0.00162615,-0.00287903,0.00653503,0.01927686,0.01724413,-0.06284954,0.00011318,-0.01028087,-0.00469679,-0.0116788,-0.05119979,-0.02690157,-0.01852938,-0.01381268,0.03954873,0.00899078,0.08683569,0.05550335,0.01151217,0.04594938,0.00731083,0.05639112,-0.20551546,0.06125153,0.0710029,-0.01900879,-0.07142888,0.02139207,0.02671901,0.00711682,-0.05962714,0.05258636,-0.01857861,0.08957095,0.03449984,-0.01727442,0.05920071,-0.01103052,-0.02744229,-0.0524877,-0.06409221,0.06371034,-0.05907682,-0.00310413,-0.01500903,0.01393008,0.0244476,0.01137189,0.03498124,-0.03717169,0.04799386,-0.01467357,0.00883154,0.10055252,-0.02227132,-0.01074237,0.09557874,0.08223034,0.01042713,0.09895489,-0.04003858,0.00678122,0.03683268,0.00907524,0.01007155,-0.04629798,-0.0525317,-0.02936384,0.01884934,0.02987893,0.00777538,-0.01025332,0.0180776,-0.02660724,0.0434839,-0.02638374,-0.02841889,0.0088774,-0.06774469,0.00169051,-0.01064313,-0.01627147,0.05588977,-0.02380037,0.0241485,-0.02189355,0.00369914,0.02706085,0.06476864,0.0231647,0.0801046,-0.01165248,-0.08050427,-0.01586384,0.00257867,-0.03047357,-0.04515729,0.03082149,0.00388822,-0.06892288,-0.00485164,-0.11043446,-0.01599961,-0.01724581,-0.09870263,0.07243919,-0.04916781,-0.00010596,0.00054634,-0.05869369,-0.03740081,0.05429247,-0.04042746,-0.04939475,0.01887869,-0.03339344,0.05263435,0.07819773,-0.0289758,-0.01322608,0.00033283,-0.07591828,-0.04999096,0.09028092,-0.04016769,-0.06877311,-0.05801423,0.01618105,-0.04087211,-0.02766441,0.05326251,-0.00933647,-0.00226731,0.06144521,0.05961182,-0.02969619,-0.01620455,-0.06700891,0.01716293,0.00899008,-0.0262499,-0.06545649,-0.03781864,0.0071607,-0.01848079,-0.06398594,0.0039551,-0.00968601,0.03157637,0.00978205,-0.00349374,-0.00375719,0.03197708,-0.07967314,-0.0273512,0.01622366,0.00271211,-0.02184981,0.05758351,-0.04928228,0.09037146,-0.00482871,0.00672824,0.05304179,-0.00150716,-0.03305731,0.0030185,-0.0278181,0.04242367,0.01706709,0.00525977,-0.05327675,-0.01720763,-0.01924263,-0.0069603,0.0169826,0.0414305,0.05928681,0.01806735,0.04515866,-0.01436194,-0.09810305,-0.10250074,-0.20017788,0.00190373,-0.01413194,-0.07655557,0.00746821,-0.06033613,0.04491287,0.01380266,0.04010539,0.07930559,0.05881451,0.01876732,-0.02869262,0.00544252,-0.00292105,0.04121856,0.066508,-0.03579608,0.00607423,0.0391673,0.03394898,0.00470936,-0.0170201,-0.02818224,-0.02945475,-0.03580076,0.13851792,0.04167583,0.06789316,0.02757879,0.02307684,0.01290282,-0.03517109,-0.13455196,0.06180161,0.01710497,-0.03912461,0.02477335,-0.02253111,-0.00387082,-0.00364302,0.04857125,0.02105164,-0.03307785,-0.00417025,0.02532709,-0.02079472,-0.02089082,-0.02152003,0.01291937,0.0059308,0.07953229,-0.00805017,0.05068786,-0.0275546,-0.03001292,-0.0457055,0.02359322,-0.0353425,0.01424755,-0.01779666,-0.04738894,0.01265463,-0.04824886,0.00673818,-0.068194,-0.02783684,-0.05945469,0.05423965,-0.00186852,-0.01526108,0.14474329,0.02822404,-0.02325763,0.01592616,-0.01112716,0.02690219,-0.01198194,0.02400771,-0.05917137,0.02022915,0.02595023,0.09954625,0.04036279,0.0188207,-0.0205876,-0.00776769,-0.01477645,0.06372342,-0.01076386,-0.02398399,0.01014399,0.00769677,0.04357629,0.12106337,0.02563789,-0.2800929,0.04123721,0.02644196,0.02055511,-0.01261345,0.01322466,0.04876854,-0.00837824,-0.01241945,0.00801795,-0.013945,0.01304773,-0.00935012,-0.06643087,-0.02047125,0.0106581,0.07973583,0.01770667,0.05594551,0.06947231,0.01198088,0.00929306,0.23850092,0.00013329,0.01661572,-0.01902095,-0.02960754,0.05483216,0.0577016,0.00462205,0.0057504,-0.01294936,0.04518866,-0.04495012,0.00866446,0.09736431,0.01450545,-0.02610244,0.03692432,0.00969173,-0.05112113,-0.00589578,-0.12909608,-0.00080466,0.06613798,-0.01963707,-0.02323199,-0.08463747,-0.0493259,0.03612011,-0.06004408,0.00540622,-0.03741942,0.03718129,0.02140517,0.01830035,0.02754622,-0.05765187,-0.00425775,-0.02403023,0.02012756,-0.05195401,0.10253967,0.10323396,0.01728049],"last_embed":{"hash":"dd6d7516e58cb51673cb7d9067189915b42f09dd5922cb88ac1e92d85a34ceba","tokens":266}}},"text":null,"length":0,"last_read":{"hash":"dd6d7516e58cb51673cb7d9067189915b42f09dd5922cb88ac1e92d85a34ceba","at":1757414819633},"key":"印象笔记/Python/NumPy-快速处理数据.md#2　NumPy-快速处理数据<http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#numpy>![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]#[2.4　文件存取](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id8)[![[./_resources/NumPy-快速处理数据.resources/unknown_filename.4.png]]](http://old.sebug.net/paper/books/scipydoc/numpy_intro.html#id9)#快速搜索#{6}","lines":[583,584],"size":98,"outlinks":[{"title":"HYRY Studio","target":"http://hyry.dip.jp/blogt.py","line":1},{"title":"Sphinx","target":"http://sphinx.pocoo.org/","line":1}],"class_name":"SmartBlock"},
